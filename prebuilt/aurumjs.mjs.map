{"version":3,"file":"aurumjs.mjs","sources":["../dist/stream/event_emitter.js","../dist/stream/data_source.js","../dist/stream/array_data_source.js","../dist/utilities/linkedlist/linked_list_node.js","../dist/utilities/linkedlist/linked_list.js","../dist/utilities/cancellation_token.js","../dist/utilities/owner_symbol.js","../dist/nodes/aurum_element.js","../dist/utilities/aurum.js","../dist/nodes/button.js","../dist/nodes/div.js","../dist/nodes/input.js","../dist/nodes/li.js","../dist/nodes/span.js","../dist/nodes/style.js","../dist/nodes/ul.js","../dist/nodes/p.js","../dist/nodes/img.js","../dist/nodes/link.js","../dist/nodes/canvas.js","../dist/nodes/special/switch.js"],"sourcesContent":["export class EventEmitter {\n    constructor(config) {\n        this.subscribeChannel = [];\n        this.subscribeOnceChannel = [];\n        this.throttleCount = 0;\n        this.onAfterFire = [];\n        if (config) {\n            if (config.observable) {\n                this.makeObservable();\n            }\n            if (config.cancellationToken) {\n                config.cancellationToken.addCancelable(() => this.cancelAll());\n            }\n            if (config.throttled) {\n                this.throttle = config.throttled;\n            }\n        }\n    }\n    get subscriptions() {\n        return this.subscribeChannel.length;\n    }\n    get oneTimeSubscriptions() {\n        return this.subscribeOnceChannel.length;\n    }\n    linkEvent(eventToLink) {\n        if (!this.linkedEvents) {\n            this.linkedEvents = [];\n        }\n        this.linkedEvents.push(eventToLink);\n    }\n    unlinkEvent(eventToUnlink) {\n        if (!this.linkedEvents || !this.linkedEvents.includes(eventToUnlink)) {\n            throw new Error('Cannot unlink event that is not linked');\n        }\n        this.linkedEvents.splice(this.linkedEvents.indexOf(eventToUnlink), 1);\n    }\n    makeObservable() {\n        if (!this.onSubscribe) {\n            this.onSubscribe = new EventEmitter();\n            this.onSubscribeOnce = new EventEmitter();\n            this.onCancelAll = new EventEmitter();\n            this.onCancel = new EventEmitter();\n        }\n    }\n    swapSubscriptions(event) {\n        const sub = this.subscribeChannel;\n        const subOnce = this.subscribeOnceChannel;\n        this.subscribeChannel = event.subscribeChannel;\n        this.subscribeOnceChannel = event.subscribeOnceChannel;\n        event.subscribeChannel = sub;\n        event.subscribeOnceChannel = subOnce;\n    }\n    subscribe(callback, cancellationToken) {\n        if (this.onSubscribe) {\n            this.onSubscribe.fire();\n        }\n        const { facade } = this.createSubscription(callback, this.subscribeChannel, cancellationToken);\n        return facade;\n    }\n    hasSubscriptions() {\n        return this.subscriptions > 0 || this.oneTimeSubscriptions > 0;\n    }\n    subscribeOnce(cancellationToken) {\n        if (this.onSubscribeOnce) {\n            this.onSubscribeOnce.fire();\n        }\n        return new Promise((resolved) => {\n            this.createSubscription((data) => resolved(data), this.subscribeOnceChannel, cancellationToken);\n        });\n    }\n    cancelAll() {\n        if (this.onCancelAll !== undefined) {\n            this.onCancelAll.fire();\n        }\n    }\n    fire(data, data2, data3, data4, data5) {\n        if (this.throttle && this.throttleCount++ % this.throttle !== 0) {\n            return;\n        }\n        this.isFiring = true;\n        let length = this.subscribeChannel.length;\n        for (let i = 0; i < length; i++) {\n            this.subscribeChannel[i].callback(data);\n        }\n        length = this.subscribeOnceChannel.length;\n        if (this.subscribeOnceChannel.length > 0) {\n            for (let i = 0; i < length; i++) {\n                this.subscribeOnceChannel[i].callback(data);\n            }\n            this.subscribeOnceChannel.length = 0;\n        }\n        if (this.linkedEvents) {\n            for (let event of this.linkedEvents) {\n                event.fire(data, data2, data3, data4, data5);\n            }\n        }\n        this.isFiring = false;\n        if (this.onAfterFire.length > 0) {\n            this.onAfterFire.forEach((cb) => cb());\n            this.onAfterFire.length = 0;\n        }\n    }\n    createSubscription(callback, channel, cancellationToken) {\n        const that = this;\n        const subscription = {\n            callback\n        };\n        const facade = {\n            cancel() {\n                that.cancel(subscription, channel);\n            }\n        };\n        if (cancellationToken !== undefined) {\n            cancellationToken.addCancelable(() => that.cancel(subscription, channel));\n        }\n        channel.push(subscription);\n        return { subscription, facade };\n    }\n    cancel(subscription, channel) {\n        let index = channel.indexOf(subscription);\n        if (index >= 0) {\n            if (!this.isFiring) {\n                channel.splice(index, 1);\n            }\n            else {\n                this.onAfterFire.push(() => this.cancel(subscription, channel));\n            }\n        }\n    }\n}\n//# sourceMappingURL=event_emitter.js.map","export class DataSource {\n    constructor(initialValue) {\n        this.value = initialValue;\n        this.listeners = [];\n    }\n    update(newValue) {\n        this.value = newValue;\n        for (const l of this.listeners) {\n            l(newValue);\n        }\n    }\n    listen(callback, cancellationToken) {\n        var _a;\n        this.listeners.push(callback);\n        const cancel = () => {\n            const index = this.listeners.indexOf(callback);\n            if (index !== -1) {\n                this.listeners.splice(index, 1);\n            }\n        };\n        (_a = cancellationToken) === null || _a === void 0 ? void 0 : _a.addCancelable(() => {\n            cancel();\n        });\n        return cancel;\n    }\n    filter(callback, cancellationToken) {\n        const filteredSource = new DataSource();\n        this.listen((value) => {\n            if (callback(value)) {\n                filteredSource.update(value);\n            }\n        }, cancellationToken);\n        return filteredSource;\n    }\n    pipe(targetDataSource, cancellationToken) {\n        this.listen((v) => targetDataSource.update(v), cancellationToken);\n    }\n    map(callback, cancellationToken) {\n        const mappedSource = new DataSource(callback(this.value));\n        this.listen((value) => {\n            mappedSource.update(callback(value));\n        }, cancellationToken);\n        return mappedSource;\n    }\n    unique(cancellationToken) {\n        const uniqueSource = new DataSource();\n        this.listen((value) => {\n            if (value !== uniqueSource.value) {\n                uniqueSource.update(value);\n            }\n        }, cancellationToken);\n        return uniqueSource;\n    }\n    reduce(reducer, cancellationToken) {\n        const reduceSource = new DataSource();\n        this.listen((v) => reduceSource.update(reducer(reduceSource.value, v)), cancellationToken);\n        return reduceSource;\n    }\n    combine(otherSource, combinator, cancellationToken) {\n        const combinedDataSource = new DataSource();\n        this.listen(() => combinedDataSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        otherSource.listen(() => combinedDataSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        return combinedDataSource;\n    }\n    pick(key, cancellationToken) {\n        const subDataSource = new DataSource();\n        this.listen((v) => {\n            subDataSource.update(v[key]);\n        }, cancellationToken);\n        return subDataSource;\n    }\n    cancelAll() {\n        this.listeners.length = 0;\n    }\n}\n//# sourceMappingURL=data_source.js.map","import { EventEmitter } from './event_emitter';\nimport { DataSource } from './data_source';\nexport class ArrayDataSource {\n    constructor(initialData) {\n        if (initialData) {\n            this.data = initialData.slice();\n        }\n        else {\n            this.data = [];\n        }\n        this.onChange = new EventEmitter();\n    }\n    get length() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data.slice();\n    }\n    get(index) {\n        return this.data[index];\n    }\n    set(index, item) {\n        const old = this.data[index];\n        if (old === item) {\n            return;\n        }\n        this.data[index] = item;\n        this.onChange.fire({ operation: 'replace', target: old, count: 1, index, items: [item], newState: this.data });\n    }\n    swap(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const itemA = this.data[indexA];\n        const itemB = this.data[indexB];\n        this.data[indexB] = itemA;\n        this.data[indexA] = itemB;\n        this.onChange.fire({ operation: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n    }\n    swapItems(itemA, itemB) {\n        if (itemA === itemB) {\n            return;\n        }\n        const indexA = this.data.indexOf(itemA);\n        const indexB = this.data.indexOf(itemB);\n        if (indexA !== -1 && indexB !== -1) {\n            this.data[indexB] = itemA;\n            this.data[indexA] = itemB;\n        }\n        this.onChange.fire({ operation: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n    }\n    push(...items) {\n        this.data.push(...items);\n        this.onChange.fire({\n            operation: 'append',\n            count: items.length,\n            index: this.data.length - items.length,\n            items,\n            newState: this.data\n        });\n    }\n    unshift(...items) {\n        this.data.unshift(...items);\n        this.onChange.fire({ operation: 'prepend', count: items.length, items, index: 0, newState: this.data });\n    }\n    pop() {\n        const item = this.data.pop();\n        this.onChange.fire({\n            operation: 'remove',\n            count: 1,\n            index: this.data.length,\n            items: [item],\n            newState: this.data\n        });\n        return item;\n    }\n    merge(newData) {\n        for (let i = 0; i < newData.length; i++) {\n            if (this.data[i] !== newData[i]) {\n                if (this.length > i) {\n                    this.set(i, newData[i]);\n                }\n                else {\n                    this.push(newData[i]);\n                }\n            }\n        }\n        if (this.length > newData.length) {\n            this.removeRight(this.length - newData.length);\n        }\n    }\n    removeRight(count) {\n        const result = this.data.splice(this.length - count, count);\n        this.onChange.fire({ operation: 'remove', count, index: this.length - count, items: result, newState: this.data });\n    }\n    removeLeft(count) {\n        const result = this.data.splice(0, count);\n        this.onChange.fire({ operation: 'remove', count, index: 0, items: result, newState: this.data });\n    }\n    remove(item) {\n        const index = this.data.indexOf(item);\n        if (index !== -1) {\n            this.data.splice(index, 1);\n            this.onChange.fire({ operation: 'remove', count: 1, index, items: [item], newState: this.data });\n        }\n    }\n    clear() {\n        const items = this.data;\n        this.data = [];\n        this.onChange.fire({\n            operation: 'remove',\n            count: items.length,\n            index: 0,\n            items,\n            newState: this.data\n        });\n    }\n    shift() {\n        const item = this.data.shift();\n        this.onChange.fire({ operation: 'remove', items: [item], count: 1, index: 0, newState: this.data });\n        return item;\n    }\n    toArray() {\n        return this.data.slice();\n    }\n    filter(callback, cancellationToken) {\n        return new FilteredArrayView(this, callback, cancellationToken);\n    }\n    forEach(callbackfn, thisArg) {\n        return this.data.forEach(callbackfn, thisArg);\n    }\n    toDataSource() {\n        const stream = new DataSource(this.data);\n        this.onChange.subscribe((s) => {\n            stream.update(s.newState);\n        });\n        return stream;\n    }\n}\nexport class FilteredArrayView extends ArrayDataSource {\n    constructor(parent, filter, cancellationToken) {\n        const initial = parent.data.filter(filter);\n        super(initial);\n        this.parent = parent;\n        this.viewFilter = filter;\n        parent.onChange.subscribe((change) => {\n            let filteredItems;\n            switch (change.operation) {\n                case 'remove':\n                    for (const item of change.items) {\n                        this.remove(item);\n                    }\n                    break;\n                case 'prepend':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.unshift(...filteredItems);\n                    break;\n                case 'append':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.push(...filteredItems);\n                    break;\n                case 'swap':\n                    const indexA = this.data.indexOf(change.items[0]);\n                    const indexB = this.data.indexOf(change.items[1]);\n                    if (indexA !== -1 && indexB !== -1) {\n                        this.swap(indexA, indexB);\n                    }\n                    break;\n                case 'replace':\n                    const index = this.data.indexOf(change.target);\n                    if (index !== -1) {\n                        const acceptNew = this.viewFilter(change.items[0]);\n                        if (acceptNew) {\n                            this.set(index, change.items[0]);\n                        }\n                        else {\n                            this.remove(change.target);\n                        }\n                    }\n                    break;\n            }\n        }, cancellationToken);\n    }\n    updateFilter(filter) {\n        if (this.viewFilter === filter) {\n            return;\n        }\n        this.viewFilter = filter;\n        this.refresh();\n    }\n    refresh() {\n        this.clear();\n        const data = this.parent.data.filter(this.viewFilter);\n        this.push(...data);\n    }\n}\n//# sourceMappingURL=array_data_source.js.map","export class LinkedListNode {\n    constructor(data) {\n        this.data = data;\n    }\n    deleteNext() {\n        if (this.next) {\n            const overNext = this.next.next;\n            this.next.next = undefined;\n            this.next.previous = undefined;\n            this.next = overNext;\n            this.next.previous = this;\n        }\n    }\n    deletePrevious() {\n        if (this.previous) {\n            this.previous = this.previous.previous;\n            this.previous.next = undefined;\n            this.previous.previous = undefined;\n        }\n    }\n}\n//# sourceMappingURL=linked_list_node.js.map","import { LinkedListNode } from './linked_list_node';\nexport class LinkedList {\n    constructor(data = []) {\n        this.length = 0;\n        data.forEach((d) => this.append(d));\n    }\n    find(predicate) {\n        let ptr = this.rootNode;\n        while (ptr && !predicate(ptr)) {\n            ptr = ptr.next;\n        }\n        return ptr;\n    }\n    append(element) {\n        if (!this.rootNode && !this.lastNode) {\n            this.rootNode = this.lastNode = new LinkedListNode(element);\n        }\n        else {\n            this.lastNode.next = new LinkedListNode(element);\n            this.lastNode.next.previous = this.lastNode;\n            this.lastNode = this.lastNode.next;\n        }\n        this.length++;\n        return element;\n    }\n    forEach(cb) {\n        this.find((n) => {\n            cb(n.data);\n            return false;\n        });\n    }\n    prepend(element) {\n        if (!this.rootNode && !this.lastNode) {\n            this.rootNode = this.lastNode = new LinkedListNode(element);\n        }\n        else {\n            this.rootNode.previous = new LinkedListNode(element);\n            this.rootNode.previous.next = this.rootNode;\n            this.rootNode = this.rootNode.previous;\n        }\n        this.length++;\n        return element;\n    }\n    remove(element) {\n        if (element === this.rootNode.data) {\n            this.rootNode = this.rootNode.next;\n            this.length--;\n        }\n        else {\n            const result = this.find((e) => e.next && e.next.data === element);\n            if (result) {\n                if (result.next === this.lastNode) {\n                    this.lastNode = result;\n                }\n                result.deleteNext();\n                this.length--;\n            }\n        }\n    }\n}\n//# sourceMappingURL=linked_list.js.map","import { LinkedList } from './linkedlist/linked_list';\nexport class CancellationToken {\n    constructor(...cancellables) {\n        this.cancelables = new LinkedList(cancellables);\n        this._isCancelled = false;\n    }\n    get isCanceled() {\n        return this._isCancelled;\n    }\n    addCancelable(delegate) {\n        this.throwIfCancelled('attempting to add cancellable to token that is already cancelled');\n        this.cancelables.append(delegate);\n        if (this.cancelables.length > 200) {\n            console.log('potential memory leak: cancellation token has over 200 clean up calls');\n        }\n        return this;\n    }\n    removeCancelable(delegate) {\n        this.throwIfCancelled('attempting to remove cancellable from token that is already cancelled');\n        this.cancelables.remove(delegate);\n        return this;\n    }\n    addDisposable(disposable) {\n        this.addCancelable(() => disposable.dispose());\n        return this;\n    }\n    callIfNotCancelled(action) {\n        if (!this.isCanceled) {\n            action();\n        }\n    }\n    setTimeout(cb, time = 0) {\n        const id = setTimeout(cb, time);\n        this.addCancelable(() => clearTimeout(id));\n    }\n    setInterval(cb, time) {\n        const id = setInterval(cb, time);\n        this.addCancelable(() => clearInterval(id));\n    }\n    requestAnimationFrame(cb) {\n        const id = requestAnimationFrame(cb);\n        this.addCancelable(() => cancelAnimationFrame(id));\n    }\n    animationLoop(cb) {\n        let id = requestAnimationFrame(function f(time) {\n            cb(time);\n            id = requestAnimationFrame(f);\n        });\n        this.addCancelable(() => cancelAnimationFrame(id));\n    }\n    throwIfCancelled(msg) {\n        if (this.isCanceled) {\n            throw new Error(msg || 'cancellation token is cancelled');\n        }\n    }\n    chain(target, twoWays = false) {\n        if (twoWays) {\n            target.chain(this, false);\n        }\n        this.addCancelable(() => target.cancel());\n        return this;\n    }\n    registerDomEvent(eventEmitter, event, callback) {\n        eventEmitter.addEventListener(event, callback);\n        this.addCancelable(() => eventEmitter.removeEventListener(event, callback));\n        return this;\n    }\n    cancel() {\n        if (this.isCanceled) {\n            return;\n        }\n        this._isCancelled = true;\n        this.cancelables.forEach((c) => c());\n        this.cancelables = undefined;\n    }\n}\n//# sourceMappingURL=cancellation_token.js.map","export const ownerSymbol = Symbol('owner');\n//# sourceMappingURL=owner_symbol.js.map","import { DataSource } from '../stream/data_source';\nimport { CancellationToken } from '../utilities/cancellation_token';\nimport { ArrayDataSource } from '../stream/array_data_source';\nimport { ownerSymbol } from '../utilities/owner_symbol';\nexport class AurumElement {\n    constructor(props, domNodeName) {\n        this.domNodeName = domNodeName;\n        this.template = props.template;\n        this.cancellationToken = new CancellationToken();\n        this.node = this.create(props);\n        this.initialize(props);\n        if (props.onAttach) {\n            props.onAttach(this);\n        }\n    }\n    initialize(props) {\n        this.node.owner = this;\n        this.createEventHandlers([\n            'drag',\n            'dragstart',\n            'dragend',\n            'dragexit',\n            'dragover',\n            'dragenter',\n            'dragleave',\n            'blur',\n            'focus',\n            'click',\n            'dblclick',\n            'keydown',\n            'keyhit',\n            'keyup',\n            'mousedown, mouseup',\n            'mouseenter',\n            'mouseleave',\n            'mousewheel'\n        ], props);\n        this.bindProps(['id', 'draggable', 'tabindex', 'style'], props);\n        if (props.class) {\n            this.handleClass(props.class);\n        }\n        if (props.repeatModel) {\n            this.cachedChildren = [];\n            this.handleRepeat(props.repeatModel);\n        }\n    }\n    bindProps(keys, props) {\n        for (const key of keys) {\n            if (props[key]) {\n                this.assignStringSourceToAttribute(props[key], key);\n            }\n        }\n    }\n    createEventHandlers(keys, props) {\n        for (const key of keys) {\n            const computedEventName = 'on' + key[0].toUpperCase() + key.slice(1);\n            let eventEmitter;\n            Object.defineProperty(this, computedEventName, {\n                get() {\n                    if (!eventEmitter) {\n                        eventEmitter = new DataSource();\n                    }\n                    return eventEmitter;\n                },\n                set() {\n                    throw new Error(computedEventName + ' is read only');\n                }\n            });\n            if (props[computedEventName]) {\n                if (props[computedEventName] instanceof DataSource) {\n                    this[computedEventName].listen(props[computedEventName].update.bind(props.onClick), this.cancellationToken);\n                }\n                else if (typeof props[computedEventName] === 'function') {\n                    this[computedEventName].listen(props[computedEventName], this.cancellationToken);\n                }\n            }\n            this.cancellationToken.registerDomEvent(this.node, key, (e) => this[computedEventName].update(e));\n        }\n    }\n    handleRepeat(dataSource) {\n        if (dataSource instanceof ArrayDataSource) {\n            this.repeatData = dataSource;\n        }\n        else {\n            this.repeatData = new ArrayDataSource(dataSource);\n        }\n        if (this.repeatData.length) {\n            this.cachedChildren.push(...this.repeatData.toArray().map((i) => this.template.generate(i)));\n            this.renderRepeat();\n        }\n        this.repeatData.onChange.subscribe((change) => {\n            switch (change.operation) {\n                case 'swap':\n                    const itemA = this.cachedChildren[change.index];\n                    const itemB = this.cachedChildren[change.index2];\n                    this.cachedChildren[change.index2] = itemA;\n                    this.cachedChildren[change.index] = itemB;\n                    break;\n                case 'append':\n                    this.cachedChildren.push(...change.items.map((i) => this.template.generate(i)));\n                    break;\n                case 'remove':\n                    this.cachedChildren.splice(change.index, change.count);\n                    break;\n                default:\n                    this.cachedChildren.length = 0;\n                    this.cachedChildren.push(...this.repeatData.toArray().map((i) => this.template.generate(i)));\n                    break;\n            }\n            this.renderRepeat();\n        });\n    }\n    renderRepeat() {\n        if (this.rerenderPending) {\n            return;\n        }\n        setTimeout(() => {\n            for (let i = 0; i < this.cachedChildren.length; i++) {\n                if (this.node.childElementCount <= i) {\n                    this.addChildren(this.cachedChildren.slice(i, this.cachedChildren.length));\n                    break;\n                }\n                if (this.node.children[i].owner !== this.cachedChildren[i]) {\n                    if (!this.cachedChildren.includes(this.node.children[i].owner)) {\n                        this.node.children[i][ownerSymbol].remove();\n                        i--;\n                        continue;\n                    }\n                    const index = this.getChildIndex(this.cachedChildren[i].node);\n                    if (index !== -1) {\n                        this.swapChildren(i, index);\n                    }\n                    else {\n                        this.addChildAt(this.cachedChildren[i], i);\n                    }\n                }\n            }\n            while (this.node.childElementCount > this.cachedChildren.length) {\n                this.node[ownerSymbol].removeChild(this.node.lastChild[ownerSymbol]);\n            }\n            this.rerenderPending = false;\n        });\n        this.rerenderPending = true;\n    }\n    assignStringSourceToAttribute(data, key) {\n        if (typeof data === 'string') {\n            this.node.setAttribute(key, data);\n        }\n        else {\n            if (data.value) {\n                this.node.setAttribute(key, data.value);\n            }\n            data.unique(this.cancellationToken).listen((v) => this.node.setAttribute(key, v), this.cancellationToken);\n        }\n    }\n    handleClass(data) {\n        if (typeof data === 'string') {\n            this.node.className = data;\n        }\n        else if (data instanceof DataSource) {\n            if (data.value) {\n                if (Array.isArray(data.value)) {\n                    this.node.className = data.value.join(' ');\n                    data.unique(this.cancellationToken).listen(() => {\n                        this.node.className = data.value.join(' ');\n                    }, this.cancellationToken);\n                }\n                else {\n                    this.node.className = data.value;\n                    data.unique(this.cancellationToken).listen(() => {\n                        this.node.className = data.value;\n                    }, this.cancellationToken);\n                }\n            }\n            data.unique(this.cancellationToken).listen((v) => (this.node.className = v), this.cancellationToken);\n        }\n        else {\n            const value = data.reduce((p, c) => {\n                if (typeof c === 'string') {\n                    return `${p} ${c}`;\n                }\n                else {\n                    if (c.value) {\n                        return `${p} ${c.value}`;\n                    }\n                    else {\n                        return p;\n                    }\n                }\n            }, '');\n            this.node.className = value;\n            for (const i of data) {\n                if (i instanceof DataSource) {\n                    i.unique(this.cancellationToken).listen((v) => {\n                        const value = data.reduce((p, c) => {\n                            if (typeof c === 'string') {\n                                return `${p} ${c}`;\n                            }\n                            else {\n                                if (c.value) {\n                                    return `${p} ${c.value}`;\n                                }\n                                else {\n                                    return p;\n                                }\n                            }\n                        }, '');\n                        this.node.className = value;\n                    }, this.cancellationToken);\n                }\n            }\n        }\n    }\n    create(props) {\n        const node = document.createElement(this.domNodeName);\n        node[ownerSymbol] = this;\n        return node;\n    }\n    getChildIndex(node) {\n        let i = 0;\n        for (const child of node.children) {\n            if (child === node) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n    hasChild(node) {\n        for (const child of node.children) {\n            if (child === node) {\n                return true;\n            }\n        }\n        return false;\n    }\n    setInnerText(value) {\n        if (this.node.firstChild instanceof HTMLElement) {\n            throw new Error('Cannot combine text and child nodes into a single element');\n        }\n        this.node.innerText = value;\n    }\n    swapChildren(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const nodeA = this.node.children[indexA];\n        const nodeB = this.node.children[indexB];\n        nodeA.remove();\n        nodeB.remove();\n        if (indexA < indexB) {\n            this.addDomNodeAt(nodeB, indexA);\n            this.addDomNodeAt(nodeA, indexB);\n        }\n        else {\n            this.addDomNodeAt(nodeA, indexB);\n            this.addDomNodeAt(nodeB, indexA);\n        }\n    }\n    addDomNodeAt(node, index) {\n        if (index >= this.node.childElementCount) {\n            this.node.appendChild(node);\n        }\n        else {\n            this.node.insertBefore(node, this.node.children[index]);\n        }\n    }\n    remove() {\n        if (this.hasParent()) {\n            this.node.parentElement.removeChild(this.node);\n            this.dispose();\n        }\n    }\n    hasParent() {\n        return !!this.node.parentElement;\n    }\n    isConnected() {\n        return this.node.isConnected;\n    }\n    removeChild(child) {\n        child.dispose();\n        this.node.removeChild(child.node);\n    }\n    removeChildAt(index) {\n        const childNode = this.node.childNodes[index];\n        if (childNode) {\n            const child = childNode[ownerSymbol];\n            child.dispose();\n            this.node.removeChild(child.node);\n        }\n    }\n    clearChildren() {\n        while (this.node.firstChild) {\n            const owner = this.node.firstChild[ownerSymbol];\n            owner.dispose();\n            this.node.removeChild(this.node.firstChild);\n        }\n    }\n    addChild(child) {\n        if (child.node instanceof Template) {\n            return;\n        }\n        return this.node.appendChild(child.node);\n    }\n    addChildAt(child, index) {\n        if (child.node instanceof Template) {\n            return;\n        }\n        return this.addDomNodeAt(child.node, index);\n    }\n    addChildren(nodes) {\n        if (nodes.length === 0) {\n            return;\n        }\n        let dataSegments = [];\n        for (const c of nodes) {\n            if (c instanceof Template) {\n                continue;\n            }\n            if (typeof c === 'string') {\n                dataSegments.push(c);\n            }\n            else if (c instanceof DataSource) {\n                dataSegments.push(c);\n                this.setInnerText(c.value);\n                c.listen((v) => {\n                    const value = dataSegments.reduce((p, c) => { var _a; return p + (c instanceof DataSource ? (_a = c.value, (_a !== null && _a !== void 0 ? _a : '')).toString() : c); }, '');\n                    this.setInnerText(value);\n                }, this.cancellationToken);\n            }\n            else {\n                this.node.appendChild(c.node);\n            }\n        }\n        if (dataSegments.length) {\n            const value = dataSegments.reduce((p, c) => { var _a; return p + (c instanceof DataSource ? (_a = c.value, (_a !== null && _a !== void 0 ? _a : '')).toString() : c); }, '');\n            this.setInnerText(value);\n        }\n    }\n    dispose() {\n        this.cancellationToken.cancel();\n    }\n}\nexport class Template extends AurumElement {\n    constructor(props) {\n        super(props, 'template');\n        this.ref = props.ref;\n        this.generate = props.generator;\n    }\n}\n//# sourceMappingURL=aurum_element.js.map","import { Template } from '../nodes/aurum_element';\nimport { ownerSymbol } from './owner_symbol';\nexport class Aurum {\n    static attach(node, dom) {\n        if (dom[ownerSymbol]) {\n            throw new Error('This node is already managed by aurum and cannot be used');\n        }\n        dom.appendChild(node.node);\n        dom[ownerSymbol] = node;\n    }\n    static detach(domNode) {\n        if (domNode[ownerSymbol]) {\n            domNode[ownerSymbol].dispose();\n            domNode[ownerSymbol] = undefined;\n        }\n    }\n    static factory(node, args, ...innerNodes) {\n        if (typeof node === 'string') {\n            return;\n        }\n        const children = [].concat(...innerNodes).filter((e) => e);\n        const templateMap = {};\n        let defaultTemplate;\n        let hasRef = false;\n        for (const c of children) {\n            if (typeof c === 'string') {\n                continue;\n            }\n            if (c instanceof Template && (!c.ref || c.ref === 'default')) {\n                defaultTemplate = c;\n            }\n            if (c.ref) {\n                templateMap[c.ref] = c;\n                hasRef = true;\n            }\n        }\n        args = (args !== null && args !== void 0 ? args : {});\n        if (defaultTemplate) {\n            args.template = defaultTemplate;\n        }\n        if (hasRef) {\n            args.templateMap = templateMap;\n        }\n        let instance;\n        if (node.prototype) {\n            instance = new node(args || {});\n        }\n        else {\n            instance = node(args || {});\n        }\n        instance.addChildren(children);\n        return instance;\n    }\n}\n//# sourceMappingURL=aurum.js.map","import { AurumElement } from './aurum_element';\nexport class Button extends AurumElement {\n    constructor(props) {\n        super(props, 'button');\n    }\n}\n//# sourceMappingURL=button.js.map","import { AurumElement } from './aurum_element';\nexport class Div extends AurumElement {\n    constructor(props) {\n        super(props, 'div');\n    }\n}\n//# sourceMappingURL=div.js.map","import { AurumElement } from './aurum_element';\nexport class Input extends AurumElement {\n    constructor(props) {\n        var _a, _b, _c;\n        super(props, 'input');\n        if (props.inputValueSource) {\n            this.node.value = (_b = (_a = props.initialValue, (_a !== null && _a !== void 0 ? _a : props.inputValueSource.value)), (_b !== null && _b !== void 0 ? _b : ''));\n            props.inputValueSource.listen((value) => (this.node.value = value), this.cancellationToken);\n        }\n        else {\n            this.node.value = (_c = props.initialValue, (_c !== null && _c !== void 0 ? _c : ''));\n        }\n        this.bindProps(['placeholder'], props);\n        this.createEventHandlers(['input', 'change'], props);\n    }\n}\n//# sourceMappingURL=input.js.map","import { AurumElement } from './aurum_element';\nexport class Li extends AurumElement {\n    constructor(props) {\n        super(props, 'li');\n    }\n}\n//# sourceMappingURL=li.js.map","import { AurumElement } from './aurum_element';\nexport class Span extends AurumElement {\n    constructor(props) {\n        super(props, 'span');\n    }\n}\n//# sourceMappingURL=span.js.map","import { AurumElement } from './aurum_element';\nexport class Style extends AurumElement {\n    constructor(props) {\n        super(props, 'style');\n    }\n}\n//# sourceMappingURL=style.js.map","import { AurumElement } from './aurum_element';\nexport class Ul extends AurumElement {\n    constructor(props) {\n        super(props, 'ul');\n    }\n}\n//# sourceMappingURL=ul.js.map","import { AurumElement } from './aurum_element';\nexport class P extends AurumElement {\n    constructor(props) {\n        super(props, 'p');\n    }\n}\n//# sourceMappingURL=p.js.map","import { AurumElement } from './aurum_element';\nexport class Img extends AurumElement {\n    constructor(props) {\n        super(props, 'img');\n        this.bindProps(['src'], props);\n    }\n}\n//# sourceMappingURL=img.js.map","import { AurumElement } from './aurum_element';\nexport class Link extends AurumElement {\n    constructor(props) {\n        super(props, 'link');\n        this.bindProps(['href', 'rel'], props);\n    }\n}\n//# sourceMappingURL=link.js.map","import { AurumElement } from './aurum_element';\nexport class Canvas extends AurumElement {\n    constructor(props) {\n        super(props, 'canvas');\n        this.bindProps(['width', 'height'], props);\n    }\n}\n//# sourceMappingURL=canvas.js.map","import { AurumElement } from '../aurum_element';\nexport class Switch extends AurumElement {\n    constructor(props) {\n        super(props, 'switch');\n        this.firstRender = true;\n        this.templateMap = props.templateMap;\n        this.render(props.state.value);\n        props.state.listen((data) => {\n            this.render(data);\n        }, this.cancellationToken);\n    }\n    render(data) {\n        var _a;\n        if (data !== this.lastValue || this.firstRender) {\n            this.lastValue = data;\n            this.firstRender = false;\n            this.clearChildren();\n            if (data !== undefined && data !== null) {\n                const template = (_a = this.templateMap[data.toString()], (_a !== null && _a !== void 0 ? _a : this.template));\n                if (template) {\n                    const result = template.generate();\n                    this.addChild(result);\n                }\n            }\n            else if (this.template) {\n                const result = this.template.generate();\n                this.addChild(result);\n            }\n        }\n    }\n}\n//# sourceMappingURL=switch.js.map"],"names":["EventEmitter","config","subscribeChannel","subscribeOnceChannel","throttleCount","onAfterFire","observable","makeObservable","cancellationToken","addCancelable","this","cancelAll","throttled","throttle","prototypeAccessors","subscriptions","length","oneTimeSubscriptions","linkEvent","eventToLink","linkedEvents","push","unlinkEvent","eventToUnlink","includes","Error","splice","indexOf","onSubscribe","onSubscribeOnce","onCancelAll","onCancel","swapSubscriptions","event","sub","subOnce","subscribe","callback","fire","createSubscription","hasSubscriptions","subscribeOnce","Promise","resolved","data","undefined","data2","data3","data4","data5","isFiring","i","let","forEach","cb","channel","that","subscription","facade","cancel","index","DataSource","initialValue","value","listeners","update","newValue","l","listen","_a","filter","filteredSource","pipe","targetDataSource","v","map","mappedSource","unique","uniqueSource","reduce","reducer","reduceSource","combine","otherSource","combinator","combinedDataSource","pick","key","subDataSource","ArrayDataSource","initialData","slice","onChange","getData","get","set","item","old","items","newState","swap","indexA","indexB","itemA","itemB","swapItems","ref","count","unshift","pop","merge","newData","removeRight","result","removeLeft","remove","clear","shift","toArray","FilteredArrayView","callbackfn","thisArg","toDataSource","stream","s","parent","initial","viewFilter","change","filteredItems","operation","ref$1","target","updateFilter","refresh","LinkedListNode","deleteNext","next","overNext","previous","deletePrevious","LinkedList","d","append","find","predicate","ptr","rootNode","element","lastNode","n","prepend","e","CancellationToken","cancelables","cancellables","_isCancelled","isCanceled","delegate","throwIfCancelled","console","log","removeCancelable","addDisposable","disposable","dispose","callIfNotCancelled","action","setTimeout","time","id","clearTimeout","setInterval","clearInterval","requestAnimationFrame","cancelAnimationFrame","animationLoop","f","msg","chain","twoWays","registerDomEvent","eventEmitter","addEventListener","removeEventListener","c","const","ownerSymbol","Symbol","AurumElement","props","domNodeName","template","node","create","initialize","onAttach","owner","createEventHandlers","bindProps","class","handleClass","repeatModel","cachedChildren","handleRepeat","keys","assignStringSourceToAttribute","computedEventName","toUpperCase","Object","defineProperty","bind","onClick","dataSource","repeatData","generate","renderRepeat","index2","rerenderPending","childElementCount","addChildren","children","getChildIndex","swapChildren","addChildAt","removeChild","lastChild","setAttribute","className","Array","isArray","join","p","document","createElement","hasChild","setInnerText","firstChild","HTMLElement","innerText","nodeA","nodeB","addDomNodeAt","appendChild","insertBefore","hasParent","parentElement","isConnected","child","removeChildAt","childNode","childNodes","clearChildren","addChild","Template","nodes","dataSegments","toString","generator","Aurum","attach","dom","detach","domNode","factory","args","defaultTemplate","instance","concat","innerNodes","templateMap","hasRef","prototype","Button","Div","Input","inputValueSource","_b","_c","Li","Span","Style","Ul","P","Img","Link","Canvas","Switch","firstRender","render","state","lastValue"],"mappings":"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"}