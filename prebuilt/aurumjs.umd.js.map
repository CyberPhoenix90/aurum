{"version":3,"file":"aurumjs.umd.js","sources":["../dist/stream/event_emitter.js","../dist/stream/data_source.js","../dist/stream/array_data_source.js","../dist/utilities/linkedlist/linked_list_node.js","../dist/utilities/linkedlist/linked_list.js","../dist/utilities/cancellation_token.js","../dist/utilities/owner_symbol.js","../dist/nodes/aurum_element.js","../dist/utilities/aurum.js","../dist/nodes/button.js","../dist/nodes/div.js","../dist/nodes/input.js","../dist/nodes/li.js","../dist/nodes/span.js","../dist/nodes/style.js","../dist/nodes/ul.js","../dist/nodes/p.js","../dist/nodes/img.js","../dist/nodes/link.js","../dist/nodes/canvas.js","../dist/nodes/special/switch.js"],"sourcesContent":["export class EventEmitter {\n    constructor(config) {\n        this.subscribeChannel = [];\n        this.subscribeOnceChannel = [];\n        this.throttleCount = 0;\n        this.onAfterFire = [];\n        if (config) {\n            if (config.observable) {\n                this.makeObservable();\n            }\n            if (config.cancellationToken) {\n                config.cancellationToken.addCancelable(() => this.cancelAll());\n            }\n            if (config.throttled) {\n                this.throttle = config.throttled;\n            }\n        }\n    }\n    get subscriptions() {\n        return this.subscribeChannel.length;\n    }\n    get oneTimeSubscriptions() {\n        return this.subscribeOnceChannel.length;\n    }\n    linkEvent(eventToLink) {\n        if (!this.linkedEvents) {\n            this.linkedEvents = [];\n        }\n        this.linkedEvents.push(eventToLink);\n    }\n    unlinkEvent(eventToUnlink) {\n        if (!this.linkedEvents || !this.linkedEvents.includes(eventToUnlink)) {\n            throw new Error('Cannot unlink event that is not linked');\n        }\n        this.linkedEvents.splice(this.linkedEvents.indexOf(eventToUnlink), 1);\n    }\n    makeObservable() {\n        if (!this.onSubscribe) {\n            this.onSubscribe = new EventEmitter();\n            this.onSubscribeOnce = new EventEmitter();\n            this.onCancelAll = new EventEmitter();\n            this.onCancel = new EventEmitter();\n        }\n    }\n    swapSubscriptions(event) {\n        const sub = this.subscribeChannel;\n        const subOnce = this.subscribeOnceChannel;\n        this.subscribeChannel = event.subscribeChannel;\n        this.subscribeOnceChannel = event.subscribeOnceChannel;\n        event.subscribeChannel = sub;\n        event.subscribeOnceChannel = subOnce;\n    }\n    subscribe(callback, cancellationToken) {\n        if (this.onSubscribe) {\n            this.onSubscribe.fire();\n        }\n        const { facade } = this.createSubscription(callback, this.subscribeChannel, cancellationToken);\n        return facade;\n    }\n    hasSubscriptions() {\n        return this.subscriptions > 0 || this.oneTimeSubscriptions > 0;\n    }\n    subscribeOnce(cancellationToken) {\n        if (this.onSubscribeOnce) {\n            this.onSubscribeOnce.fire();\n        }\n        return new Promise((resolved) => {\n            this.createSubscription((data) => resolved(data), this.subscribeOnceChannel, cancellationToken);\n        });\n    }\n    cancelAll() {\n        if (this.onCancelAll !== undefined) {\n            this.onCancelAll.fire();\n        }\n    }\n    fire(data, data2, data3, data4, data5) {\n        if (this.throttle && this.throttleCount++ % this.throttle !== 0) {\n            return;\n        }\n        this.isFiring = true;\n        let length = this.subscribeChannel.length;\n        for (let i = 0; i < length; i++) {\n            this.subscribeChannel[i].callback(data);\n        }\n        length = this.subscribeOnceChannel.length;\n        if (this.subscribeOnceChannel.length > 0) {\n            for (let i = 0; i < length; i++) {\n                this.subscribeOnceChannel[i].callback(data);\n            }\n            this.subscribeOnceChannel.length = 0;\n        }\n        if (this.linkedEvents) {\n            for (let event of this.linkedEvents) {\n                event.fire(data, data2, data3, data4, data5);\n            }\n        }\n        this.isFiring = false;\n        if (this.onAfterFire.length > 0) {\n            this.onAfterFire.forEach((cb) => cb());\n            this.onAfterFire.length = 0;\n        }\n    }\n    createSubscription(callback, channel, cancellationToken) {\n        const that = this;\n        const subscription = {\n            callback\n        };\n        const facade = {\n            cancel() {\n                that.cancel(subscription, channel);\n            }\n        };\n        if (cancellationToken !== undefined) {\n            cancellationToken.addCancelable(() => that.cancel(subscription, channel));\n        }\n        channel.push(subscription);\n        return { subscription, facade };\n    }\n    cancel(subscription, channel) {\n        let index = channel.indexOf(subscription);\n        if (index >= 0) {\n            if (!this.isFiring) {\n                channel.splice(index, 1);\n            }\n            else {\n                this.onAfterFire.push(() => this.cancel(subscription, channel));\n            }\n        }\n    }\n}\n//# sourceMappingURL=event_emitter.js.map","export class DataSource {\n    constructor(initialValue) {\n        this.value = initialValue;\n        this.listeners = [];\n    }\n    update(newValue) {\n        this.value = newValue;\n        for (const l of this.listeners) {\n            l(newValue);\n        }\n    }\n    listen(callback, cancellationToken) {\n        var _a;\n        this.listeners.push(callback);\n        const cancel = () => {\n            const index = this.listeners.indexOf(callback);\n            if (index !== -1) {\n                this.listeners.splice(index, 1);\n            }\n        };\n        (_a = cancellationToken) === null || _a === void 0 ? void 0 : _a.addCancelable(() => {\n            cancel();\n        });\n        return cancel;\n    }\n    filter(callback, cancellationToken) {\n        const filteredSource = new DataSource();\n        this.listen((value) => {\n            if (callback(value)) {\n                filteredSource.update(value);\n            }\n        }, cancellationToken);\n        return filteredSource;\n    }\n    pipe(targetDataSource, cancellationToken) {\n        this.listen((v) => targetDataSource.update(v), cancellationToken);\n    }\n    map(callback, cancellationToken) {\n        const mappedSource = new DataSource(callback(this.value));\n        this.listen((value) => {\n            mappedSource.update(callback(value));\n        }, cancellationToken);\n        return mappedSource;\n    }\n    unique(cancellationToken) {\n        const uniqueSource = new DataSource();\n        this.listen((value) => {\n            if (value !== uniqueSource.value) {\n                uniqueSource.update(value);\n            }\n        }, cancellationToken);\n        return uniqueSource;\n    }\n    reduce(reducer, cancellationToken) {\n        const reduceSource = new DataSource();\n        this.listen((v) => reduceSource.update(reducer(reduceSource.value, v)), cancellationToken);\n        return reduceSource;\n    }\n    combine(otherSource, combinator, cancellationToken) {\n        const combinedDataSource = new DataSource();\n        this.listen(() => combinedDataSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        otherSource.listen(() => combinedDataSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        return combinedDataSource;\n    }\n    pick(key, cancellationToken) {\n        const subDataSource = new DataSource();\n        this.listen((v) => {\n            subDataSource.update(v[key]);\n        }, cancellationToken);\n        return subDataSource;\n    }\n    cancelAll() {\n        this.listeners.length = 0;\n    }\n}\n//# sourceMappingURL=data_source.js.map","import { EventEmitter } from './event_emitter';\nimport { DataSource } from './data_source';\nexport class ArrayDataSource {\n    constructor(initialData) {\n        if (initialData) {\n            this.data = initialData.slice();\n        }\n        else {\n            this.data = [];\n        }\n        this.onChange = new EventEmitter();\n    }\n    get length() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data.slice();\n    }\n    get(index) {\n        return this.data[index];\n    }\n    set(index, item) {\n        const old = this.data[index];\n        if (old === item) {\n            return;\n        }\n        this.data[index] = item;\n        this.onChange.fire({ operation: 'replace', target: old, count: 1, index, items: [item], newState: this.data });\n    }\n    push(...items) {\n        this.data.push(...items);\n        this.onChange.fire({\n            operation: 'append',\n            count: items.length,\n            index: this.data.length - items.length,\n            items,\n            newState: this.data\n        });\n    }\n    unshift(...items) {\n        this.data.unshift(...items);\n        this.onChange.fire({ operation: 'prepend', count: items.length, items, index: 0, newState: this.data });\n    }\n    pop() {\n        const item = this.data.pop();\n        this.onChange.fire({\n            operation: 'removeRight',\n            count: 1,\n            index: this.data.length,\n            items: [item],\n            newState: this.data\n        });\n        return item;\n    }\n    merge(newData) {\n        for (let i = 0; i < newData.length; i++) {\n            if (this.data[i] !== newData[i]) {\n                if (this.length > i) {\n                    this.set(i, newData[i]);\n                }\n                else {\n                    this.push(newData[i]);\n                }\n            }\n        }\n        if (this.length > newData.length) {\n            this.removeRight(this.length - newData.length);\n        }\n    }\n    removeRight(count) {\n        const result = this.data.splice(this.length - count, count);\n        this.onChange.fire({ operation: 'removeRight', count, index: this.length, items: result, newState: this.data });\n    }\n    removeLeft(count) {\n        const result = this.data.splice(0, count);\n        this.onChange.fire({ operation: 'removeLeft', count, index: 0, items: result, newState: this.data });\n    }\n    remove(item) {\n        const index = this.data.indexOf(item);\n        if (index !== -1) {\n            this.data.splice(index, 1);\n            this.onChange.fire({ operation: 'remove', count: 1, index, items: [item], newState: this.data });\n        }\n    }\n    clear() {\n        const items = this.data;\n        this.data = [];\n        this.onChange.fire({\n            operation: 'remove',\n            count: items.length,\n            index: 0,\n            items,\n            newState: this.data\n        });\n    }\n    shift() {\n        const item = this.data.shift();\n        this.onChange.fire({ operation: 'removeLeft', items: [item], count: 1, index: 0, newState: this.data });\n        return item;\n    }\n    toArray() {\n        return this.data.slice();\n    }\n    filter(callback, cancellationToken) {\n        return new FilteredArrayView(this, callback, cancellationToken);\n    }\n    forEach(callbackfn, thisArg) {\n        return this.data.forEach(callbackfn, thisArg);\n    }\n    toDataSource() {\n        const stream = new DataSource(this.data);\n        this.onChange.subscribe((s) => {\n            stream.update(s.newState);\n        });\n        return stream;\n    }\n}\nexport class FilteredArrayView extends ArrayDataSource {\n    constructor(parent, filter, cancellationToken) {\n        const initial = parent.data.filter(filter);\n        super(initial);\n        this.parent = parent;\n        this.viewFilter = filter;\n        parent.onChange.subscribe((change) => {\n            let filteredItems;\n            switch (change.operation) {\n                case 'remove':\n                case 'removeLeft':\n                case 'removeRight':\n                    for (const item of change.items) {\n                        this.remove(item);\n                    }\n                    break;\n                case 'prepend':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.unshift(...filteredItems);\n                    break;\n                case 'append':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.push(...filteredItems);\n                    break;\n                case 'replace':\n                    const index = this.data.indexOf(change.target);\n                    if (index !== -1) {\n                        const acceptNew = this.viewFilter(change.items[0]);\n                        if (acceptNew) {\n                            this.set(index, change.items[0]);\n                        }\n                        else {\n                            this.remove(change.target);\n                        }\n                        break;\n                    }\n            }\n        }, cancellationToken);\n    }\n    updateFilter(filter) {\n        if (this.viewFilter === filter) {\n            return;\n        }\n        this.viewFilter = filter;\n        this.refresh();\n    }\n    refresh() {\n        this.clear();\n        const data = this.parent.data.filter(this.viewFilter);\n        this.push(...data);\n    }\n}\n//# sourceMappingURL=array_data_source.js.map","export class LinkedListNode {\n    constructor(data) {\n        this.data = data;\n    }\n    deleteNext() {\n        if (this.next) {\n            const overNext = this.next.next;\n            this.next.next = undefined;\n            this.next.previous = undefined;\n            this.next = overNext;\n            this.next.previous = this;\n        }\n    }\n    deletePrevious() {\n        if (this.previous) {\n            this.previous = this.previous.previous;\n            this.previous.next = undefined;\n            this.previous.previous = undefined;\n        }\n    }\n}\n//# sourceMappingURL=linked_list_node.js.map","import { LinkedListNode } from './linked_list_node';\nexport class LinkedList {\n    constructor(data = []) {\n        this.length = 0;\n        data.forEach((d) => this.append(d));\n    }\n    find(predicate) {\n        let ptr = this.rootNode;\n        while (ptr && !predicate(ptr)) {\n            ptr = ptr.next;\n        }\n        return ptr;\n    }\n    append(element) {\n        if (!this.rootNode && !this.lastNode) {\n            this.rootNode = this.lastNode = new LinkedListNode(element);\n        }\n        else {\n            this.lastNode.next = new LinkedListNode(element);\n            this.lastNode.next.previous = this.lastNode;\n            this.lastNode = this.lastNode.next;\n        }\n        this.length++;\n        return element;\n    }\n    forEach(cb) {\n        this.find((n) => {\n            cb(n.data);\n            return false;\n        });\n    }\n    prepend(element) {\n        if (!this.rootNode && !this.lastNode) {\n            this.rootNode = this.lastNode = new LinkedListNode(element);\n        }\n        else {\n            this.rootNode.previous = new LinkedListNode(element);\n            this.rootNode.previous.next = this.rootNode;\n            this.rootNode = this.rootNode.previous;\n        }\n        this.length++;\n        return element;\n    }\n    remove(element) {\n        if (element === this.rootNode.data) {\n            this.rootNode = this.rootNode.next;\n            this.length--;\n        }\n        else {\n            const result = this.find((e) => e.next && e.next.data === element);\n            if (result) {\n                if (result.next === this.lastNode) {\n                    this.lastNode = result;\n                }\n                result.deleteNext();\n                this.length--;\n            }\n        }\n    }\n}\n//# sourceMappingURL=linked_list.js.map","import { LinkedList } from './linkedlist/linked_list';\nexport class CancellationToken {\n    constructor(...cancellables) {\n        this.cancelables = new LinkedList(cancellables);\n        this._isCancelled = false;\n    }\n    get isCanceled() {\n        return this._isCancelled;\n    }\n    addCancelable(delegate) {\n        this.throwIfCancelled('attempting to add cancellable to token that is already cancelled');\n        this.cancelables.append(delegate);\n        if (this.cancelables.length > 200) {\n            console.log('potential memory leak: cancellation token has over 200 clean up calls');\n        }\n        return this;\n    }\n    removeCancelable(delegate) {\n        this.throwIfCancelled('attempting to remove cancellable from token that is already cancelled');\n        this.cancelables.remove(delegate);\n        return this;\n    }\n    addDisposable(disposable) {\n        this.addCancelable(() => disposable.dispose());\n        return this;\n    }\n    callIfNotCancelled(action) {\n        if (!this.isCanceled) {\n            action();\n        }\n    }\n    setTimeout(cb, time = 0) {\n        const id = setTimeout(cb, time);\n        this.addCancelable(() => clearTimeout(id));\n    }\n    setInterval(cb, time) {\n        const id = setInterval(cb, time);\n        this.addCancelable(() => clearInterval(id));\n    }\n    requestAnimationFrame(cb) {\n        const id = requestAnimationFrame(cb);\n        this.addCancelable(() => cancelAnimationFrame(id));\n    }\n    animationLoop(cb) {\n        let id = requestAnimationFrame(function f(time) {\n            cb(time);\n            id = requestAnimationFrame(f);\n        });\n        this.addCancelable(() => cancelAnimationFrame(id));\n    }\n    throwIfCancelled(msg) {\n        if (this.isCanceled) {\n            throw new Error(msg || 'cancellation token is cancelled');\n        }\n    }\n    chain(target, twoWays = false) {\n        if (twoWays) {\n            target.chain(this, false);\n        }\n        this.addCancelable(() => target.cancel());\n        return this;\n    }\n    registerDomEvent(eventEmitter, event, callback) {\n        eventEmitter.addEventListener(event, callback);\n        this.addCancelable(() => eventEmitter.removeEventListener(event, callback));\n        return this;\n    }\n    cancel() {\n        if (this.isCanceled) {\n            return;\n        }\n        this._isCancelled = true;\n        this.cancelables.forEach((c) => c());\n        this.cancelables = undefined;\n    }\n}\n//# sourceMappingURL=cancellation_token.js.map","export const ownerSymbol = Symbol('owner');\n//# sourceMappingURL=owner_symbol.js.map","import { DataSource } from '../stream/data_source';\nimport { CancellationToken } from '../utilities/cancellation_token';\nimport { ArrayDataSource } from '../stream/array_data_source';\nimport { ownerSymbol } from '../utilities/owner_symbol';\nexport class AurumElement {\n    constructor(props, domNodeName) {\n        this.domNodeName = domNodeName;\n        this.template = props.template;\n        this.cancellationToken = new CancellationToken();\n        this.node = this.create(props);\n        this.initialize(props);\n        if (props.onAttach) {\n            props.onAttach(this);\n        }\n    }\n    initialize(props) {\n        this.node.owner = this;\n        this.createEventHandlers(['blur', 'focus', 'click', 'dblclick', 'keydown', 'keyhit', 'keyup', 'mousedown, mouseup', 'mouseenter', 'mouseleave', 'mousewheel'], props);\n        this.bindProps(['id', 'draggable', 'tabindex', 'style'], props);\n        if (props.class) {\n            this.handleClass(props.class);\n        }\n        if (props.repeatModel) {\n            this.cachedChildren = [];\n            this.handleRepeat(props.repeatModel);\n        }\n    }\n    bindProps(keys, props) {\n        for (const key of keys) {\n            if (props[key]) {\n                this.assignStringSourceToAttribute(props[key], key);\n            }\n        }\n    }\n    createEventHandlers(keys, props) {\n        for (const key of keys) {\n            const computedEventName = 'on' + key[0].toUpperCase() + key.slice(1);\n            let eventEmitter;\n            Object.defineProperty(this, computedEventName, {\n                get() {\n                    if (!eventEmitter) {\n                        eventEmitter = new DataSource();\n                    }\n                    return eventEmitter;\n                },\n                set() {\n                    throw new Error(computedEventName + ' is read only');\n                }\n            });\n            if (props[computedEventName]) {\n                if (props[computedEventName] instanceof DataSource) {\n                    this[computedEventName].listen(props[computedEventName].update.bind(props.onClick), this.cancellationToken);\n                }\n                else if (typeof props[computedEventName] === 'function') {\n                    this[computedEventName].listen(props[computedEventName], this.cancellationToken);\n                }\n            }\n            this.cancellationToken.registerDomEvent(this.node, key, (e) => this[computedEventName].update(e));\n        }\n    }\n    handleRepeat(dataSource) {\n        if (dataSource instanceof ArrayDataSource) {\n            this.repeatData = dataSource;\n        }\n        else {\n            this.repeatData = new ArrayDataSource(dataSource);\n        }\n        if (this.repeatData.length) {\n            this.cachedChildren.push(...this.repeatData.toArray().map((i) => this.template.generate(i)));\n            this.renderRepeat();\n        }\n        this.repeatData.onChange.subscribe((change) => {\n            switch (change.operation) {\n                case 'append':\n                    this.cachedChildren.push(...change.items.map((i) => this.template.generate(i)));\n                    break;\n                case 'removeLeft':\n                    this.cachedChildren.splice(0, change.count);\n                    break;\n                case 'removeRight':\n                    this.cachedChildren.splice(this.node.childElementCount - change.count, change.count);\n                    break;\n                case 'remove':\n                    this.cachedChildren.splice(change.index, change.count);\n                    break;\n                default:\n                    this.cachedChildren.length = 0;\n                    this.cachedChildren.push(...this.repeatData.toArray().map((i) => this.template.generate(i)));\n                    break;\n            }\n            this.renderRepeat();\n        });\n    }\n    renderRepeat() {\n        if (this.rerenderPending) {\n            return;\n        }\n        setTimeout(() => {\n            for (let i = 0; i < this.cachedChildren.length; i++) {\n                if (this.node.childElementCount <= i) {\n                    this.addChildren(this.cachedChildren.slice(i, this.cachedChildren.length));\n                    break;\n                }\n                if (this.node.children[i].owner !== this.cachedChildren[i]) {\n                    if (!this.cachedChildren.includes(this.node.children[i].owner)) {\n                        this.node.children[i][ownerSymbol].remove();\n                        i--;\n                        continue;\n                    }\n                    const index = this.getChildIndex(this.cachedChildren[i].node);\n                    if (index !== -1) {\n                        this.swapChildren(i, index);\n                    }\n                    else {\n                        this.addChildAt(this.cachedChildren[i], i);\n                    }\n                }\n            }\n            while (this.node.childElementCount > this.cachedChildren.length) {\n                this.node[ownerSymbol].removeChild(this.node.lastChild[ownerSymbol]);\n            }\n            this.rerenderPending = false;\n        });\n        this.rerenderPending = true;\n    }\n    assignStringSourceToAttribute(data, key) {\n        if (typeof data === 'string') {\n            this.node[key] = data;\n        }\n        else {\n            if (data.value) {\n                this.node[key] = data.value;\n            }\n            data.unique(this.cancellationToken).listen((v) => (this.node.id = v), this.cancellationToken);\n        }\n    }\n    handleClass(data) {\n        if (typeof data === 'string') {\n            this.node.className = data;\n        }\n        else if (data instanceof DataSource) {\n            if (data.value) {\n                if (Array.isArray(data.value)) {\n                    this.node.className = data.value.join(' ');\n                    data.unique(this.cancellationToken).listen(() => {\n                        this.node.className = data.value.join(' ');\n                    }, this.cancellationToken);\n                }\n                else {\n                    this.node.className = data.value;\n                    data.unique(this.cancellationToken).listen(() => {\n                        this.node.className = data.value;\n                    }, this.cancellationToken);\n                }\n            }\n            data.unique(this.cancellationToken).listen((v) => (this.node.className = v), this.cancellationToken);\n        }\n        else {\n            const value = data.reduce((p, c) => {\n                if (typeof c === 'string') {\n                    return `${p} ${c}`;\n                }\n                else {\n                    if (c.value) {\n                        return `${p} ${c.value}`;\n                    }\n                    else {\n                        return p;\n                    }\n                }\n            }, '');\n            this.node.className = value;\n            for (const i of data) {\n                if (i instanceof DataSource) {\n                    i.unique(this.cancellationToken).listen((v) => {\n                        const value = data.reduce((p, c) => {\n                            if (typeof c === 'string') {\n                                return `${p} ${c}`;\n                            }\n                            else {\n                                if (c.value) {\n                                    return `${p} ${c.value}`;\n                                }\n                                else {\n                                    return p;\n                                }\n                            }\n                        }, '');\n                        this.node.className = value;\n                    }, this.cancellationToken);\n                }\n            }\n        }\n    }\n    create(props) {\n        const node = document.createElement(this.domNodeName);\n        node[ownerSymbol] = this;\n        return node;\n    }\n    getChildIndex(node) {\n        let i = 0;\n        for (const child of node.children) {\n            if (child === node) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n    hasChild(node) {\n        for (const child of node.children) {\n            if (child === node) {\n                return true;\n            }\n        }\n        return false;\n    }\n    setInnerText(value) {\n        if (this.node.firstChild instanceof HTMLElement) {\n            throw new Error('Cannot combine text and child nodes into a single element');\n        }\n        this.node.innerText = value;\n    }\n    swapChildren(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const nodeA = this.node.children[indexA];\n        const nodeB = this.node.children[indexB];\n        nodeA.remove();\n        nodeB.remove();\n        if (indexA < indexB) {\n            this.addDomNodeAt(nodeB, indexA);\n            this.addDomNodeAt(nodeA, indexB);\n        }\n        else {\n            this.addDomNodeAt(nodeA, indexB);\n            this.addDomNodeAt(nodeB, indexA);\n        }\n    }\n    addDomNodeAt(node, index) {\n        if (index >= this.node.childElementCount) {\n            this.node.appendChild(node);\n        }\n        else {\n            this.node.insertBefore(node, this.node.children[index]);\n        }\n    }\n    remove() {\n        if (this.hasParent()) {\n            this.node.parentElement.removeChild(this.node);\n            this.dispose();\n        }\n    }\n    hasParent() {\n        return !!this.node.parentElement;\n    }\n    isConnected() {\n        return this.node.isConnected;\n    }\n    removeChild(child) {\n        child.dispose();\n        this.node.removeChild(child.node);\n    }\n    removeChildAt(index) {\n        const childNode = this.node.childNodes[index];\n        if (childNode) {\n            const child = childNode[ownerSymbol];\n            child.dispose();\n            this.node.removeChild(child.node);\n        }\n    }\n    clearChildren() {\n        while (this.node.firstChild) {\n            const owner = this.node.firstChild[ownerSymbol];\n            owner.dispose();\n            this.node.removeChild(this.node.firstChild);\n        }\n    }\n    addChild(child) {\n        if (child.node instanceof Template) {\n            return;\n        }\n        return this.node.appendChild(child.node);\n    }\n    addChildAt(child, index) {\n        if (child.node instanceof Template) {\n            return;\n        }\n        return this.addDomNodeAt(child.node, index);\n    }\n    addChildren(nodes) {\n        if (nodes.length === 0) {\n            return;\n        }\n        let dataSegments = [];\n        for (const c of nodes) {\n            if (c instanceof Template) {\n                continue;\n            }\n            if (typeof c === 'string') {\n                dataSegments.push(c);\n            }\n            else if (c instanceof DataSource) {\n                dataSegments.push(c);\n                this.setInnerText(c.value);\n                c.listen((v) => {\n                    const value = dataSegments.reduce((p, c) => { var _a; return p + (c instanceof DataSource ? (_a = c.value, (_a !== null && _a !== void 0 ? _a : '')).toString() : c); }, '');\n                    this.setInnerText(value);\n                }, this.cancellationToken);\n            }\n            else {\n                this.node.appendChild(c.node);\n            }\n        }\n        if (dataSegments.length) {\n            const value = dataSegments.reduce((p, c) => { var _a; return p + (c instanceof DataSource ? (_a = c.value, (_a !== null && _a !== void 0 ? _a : '')).toString() : c); }, '');\n            this.setInnerText(value);\n        }\n    }\n    dispose() {\n        this.cancellationToken.cancel();\n    }\n}\nexport class Template extends AurumElement {\n    constructor(props) {\n        super(props, 'template');\n        this.ref = props.ref;\n        this.generate = props.generator;\n    }\n}\n//# sourceMappingURL=aurum_element.js.map","import { Template } from '../nodes/aurum_element';\nimport { ownerSymbol } from './owner_symbol';\nexport class Aurum {\n    static attach(node, dom) {\n        if (dom[ownerSymbol]) {\n            throw new Error('This node is already managed by aurum and cannot be used');\n        }\n        dom.appendChild(node.node);\n        dom[ownerSymbol] = node;\n    }\n    static detach(domNode) {\n        if (domNode[ownerSymbol]) {\n            domNode[ownerSymbol].dispose();\n            domNode[ownerSymbol] = undefined;\n        }\n    }\n    static factory(node, args, ...innerNodes) {\n        if (typeof node === 'string') {\n            return;\n        }\n        const children = [].concat(...innerNodes).filter((e) => e);\n        const templateMap = {};\n        let defaultTemplate;\n        let hasRef = false;\n        for (const c of children) {\n            if (typeof c === 'string') {\n                continue;\n            }\n            if (c instanceof Template && (!c.ref || c.ref === 'default')) {\n                defaultTemplate = c;\n            }\n            if (c.ref) {\n                templateMap[c.ref] = c;\n                hasRef = true;\n            }\n        }\n        args = (args !== null && args !== void 0 ? args : {});\n        if (defaultTemplate) {\n            args.template = defaultTemplate;\n        }\n        if (hasRef) {\n            args.templateMap = templateMap;\n        }\n        let instance;\n        if (node.prototype) {\n            instance = new node(args || {});\n        }\n        else {\n            instance = node(args || {});\n        }\n        instance.addChildren(children);\n        return instance;\n    }\n}\n//# sourceMappingURL=aurum.js.map","import { AurumElement } from './aurum_element';\nexport class Button extends AurumElement {\n    constructor(props) {\n        super(props, 'button');\n    }\n}\n//# sourceMappingURL=button.js.map","import { AurumElement } from './aurum_element';\nexport class Div extends AurumElement {\n    constructor(props) {\n        super(props, 'div');\n    }\n}\n//# sourceMappingURL=div.js.map","import { AurumElement } from './aurum_element';\nexport class Input extends AurumElement {\n    constructor(props) {\n        var _a, _b, _c;\n        super(props, 'input');\n        if (props.inputValueSource) {\n            this.node.value = (_b = (_a = props.initialValue, (_a !== null && _a !== void 0 ? _a : props.inputValueSource.value)), (_b !== null && _b !== void 0 ? _b : ''));\n            props.inputValueSource.listen((value) => (this.node.value = value), this.cancellationToken);\n        }\n        else {\n            this.node.value = (_c = props.initialValue, (_c !== null && _c !== void 0 ? _c : ''));\n        }\n        this.bindProps(['placeholder'], props);\n        this.createEventHandlers(['input', 'change'], props);\n    }\n}\n//# sourceMappingURL=input.js.map","import { AurumElement } from './aurum_element';\nexport class Li extends AurumElement {\n    constructor(props) {\n        super(props, 'li');\n    }\n}\n//# sourceMappingURL=li.js.map","import { AurumElement } from './aurum_element';\nexport class Span extends AurumElement {\n    constructor(props) {\n        super(props, 'span');\n    }\n}\n//# sourceMappingURL=span.js.map","import { AurumElement } from './aurum_element';\nexport class Style extends AurumElement {\n    constructor(props) {\n        super(props, 'style');\n    }\n}\n//# sourceMappingURL=style.js.map","import { AurumElement } from './aurum_element';\nexport class Ul extends AurumElement {\n    constructor(props) {\n        super(props, 'ul');\n    }\n}\n//# sourceMappingURL=ul.js.map","import { AurumElement } from './aurum_element';\nexport class P extends AurumElement {\n    constructor(props) {\n        super(props, 'p');\n    }\n}\n//# sourceMappingURL=p.js.map","import { AurumElement } from './aurum_element';\nexport class Img extends AurumElement {\n    constructor(props) {\n        super(props, 'img');\n        this.bindProps(['src'], props);\n    }\n}\n//# sourceMappingURL=img.js.map","import { AurumElement } from './aurum_element';\nexport class Link extends AurumElement {\n    constructor(props) {\n        super(props, 'link');\n        this.bindProps(['href', 'rel'], props);\n    }\n}\n//# sourceMappingURL=link.js.map","import { AurumElement } from './aurum_element';\nexport class Canvas extends AurumElement {\n    constructor(props) {\n        super(props, 'canvas');\n        this.bindProps(['width', 'height'], props);\n    }\n}\n//# sourceMappingURL=canvas.js.map","import { AurumElement } from '../aurum_element';\nexport class Switch extends AurumElement {\n    constructor(props) {\n        super(props, 'switch');\n        this.firstRender = true;\n        this.templateMap = props.templateMap;\n        this.render(props.state.value);\n        props.state.listen((data) => {\n            this.render(data);\n        }, this.cancellationToken);\n    }\n    render(data) {\n        var _a;\n        if (data !== this.lastValue || this.firstRender) {\n            this.lastValue = data;\n            this.firstRender = false;\n            this.clearChildren();\n            if (data !== undefined && data !== null) {\n                const template = (_a = this.templateMap[data.toString()], (_a !== null && _a !== void 0 ? _a : this.template));\n                if (template) {\n                    const result = template.generate();\n                    this.addChild(result);\n                }\n            }\n            else if (this.template) {\n                const result = this.template.generate();\n                this.addChild(result);\n            }\n        }\n    }\n}\n//# sourceMappingURL=switch.js.map"],"names":["EventEmitter","config","subscribeChannel","subscribeOnceChannel","throttleCount","onAfterFire","observable","makeObservable","cancellationToken","addCancelable","this","cancelAll","throttled","throttle","prototypeAccessors","subscriptions","length","oneTimeSubscriptions","linkEvent","eventToLink","linkedEvents","push","unlinkEvent","eventToUnlink","includes","Error","splice","indexOf","onSubscribe","onSubscribeOnce","onCancelAll","onCancel","swapSubscriptions","event","sub","subOnce","subscribe","callback","fire","createSubscription","hasSubscriptions","subscribeOnce","Promise","resolved","data","undefined","data2","data3","data4","data5","isFiring","i","let","forEach","cb","channel","that","subscription","facade","cancel","index","DataSource","initialValue","value","listeners","update","newValue","l","listen","_a","filter","filteredSource","pipe","targetDataSource","v","map","mappedSource","unique","uniqueSource","reduce","reducer","reduceSource","combine","otherSource","combinator","combinedDataSource","pick","key","subDataSource","ArrayDataSource","initialData","slice","onChange","getData","get","set","item","old","items","newState","ref","count","unshift","pop","merge","newData","removeRight","result","removeLeft","remove","clear","shift","toArray","FilteredArrayView","callbackfn","thisArg","toDataSource","stream","s","parent","initial","viewFilter","change","filteredItems","operation","ref$1","target","updateFilter","refresh","LinkedListNode","deleteNext","next","overNext","previous","deletePrevious","LinkedList","d","append","find","predicate","ptr","rootNode","element","lastNode","n","prepend","e","CancellationToken","cancelables","cancellables","_isCancelled","isCanceled","delegate","throwIfCancelled","console","log","removeCancelable","addDisposable","disposable","dispose","callIfNotCancelled","action","setTimeout","time","id","clearTimeout","setInterval","clearInterval","requestAnimationFrame","cancelAnimationFrame","animationLoop","f","msg","chain","twoWays","registerDomEvent","eventEmitter","addEventListener","removeEventListener","c","const","ownerSymbol","Symbol","AurumElement","props","domNodeName","template","node","create","initialize","onAttach","owner","createEventHandlers","bindProps","class","handleClass","repeatModel","cachedChildren","handleRepeat","keys","assignStringSourceToAttribute","computedEventName","toUpperCase","Object","defineProperty","bind","onClick","dataSource","repeatData","generate","renderRepeat","childElementCount","rerenderPending","addChildren","children","getChildIndex","swapChildren","addChildAt","removeChild","lastChild","className","Array","isArray","join","p","document","createElement","hasChild","setInnerText","firstChild","HTMLElement","innerText","indexA","indexB","nodeA","nodeB","addDomNodeAt","appendChild","insertBefore","hasParent","parentElement","isConnected","child","removeChildAt","childNode","childNodes","clearChildren","addChild","Template","nodes","dataSegments","toString","generator","Aurum","attach","dom","detach","domNode","factory","args","defaultTemplate","instance","concat","innerNodes","templateMap","hasRef","prototype","Button","Div","Input","inputValueSource","_b","_c","Li","Span","Style","Ul","P","Img","Link","Canvas","Switch","firstRender","render","state","lastValue"],"mappings":"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"}