{"version":3,"file":"aurumjs.js","sources":["../dist/stream/event_emitter.js","../dist/stream/data_source.js","../dist/stream/array_data_source.js","../dist/utilities/linkedlist/linked_list_node.js","../dist/utilities/linkedlist/linked_list.js","../dist/utilities/cancellation_token.js","../dist/utilities/owner_symbol.js","../dist/nodes/aurum_element.js","../dist/utilities/aurum.js","../dist/nodes/button.js","../dist/nodes/div.js","../dist/nodes/input.js","../dist/nodes/li.js","../dist/nodes/span.js","../dist/nodes/style.js","../dist/nodes/ul.js","../dist/nodes/p.js","../dist/nodes/img.js","../dist/nodes/link.js","../dist/nodes/canvas.js","../dist/nodes/a.js","../dist/nodes/article.js","../dist/nodes/br.js","../dist/nodes/form.js","../dist/nodes/label.js","../dist/nodes/ol.js","../dist/nodes/pre.js","../dist/nodes/progress.js","../dist/nodes/table.js","../dist/nodes/td.js","../dist/nodes/textarea.js","../dist/nodes/th.js","../dist/nodes/tr.js","../dist/nodes/h1.js","../dist/nodes/h2.js","../dist/nodes/h3.js","../dist/nodes/h4.js","../dist/nodes/h5.js","../dist/nodes/h6.js","../dist/nodes/header.js","../dist/nodes/footer.js","../dist/nodes/special/switch.js"],"sourcesContent":["export class EventEmitter {\n    constructor(config) {\n        this.subscribeChannel = [];\n        this.subscribeOnceChannel = [];\n        this.throttleCount = 0;\n        this.onAfterFire = [];\n        if (config) {\n            if (config.observable) {\n                this.makeObservable();\n            }\n            if (config.cancellationToken) {\n                config.cancellationToken.addCancelable(() => this.cancelAll());\n            }\n            if (config.throttled) {\n                this.throttle = config.throttled;\n            }\n        }\n    }\n    get subscriptions() {\n        return this.subscribeChannel.length;\n    }\n    get oneTimeSubscriptions() {\n        return this.subscribeOnceChannel.length;\n    }\n    linkEvent(eventToLink) {\n        if (!this.linkedEvents) {\n            this.linkedEvents = [];\n        }\n        this.linkedEvents.push(eventToLink);\n    }\n    unlinkEvent(eventToUnlink) {\n        if (!this.linkedEvents || !this.linkedEvents.includes(eventToUnlink)) {\n            throw new Error('Cannot unlink event that is not linked');\n        }\n        this.linkedEvents.splice(this.linkedEvents.indexOf(eventToUnlink), 1);\n    }\n    makeObservable() {\n        if (!this.onSubscribe) {\n            this.onSubscribe = new EventEmitter();\n            this.onSubscribeOnce = new EventEmitter();\n            this.onCancelAll = new EventEmitter();\n            this.onCancel = new EventEmitter();\n        }\n    }\n    swapSubscriptions(event) {\n        const sub = this.subscribeChannel;\n        const subOnce = this.subscribeOnceChannel;\n        this.subscribeChannel = event.subscribeChannel;\n        this.subscribeOnceChannel = event.subscribeOnceChannel;\n        event.subscribeChannel = sub;\n        event.subscribeOnceChannel = subOnce;\n    }\n    subscribe(callback, cancellationToken) {\n        if (this.onSubscribe) {\n            this.onSubscribe.fire();\n        }\n        const { facade } = this.createSubscription(callback, this.subscribeChannel, cancellationToken);\n        return facade;\n    }\n    hasSubscriptions() {\n        return this.subscriptions > 0 || this.oneTimeSubscriptions > 0;\n    }\n    subscribeOnce(cancellationToken) {\n        if (this.onSubscribeOnce) {\n            this.onSubscribeOnce.fire();\n        }\n        return new Promise((resolved) => {\n            this.createSubscription((data) => resolved(data), this.subscribeOnceChannel, cancellationToken);\n        });\n    }\n    cancelAll() {\n        if (this.onCancelAll !== undefined) {\n            this.onCancelAll.fire();\n        }\n    }\n    fire(data, data2, data3, data4, data5) {\n        if (this.throttle && this.throttleCount++ % this.throttle !== 0) {\n            return;\n        }\n        this.isFiring = true;\n        let length = this.subscribeChannel.length;\n        for (let i = 0; i < length; i++) {\n            this.subscribeChannel[i].callback(data);\n        }\n        length = this.subscribeOnceChannel.length;\n        if (this.subscribeOnceChannel.length > 0) {\n            for (let i = 0; i < length; i++) {\n                this.subscribeOnceChannel[i].callback(data);\n            }\n            this.subscribeOnceChannel.length = 0;\n        }\n        if (this.linkedEvents) {\n            for (let event of this.linkedEvents) {\n                event.fire(data, data2, data3, data4, data5);\n            }\n        }\n        this.isFiring = false;\n        if (this.onAfterFire.length > 0) {\n            this.onAfterFire.forEach((cb) => cb());\n            this.onAfterFire.length = 0;\n        }\n    }\n    createSubscription(callback, channel, cancellationToken) {\n        const that = this;\n        const subscription = {\n            callback\n        };\n        const facade = {\n            cancel() {\n                that.cancel(subscription, channel);\n            }\n        };\n        if (cancellationToken !== undefined) {\n            cancellationToken.addCancelable(() => that.cancel(subscription, channel));\n        }\n        channel.push(subscription);\n        return { subscription, facade };\n    }\n    cancel(subscription, channel) {\n        let index = channel.indexOf(subscription);\n        if (index >= 0) {\n            if (!this.isFiring) {\n                channel.splice(index, 1);\n            }\n            else {\n                this.onAfterFire.push(() => this.cancel(subscription, channel));\n            }\n        }\n    }\n}\n//# sourceMappingURL=event_emitter.js.map","export class DataSource {\n    constructor(initialValue) {\n        this.value = initialValue;\n        this.listeners = [];\n    }\n    update(newValue) {\n        this.value = newValue;\n        for (const l of this.listeners) {\n            l(newValue);\n        }\n    }\n    listen(callback, cancellationToken) {\n        var _a;\n        this.listeners.push(callback);\n        const cancel = () => {\n            const index = this.listeners.indexOf(callback);\n            if (index !== -1) {\n                this.listeners.splice(index, 1);\n            }\n        };\n        (_a = cancellationToken) === null || _a === void 0 ? void 0 : _a.addCancelable(() => {\n            cancel();\n        });\n        return cancel;\n    }\n    filter(callback, cancellationToken) {\n        const filteredSource = new DataSource();\n        this.listen((value) => {\n            if (callback(value)) {\n                filteredSource.update(value);\n            }\n        }, cancellationToken);\n        return filteredSource;\n    }\n    pipe(targetDataSource, cancellationToken) {\n        this.listen((v) => targetDataSource.update(v), cancellationToken);\n    }\n    map(callback, cancellationToken) {\n        const mappedSource = new DataSource(callback(this.value));\n        this.listen((value) => {\n            mappedSource.update(callback(value));\n        }, cancellationToken);\n        return mappedSource;\n    }\n    unique(cancellationToken) {\n        const uniqueSource = new DataSource();\n        this.listen((value) => {\n            if (value !== uniqueSource.value) {\n                uniqueSource.update(value);\n            }\n        }, cancellationToken);\n        return uniqueSource;\n    }\n    reduce(reducer, initialValue, cancellationToken) {\n        const reduceSource = new DataSource(initialValue);\n        this.listen((v) => reduceSource.update(reducer(reduceSource.value, v)), cancellationToken);\n        return reduceSource;\n    }\n    aggregate(otherSource, combinator, cancellationToken) {\n        const aggregatedSource = new DataSource(combinator(this.value, otherSource.value));\n        this.listen(() => aggregatedSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        otherSource.listen(() => aggregatedSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        return aggregatedSource;\n    }\n    combine(otherSource, cancellationToken) {\n        const combinedDataSource = new DataSource();\n        this.pipe(combinedDataSource, cancellationToken);\n        otherSource.pipe(combinedDataSource, cancellationToken);\n        return combinedDataSource;\n    }\n    pick(key, cancellationToken) {\n        var _a;\n        const subDataSource = new DataSource((_a = this.value) === null || _a === void 0 ? void 0 : _a[key]);\n        this.listen((v) => {\n            if (v !== undefined && v !== null) {\n                subDataSource.update(v[key]);\n            }\n            else {\n                subDataSource.update(v);\n            }\n        }, cancellationToken);\n        return subDataSource;\n    }\n    cancelAll() {\n        this.listeners.length = 0;\n    }\n}\n//# sourceMappingURL=data_source.js.map","import { EventEmitter } from './event_emitter';\nimport { DataSource } from './data_source';\nexport class ArrayDataSource {\n    constructor(initialData) {\n        if (initialData) {\n            this.data = initialData.slice();\n        }\n        else {\n            this.data = [];\n        }\n        this.onChange = new EventEmitter();\n    }\n    get length() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data.slice();\n    }\n    get(index) {\n        return this.data[index];\n    }\n    set(index, item) {\n        const old = this.data[index];\n        if (old === item) {\n            return;\n        }\n        this.data[index] = item;\n        this.onChange.fire({ operation: 'replace', target: old, count: 1, index, items: [item], newState: this.data });\n    }\n    swap(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const itemA = this.data[indexA];\n        const itemB = this.data[indexB];\n        this.data[indexB] = itemA;\n        this.data[indexA] = itemB;\n        this.onChange.fire({ operation: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n    }\n    swapItems(itemA, itemB) {\n        if (itemA === itemB) {\n            return;\n        }\n        const indexA = this.data.indexOf(itemA);\n        const indexB = this.data.indexOf(itemB);\n        if (indexA !== -1 && indexB !== -1) {\n            this.data[indexB] = itemA;\n            this.data[indexA] = itemB;\n        }\n        this.onChange.fire({ operation: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n    }\n    push(...items) {\n        this.data.push(...items);\n        this.onChange.fire({\n            operation: 'append',\n            count: items.length,\n            index: this.data.length - items.length,\n            items,\n            newState: this.data\n        });\n    }\n    unshift(...items) {\n        this.data.unshift(...items);\n        this.onChange.fire({ operation: 'prepend', count: items.length, items, index: 0, newState: this.data });\n    }\n    pop() {\n        const item = this.data.pop();\n        this.onChange.fire({\n            operation: 'remove',\n            count: 1,\n            index: this.data.length,\n            items: [item],\n            newState: this.data\n        });\n        return item;\n    }\n    merge(newData) {\n        for (let i = 0; i < newData.length; i++) {\n            if (this.data[i] !== newData[i]) {\n                if (this.length > i) {\n                    this.set(i, newData[i]);\n                }\n                else {\n                    this.push(newData[i]);\n                }\n            }\n        }\n        if (this.length > newData.length) {\n            this.removeRight(this.length - newData.length);\n        }\n    }\n    removeRight(count) {\n        const result = this.data.splice(this.length - count, count);\n        this.onChange.fire({ operation: 'remove', count, index: this.length - count, items: result, newState: this.data });\n    }\n    removeLeft(count) {\n        const result = this.data.splice(0, count);\n        this.onChange.fire({ operation: 'remove', count, index: 0, items: result, newState: this.data });\n    }\n    remove(item) {\n        const index = this.data.indexOf(item);\n        if (index !== -1) {\n            this.data.splice(index, 1);\n            this.onChange.fire({ operation: 'remove', count: 1, index, items: [item], newState: this.data });\n        }\n    }\n    clear() {\n        const items = this.data;\n        this.data = [];\n        this.onChange.fire({\n            operation: 'remove',\n            count: items.length,\n            index: 0,\n            items,\n            newState: this.data\n        });\n    }\n    shift() {\n        const item = this.data.shift();\n        this.onChange.fire({ operation: 'remove', items: [item], count: 1, index: 0, newState: this.data });\n        return item;\n    }\n    toArray() {\n        return this.data.slice();\n    }\n    filter(callback, cancellationToken) {\n        return new FilteredArrayView(this, callback, cancellationToken);\n    }\n    forEach(callbackfn, thisArg) {\n        return this.data.forEach(callbackfn, thisArg);\n    }\n    toDataSource() {\n        const stream = new DataSource(this.data);\n        this.onChange.subscribe((s) => {\n            stream.update(s.newState);\n        });\n        return stream;\n    }\n}\nexport class FilteredArrayView extends ArrayDataSource {\n    constructor(parent, filter, cancellationToken) {\n        const initial = parent.data.filter(filter);\n        super(initial);\n        this.parent = parent;\n        this.viewFilter = filter;\n        parent.onChange.subscribe((change) => {\n            let filteredItems;\n            switch (change.operation) {\n                case 'remove':\n                    for (const item of change.items) {\n                        this.remove(item);\n                    }\n                    break;\n                case 'prepend':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.unshift(...filteredItems);\n                    break;\n                case 'append':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.push(...filteredItems);\n                    break;\n                case 'swap':\n                    const indexA = this.data.indexOf(change.items[0]);\n                    const indexB = this.data.indexOf(change.items[1]);\n                    if (indexA !== -1 && indexB !== -1) {\n                        this.swap(indexA, indexB);\n                    }\n                    break;\n                case 'replace':\n                    const index = this.data.indexOf(change.target);\n                    if (index !== -1) {\n                        const acceptNew = this.viewFilter(change.items[0]);\n                        if (acceptNew) {\n                            this.set(index, change.items[0]);\n                        }\n                        else {\n                            this.remove(change.target);\n                        }\n                    }\n                    break;\n            }\n        }, cancellationToken);\n    }\n    updateFilter(filter) {\n        if (this.viewFilter === filter) {\n            return;\n        }\n        this.viewFilter = filter;\n        this.refresh();\n    }\n    refresh() {\n        this.clear();\n        const data = this.parent.data.filter(this.viewFilter);\n        this.push(...data);\n    }\n}\n//# sourceMappingURL=array_data_source.js.map","export class LinkedListNode {\n    constructor(data) {\n        this.data = data;\n    }\n    deleteNext() {\n        if (this.next) {\n            const overNext = this.next.next;\n            this.next.next = undefined;\n            this.next.previous = undefined;\n            this.next = overNext;\n            this.next.previous = this;\n        }\n    }\n    deletePrevious() {\n        if (this.previous) {\n            this.previous = this.previous.previous;\n            this.previous.next = undefined;\n            this.previous.previous = undefined;\n        }\n    }\n}\n//# sourceMappingURL=linked_list_node.js.map","import { LinkedListNode } from './linked_list_node';\nexport class LinkedList {\n    constructor(data = []) {\n        this.length = 0;\n        data.forEach((d) => this.append(d));\n    }\n    find(predicate) {\n        let ptr = this.rootNode;\n        while (ptr && !predicate(ptr)) {\n            ptr = ptr.next;\n        }\n        return ptr;\n    }\n    append(element) {\n        if (!this.rootNode && !this.lastNode) {\n            this.rootNode = this.lastNode = new LinkedListNode(element);\n        }\n        else {\n            this.lastNode.next = new LinkedListNode(element);\n            this.lastNode.next.previous = this.lastNode;\n            this.lastNode = this.lastNode.next;\n        }\n        this.length++;\n        return element;\n    }\n    forEach(cb) {\n        this.find((n) => {\n            cb(n.data);\n            return false;\n        });\n    }\n    prepend(element) {\n        if (!this.rootNode && !this.lastNode) {\n            this.rootNode = this.lastNode = new LinkedListNode(element);\n        }\n        else {\n            this.rootNode.previous = new LinkedListNode(element);\n            this.rootNode.previous.next = this.rootNode;\n            this.rootNode = this.rootNode.previous;\n        }\n        this.length++;\n        return element;\n    }\n    remove(element) {\n        if (element === this.rootNode.data) {\n            this.rootNode = this.rootNode.next;\n            this.length--;\n        }\n        else {\n            const result = this.find((e) => e.next && e.next.data === element);\n            if (result) {\n                if (result.next === this.lastNode) {\n                    this.lastNode = result;\n                }\n                result.deleteNext();\n                this.length--;\n            }\n        }\n    }\n}\n//# sourceMappingURL=linked_list.js.map","import { LinkedList } from './linkedlist/linked_list';\nexport class CancellationToken {\n    constructor(...cancellables) {\n        this.cancelables = new LinkedList(cancellables);\n        this._isCancelled = false;\n    }\n    get isCanceled() {\n        return this._isCancelled;\n    }\n    addCancelable(delegate) {\n        this.throwIfCancelled('attempting to add cancellable to token that is already cancelled');\n        this.cancelables.append(delegate);\n        if (this.cancelables.length > 200) {\n            console.log('potential memory leak: cancellation token has over 200 clean up calls');\n        }\n        return this;\n    }\n    removeCancelable(delegate) {\n        this.throwIfCancelled('attempting to remove cancellable from token that is already cancelled');\n        this.cancelables.remove(delegate);\n        return this;\n    }\n    addDisposable(disposable) {\n        this.addCancelable(() => disposable.dispose());\n        return this;\n    }\n    callIfNotCancelled(action) {\n        if (!this.isCanceled) {\n            action();\n        }\n    }\n    setTimeout(cb, time = 0) {\n        const id = setTimeout(cb, time);\n        this.addCancelable(() => clearTimeout(id));\n    }\n    setInterval(cb, time) {\n        const id = setInterval(cb, time);\n        this.addCancelable(() => clearInterval(id));\n    }\n    requestAnimationFrame(cb) {\n        const id = requestAnimationFrame(cb);\n        this.addCancelable(() => cancelAnimationFrame(id));\n    }\n    animationLoop(cb) {\n        let id = requestAnimationFrame(function f(time) {\n            cb(time);\n            id = requestAnimationFrame(f);\n        });\n        this.addCancelable(() => cancelAnimationFrame(id));\n    }\n    throwIfCancelled(msg) {\n        if (this.isCanceled) {\n            throw new Error(msg || 'cancellation token is cancelled');\n        }\n    }\n    chain(target, twoWays = false) {\n        if (twoWays) {\n            target.chain(this, false);\n        }\n        this.addCancelable(() => target.cancel());\n        return this;\n    }\n    registerDomEvent(eventEmitter, event, callback) {\n        eventEmitter.addEventListener(event, callback);\n        this.addCancelable(() => eventEmitter.removeEventListener(event, callback));\n        return this;\n    }\n    cancel() {\n        if (this.isCanceled) {\n            return;\n        }\n        this._isCancelled = true;\n        this.cancelables.forEach((c) => c());\n        this.cancelables = undefined;\n    }\n}\n//# sourceMappingURL=cancellation_token.js.map","export const ownerSymbol = Symbol('owner');\n//# sourceMappingURL=owner_symbol.js.map","import { DataSource } from '../stream/data_source';\nimport { CancellationToken } from '../utilities/cancellation_token';\nimport { ArrayDataSource } from '../stream/array_data_source';\nimport { ownerSymbol } from '../utilities/owner_symbol';\nexport class AurumElement {\n    constructor(props, domNodeName) {\n        this.domNodeName = domNodeName;\n        this.template = props.template;\n        this.cancellationToken = new CancellationToken();\n        this.node = this.create(props);\n        this.initialize(props);\n        if (!(this.node instanceof Text)) {\n            this.children = [];\n        }\n        if (props.onAttach) {\n            props.onAttach(this);\n        }\n    }\n    initialize(props) {\n        this.createEventHandlers([\n            'drag',\n            'dragstart',\n            'dragend',\n            'dragexit',\n            'dragover',\n            'dragenter',\n            'dragleave',\n            'blur',\n            'focus',\n            'click',\n            'dblclick',\n            'keydown',\n            'keyhit',\n            'keyup',\n            'mousedown, mouseup',\n            'mouseenter',\n            'mouseleave',\n            'mousewheel'\n        ], props);\n        this.bindProps(['id', 'draggable', 'tabindex', 'style'], props);\n        if (props.class) {\n            this.handleClass(props.class);\n        }\n        if (props.repeatModel) {\n            this.handleRepeat(props.repeatModel);\n        }\n    }\n    bindProps(keys, props) {\n        for (const key of keys) {\n            if (props[key]) {\n                this.assignStringSourceToAttribute(props[key], key);\n            }\n        }\n    }\n    createEventHandlers(keys, props) {\n        if (this.node instanceof Text) {\n            return;\n        }\n        for (const key of keys) {\n            const computedEventName = 'on' + key[0].toUpperCase() + key.slice(1);\n            let eventEmitter;\n            Object.defineProperty(this, computedEventName, {\n                get() {\n                    if (!eventEmitter) {\n                        eventEmitter = new DataSource();\n                    }\n                    return eventEmitter;\n                },\n                set() {\n                    throw new Error(computedEventName + ' is read only');\n                }\n            });\n            if (props[computedEventName]) {\n                if (props[computedEventName] instanceof DataSource) {\n                    this[computedEventName].listen(props[computedEventName].update.bind(props.onClick), this.cancellationToken);\n                }\n                else if (typeof props[computedEventName] === 'function') {\n                    this[computedEventName].listen(props[computedEventName], this.cancellationToken);\n                }\n            }\n            this.cancellationToken.registerDomEvent(this.node, key, (e) => this[computedEventName].update(e));\n        }\n    }\n    handleRepeat(dataSource) {\n        if (dataSource instanceof ArrayDataSource) {\n            this.repeatData = dataSource;\n        }\n        else {\n            this.repeatData = new ArrayDataSource(dataSource);\n        }\n        if (this.repeatData.length) {\n            this.children.push(...this.repeatData.toArray().map((i) => this.template.generate(i)));\n            this.render();\n        }\n        this.repeatData.onChange.subscribe((change) => {\n            switch (change.operation) {\n                case 'swap':\n                    const itemA = this.children[change.index];\n                    const itemB = this.children[change.index2];\n                    this.children[change.index2] = itemA;\n                    this.children[change.index] = itemB;\n                    break;\n                case 'append':\n                    this.children.push(...change.items.map((i) => this.template.generate(i)));\n                    break;\n                case 'prepend':\n                    this.children.unshift(...change.items.map((i) => this.template.generate(i)));\n                    break;\n                case 'remove':\n                    this.children.splice(change.index, change.count);\n                    break;\n                default:\n                    this.children.length = 0;\n                    this.children.push(...this.repeatData.toArray().map((i) => this.template.generate(i)));\n                    break;\n            }\n            this.render();\n        });\n    }\n    render() {\n        if (this.rerenderPending) {\n            return;\n        }\n        if (this.node instanceof Text) {\n            return;\n        }\n        setTimeout(() => {\n            for (let i = 0; i < this.children.length; i++) {\n                if (this.node.childNodes.length <= i) {\n                    this.addChildrenDom(this.children.slice(i, this.children.length));\n                    break;\n                }\n                if (this.node.childNodes[i][ownerSymbol] !== this.children[i]) {\n                    if (!this.children.includes(this.node.childNodes[i][ownerSymbol])) {\n                        this.node.childNodes[i].remove();\n                        i--;\n                        continue;\n                    }\n                    const index = this.getChildIndex(this.children[i].node);\n                    if (index !== -1) {\n                        this.swapChildrenDom(i, index);\n                    }\n                    else {\n                        this.addDomNodeAt(this.children[i].node, i);\n                    }\n                }\n            }\n            while (this.node.childNodes.length > this.children.length) {\n                this.node.removeChild(this.node.childNodes[this.node.childNodes.length - 1]);\n            }\n            this.rerenderPending = false;\n        });\n        this.rerenderPending = true;\n    }\n    assignStringSourceToAttribute(data, key) {\n        if (this.node instanceof Text) {\n            return;\n        }\n        if (typeof data === 'string') {\n            this.node.setAttribute(key, data);\n        }\n        else {\n            if (data.value) {\n                this.node.setAttribute(key, data.value);\n            }\n            data.unique(this.cancellationToken).listen((v) => this.node.setAttribute(key, v), this.cancellationToken);\n        }\n    }\n    handleClass(data) {\n        if (this.node instanceof Text) {\n            return;\n        }\n        if (typeof data === 'string') {\n            this.node.className = data;\n        }\n        else if (data instanceof DataSource) {\n            if (data.value) {\n                if (Array.isArray(data.value)) {\n                    this.node.className = data.value.join(' ');\n                    data.unique(this.cancellationToken).listen(() => {\n                        this.node.className = data.value.join(' ');\n                    }, this.cancellationToken);\n                }\n                else {\n                    this.node.className = data.value;\n                    data.unique(this.cancellationToken).listen(() => {\n                        this.node.className = data.value;\n                    }, this.cancellationToken);\n                }\n            }\n            data.unique(this.cancellationToken).listen((v) => (this.node.className = v), this.cancellationToken);\n        }\n        else {\n            const value = data.reduce((p, c) => {\n                if (typeof c === 'string') {\n                    return `${p} ${c}`;\n                }\n                else {\n                    if (c.value) {\n                        return `${p} ${c.value}`;\n                    }\n                    else {\n                        return p;\n                    }\n                }\n            }, '');\n            this.node.className = value;\n            for (const i of data) {\n                if (i instanceof DataSource) {\n                    i.unique(this.cancellationToken).listen((v) => {\n                        const value = data.reduce((p, c) => {\n                            if (typeof c === 'string') {\n                                return `${p} ${c}`;\n                            }\n                            else {\n                                if (c.value) {\n                                    return `${p} ${c.value}`;\n                                }\n                                else {\n                                    return p;\n                                }\n                            }\n                        }, '');\n                        this.node.className = value;\n                    }, this.cancellationToken);\n                }\n            }\n        }\n    }\n    resolveStringSource(source) {\n        if (typeof source === 'string') {\n            return source;\n        }\n        else {\n            return source.value;\n        }\n    }\n    create(props) {\n        const node = document.createElement(this.domNodeName);\n        node[ownerSymbol] = this;\n        return node;\n    }\n    getChildIndex(node) {\n        let i = 0;\n        for (const child of node.childNodes) {\n            if (child === node) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n    hasChild(node) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        for (const child of node.children) {\n            if (child === node) {\n                return true;\n            }\n        }\n        return false;\n    }\n    addChildrenDom(children) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        for (const child of children) {\n            this.node.appendChild(child.node);\n        }\n    }\n    swapChildrenDom(indexA, indexB) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (indexA === indexB) {\n            return;\n        }\n        const nodeA = this.node.children[indexA];\n        const nodeB = this.node.children[indexB];\n        nodeA.remove();\n        nodeB.remove();\n        if (indexA < indexB) {\n            this.addDomNodeAt(nodeB, indexA);\n            this.addDomNodeAt(nodeA, indexB);\n        }\n        else {\n            this.addDomNodeAt(nodeA, indexB);\n            this.addDomNodeAt(nodeB, indexA);\n        }\n    }\n    addDomNodeAt(node, index) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (index >= this.node.childElementCount) {\n            this.node.appendChild(node);\n        }\n        else {\n            this.node.insertBefore(node, this.node.children[index]);\n        }\n    }\n    remove() {\n        if (this.hasParent()) {\n            this.node.parentElement[ownerSymbol].removeChild(this.node);\n        }\n    }\n    hasParent() {\n        return !!this.node.parentElement;\n    }\n    isConnected() {\n        return this.node.isConnected;\n    }\n    removeChild(child) {\n        const index = this.children.indexOf(child);\n        if (index !== -1) {\n            this.children.splice(index, 1);\n        }\n        this.render();\n    }\n    removeChildAt(index) {\n        this.children.splice(index, 1);\n        this.render();\n    }\n    swapChildren(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const nodeA = this.children[indexA];\n        const nodeB = this.children[indexB];\n        this.children[indexA] = nodeB;\n        this.children[indexB] = nodeA;\n        this.render();\n    }\n    clearChildren() {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        this.children.length = 0;\n        this.render();\n    }\n    addChild(child) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (child instanceof Template) {\n            return;\n        }\n        child = this.childNodeToAurum(child);\n        this.children.push(child);\n        this.render();\n    }\n    childNodeToAurum(child) {\n        if (typeof child === 'string' || child instanceof DataSource) {\n            child = new TextNode({\n                text: child\n            });\n        }\n        return child;\n    }\n    addChildAt(child, index) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (child instanceof Template) {\n            return;\n        }\n        child = this.childNodeToAurum(child);\n        this.children.splice(index, 0, child);\n        this.render();\n    }\n    addChildren(nodes) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (nodes.length === 0) {\n            return;\n        }\n        for (const child of nodes) {\n            this.addChild(child);\n        }\n    }\n    dispose() {\n        this.cancellationToken.cancel();\n        this.remove();\n        for (const child of this.node.childNodes) {\n            if (child[ownerSymbol]) {\n                child[ownerSymbol].dispose();\n            }\n        }\n    }\n}\nexport class Template extends AurumElement {\n    constructor(props) {\n        super(props, 'template');\n        this.ref = props.ref;\n        this.generate = props.generator;\n    }\n}\nexport class TextNode extends AurumElement {\n    constructor(props) {\n        super(props, 'textNode');\n        if (props.text instanceof DataSource) {\n            props.text.listen((v) => (this.node.textContent = v), this.cancellationToken);\n        }\n    }\n    create(props) {\n        const node = document.createTextNode(this.resolveStringSource(props.text));\n        node[ownerSymbol] = this;\n        return node;\n    }\n}\n//# sourceMappingURL=aurum_element.js.map","import { Template } from '../nodes/aurum_element';\nimport { ownerSymbol } from './owner_symbol';\nexport class Aurum {\n    static attach(node, dom) {\n        if (dom[ownerSymbol]) {\n            throw new Error('This node is already managed by aurum and cannot be used');\n        }\n        dom.appendChild(node.node);\n        dom[ownerSymbol] = node;\n    }\n    static detach(domNode) {\n        if (domNode[ownerSymbol]) {\n            domNode[ownerSymbol].node.remove();\n            domNode[ownerSymbol].dispose();\n            domNode[ownerSymbol] = undefined;\n        }\n    }\n    static factory(node, args, ...innerNodes) {\n        if (typeof node === 'string') {\n            return;\n        }\n        const children = [].concat(...innerNodes).filter((e) => e);\n        const templateMap = {};\n        let defaultTemplate;\n        let hasRef = false;\n        for (const c of children) {\n            if (typeof c === 'string') {\n                continue;\n            }\n            if (c instanceof Template && (!c.ref || c.ref === 'default')) {\n                defaultTemplate = c;\n            }\n            if (c.ref) {\n                templateMap[c.ref] = c;\n                hasRef = true;\n            }\n        }\n        args = (args !== null && args !== void 0 ? args : {});\n        if (defaultTemplate) {\n            args.template = defaultTemplate;\n        }\n        if (hasRef) {\n            args.templateMap = templateMap;\n        }\n        let instance;\n        if (node.prototype) {\n            instance = new node(args || {});\n        }\n        else {\n            instance = node(args || {});\n        }\n        instance.addChildren(children);\n        return instance;\n    }\n}\n//# sourceMappingURL=aurum.js.map","import { AurumElement } from './aurum_element';\nexport class Button extends AurumElement {\n    constructor(props) {\n        super(props, 'button');\n    }\n}\n//# sourceMappingURL=button.js.map","import { AurumElement } from './aurum_element';\nexport class Div extends AurumElement {\n    constructor(props) {\n        super(props, 'div');\n    }\n}\n//# sourceMappingURL=div.js.map","import { AurumElement } from './aurum_element';\nexport class Input extends AurumElement {\n    constructor(props) {\n        var _a, _b, _c;\n        super(props, 'input');\n        if (props.inputValueSource) {\n            this.node.value = (_b = (_a = props.initialValue, (_a !== null && _a !== void 0 ? _a : props.inputValueSource.value)), (_b !== null && _b !== void 0 ? _b : ''));\n            props.inputValueSource.listen((value) => (this.node.value = value), this.cancellationToken);\n        }\n        else {\n            this.node.value = (_c = props.initialValue, (_c !== null && _c !== void 0 ? _c : ''));\n        }\n        this.bindProps(['placeholder'], props);\n        this.createEventHandlers(['input', 'change'], props);\n    }\n}\n//# sourceMappingURL=input.js.map","import { AurumElement } from './aurum_element';\nexport class Li extends AurumElement {\n    constructor(props) {\n        super(props, 'li');\n    }\n}\n//# sourceMappingURL=li.js.map","import { AurumElement } from './aurum_element';\nexport class Span extends AurumElement {\n    constructor(props) {\n        super(props, 'span');\n    }\n}\n//# sourceMappingURL=span.js.map","import { AurumElement } from './aurum_element';\nexport class Style extends AurumElement {\n    constructor(props) {\n        super(props, 'style');\n    }\n}\n//# sourceMappingURL=style.js.map","import { AurumElement } from './aurum_element';\nexport class Ul extends AurumElement {\n    constructor(props) {\n        super(props, 'ul');\n    }\n}\n//# sourceMappingURL=ul.js.map","import { AurumElement } from './aurum_element';\nexport class P extends AurumElement {\n    constructor(props) {\n        super(props, 'p');\n    }\n}\n//# sourceMappingURL=p.js.map","import { AurumElement } from './aurum_element';\nexport class Img extends AurumElement {\n    constructor(props) {\n        super(props, 'img');\n        this.bindProps(['src'], props);\n    }\n}\n//# sourceMappingURL=img.js.map","import { AurumElement } from './aurum_element';\nexport class Link extends AurumElement {\n    constructor(props) {\n        super(props, 'link');\n        this.bindProps(['href', 'rel'], props);\n    }\n}\n//# sourceMappingURL=link.js.map","import { AurumElement } from './aurum_element';\nexport class Canvas extends AurumElement {\n    constructor(props) {\n        super(props, 'canvas');\n        this.bindProps(['width', 'height'], props);\n    }\n}\n//# sourceMappingURL=canvas.js.map","import { AurumElement } from './aurum_element';\nexport class A extends AurumElement {\n    constructor(props) {\n        super(props, 'a');\n        this.bindProps(['href'], props);\n    }\n}\n//# sourceMappingURL=a.js.map","import { AurumElement } from './aurum_element';\nexport class Article extends AurumElement {\n    constructor(props) {\n        super(props, 'pre');\n    }\n}\n//# sourceMappingURL=article.js.map","import { AurumElement } from './aurum_element';\nexport class Br extends AurumElement {\n    constructor(props) {\n        super(props, 'br');\n    }\n}\n//# sourceMappingURL=br.js.map","import { AurumElement } from './aurum_element';\nexport class Form extends AurumElement {\n    constructor(props) {\n        super(props, 'form');\n    }\n}\n//# sourceMappingURL=form.js.map","import { AurumElement } from './aurum_element';\nexport class Label extends AurumElement {\n    constructor(props) {\n        super(props, 'label');\n        this.bindProps(['for'], props);\n    }\n}\n//# sourceMappingURL=label.js.map","import { AurumElement } from './aurum_element';\nexport class Ol extends AurumElement {\n    constructor(props) {\n        super(props, 'ol');\n    }\n}\n//# sourceMappingURL=ol.js.map","import { AurumElement } from './aurum_element';\nexport class Pre extends AurumElement {\n    constructor(props) {\n        super(props, 'pre');\n    }\n}\n//# sourceMappingURL=pre.js.map","import { AurumElement } from './aurum_element';\nexport class Progress extends AurumElement {\n    constructor(props) {\n        super(props, 'progress');\n        this.bindProps(['max', 'value'], props);\n    }\n}\n//# sourceMappingURL=progress.js.map","import { AurumElement } from './aurum_element';\nexport class Table extends AurumElement {\n    constructor(props) {\n        super(props, 'table');\n    }\n}\n//# sourceMappingURL=table.js.map","import { AurumElement } from './aurum_element';\nexport class Td extends AurumElement {\n    constructor(props) {\n        super(props, 'td');\n    }\n}\n//# sourceMappingURL=td.js.map","import { AurumElement } from './aurum_element';\nexport class TextArea extends AurumElement {\n    constructor(props) {\n        var _a, _b, _c;\n        super(props, 'textArea');\n        if (props.inputValueSource) {\n            this.node.value = (_b = (_a = props.initialValue, (_a !== null && _a !== void 0 ? _a : props.inputValueSource.value)), (_b !== null && _b !== void 0 ? _b : ''));\n            props.inputValueSource.listen((value) => (this.node.value = value), this.cancellationToken);\n        }\n        else {\n            this.node.value = (_c = props.initialValue, (_c !== null && _c !== void 0 ? _c : ''));\n        }\n        this.bindProps(['placeholder'], props);\n        this.createEventHandlers(['input', 'change'], props);\n    }\n}\n//# sourceMappingURL=textarea.js.map","import { AurumElement } from './aurum_element';\nexport class Th extends AurumElement {\n    constructor(props) {\n        super(props, 'th');\n    }\n}\n//# sourceMappingURL=th.js.map","import { AurumElement } from './aurum_element';\nexport class Tr extends AurumElement {\n    constructor(props) {\n        super(props, 'tr');\n    }\n}\n//# sourceMappingURL=tr.js.map","import { AurumElement } from './aurum_element';\nexport class H1 extends AurumElement {\n    constructor(props) {\n        super(props, 'h1');\n    }\n}\n//# sourceMappingURL=h1.js.map","import { AurumElement } from './aurum_element';\nexport class H2 extends AurumElement {\n    constructor(props) {\n        super(props, 'h2');\n    }\n}\n//# sourceMappingURL=h2.js.map","import { AurumElement } from './aurum_element';\nexport class H3 extends AurumElement {\n    constructor(props) {\n        super(props, 'h3');\n    }\n}\n//# sourceMappingURL=h3.js.map","import { AurumElement } from './aurum_element';\nexport class H4 extends AurumElement {\n    constructor(props) {\n        super(props, 'h4');\n    }\n}\n//# sourceMappingURL=h4.js.map","import { AurumElement } from './aurum_element';\nexport class H5 extends AurumElement {\n    constructor(props) {\n        super(props, 'h5');\n    }\n}\n//# sourceMappingURL=h5.js.map","import { AurumElement } from './aurum_element';\nexport class H6 extends AurumElement {\n    constructor(props) {\n        super(props, 'h6');\n    }\n}\n//# sourceMappingURL=h6.js.map","import { AurumElement } from './aurum_element';\nexport class Header extends AurumElement {\n    constructor(props) {\n        super(props, 'header');\n    }\n}\n//# sourceMappingURL=header.js.map","import { AurumElement } from './aurum_element';\nexport class Footer extends AurumElement {\n    constructor(props) {\n        super(props, 'header');\n    }\n}\n//# sourceMappingURL=footer.js.map","import { AurumElement } from '../aurum_element';\nexport class Switch extends AurumElement {\n    constructor(props) {\n        super(props, 'switch');\n        this.firstRender = true;\n        this.templateMap = props.templateMap;\n        this.renderSwitch(props.state.value);\n        props.state.listen((data) => {\n            this.renderSwitch(data);\n        }, this.cancellationToken);\n    }\n    renderSwitch(data) {\n        var _a;\n        if (data !== this.lastValue || this.firstRender) {\n            this.lastValue = data;\n            this.firstRender = false;\n            this.clearChildren();\n            if (data !== undefined && data !== null) {\n                const template = (_a = this.templateMap[data.toString()], (_a !== null && _a !== void 0 ? _a : this.template));\n                if (template) {\n                    const result = template.generate();\n                    this.addChild(result);\n                }\n            }\n            else if (this.template) {\n                const result = this.template.generate();\n                this.addChild(result);\n            }\n        }\n    }\n}\n//# sourceMappingURL=switch.js.map"],"names":["EventEmitter","config","subscribeChannel","subscribeOnceChannel","throttleCount","onAfterFire","observable","makeObservable","cancellationToken","addCancelable","this","cancelAll","throttled","throttle","prototypeAccessors","subscriptions","length","oneTimeSubscriptions","linkEvent","eventToLink","linkedEvents","push","unlinkEvent","eventToUnlink","includes","Error","splice","indexOf","onSubscribe","onSubscribeOnce","onCancelAll","onCancel","swapSubscriptions","event","sub","subOnce","subscribe","callback","fire","createSubscription","hasSubscriptions","subscribeOnce","Promise","resolved","data","undefined","data2","data3","data4","data5","isFiring","i","let","forEach","cb","channel","that","subscription","facade","cancel","index","DataSource","initialValue","value","listeners","update","newValue","l","listen","_a","filter","filteredSource","pipe","targetDataSource","v","map","mappedSource","unique","uniqueSource","reduce","reducer","reduceSource","aggregate","otherSource","combinator","aggregatedSource","combine","combinedDataSource","pick","key","subDataSource","ArrayDataSource","initialData","slice","onChange","getData","get","set","item","old","items","newState","swap","indexA","indexB","itemA","itemB","swapItems","ref","count","unshift","pop","merge","newData","removeRight","result","removeLeft","remove","clear","shift","toArray","FilteredArrayView","callbackfn","thisArg","toDataSource","stream","s","parent","initial","viewFilter","change","filteredItems","operation","ref$1","target","updateFilter","refresh","LinkedListNode","deleteNext","next","overNext","previous","deletePrevious","LinkedList","d","append","find","predicate","ptr","rootNode","element","lastNode","n","prepend","e","CancellationToken","cancelables","cancellables","_isCancelled","isCanceled","delegate","throwIfCancelled","console","log","removeCancelable","addDisposable","disposable","dispose","callIfNotCancelled","action","setTimeout","time","id","clearTimeout","setInterval","clearInterval","requestAnimationFrame","cancelAnimationFrame","animationLoop","f","msg","chain","twoWays","registerDomEvent","eventEmitter","addEventListener","removeEventListener","c","const","ownerSymbol","Symbol","AurumElement","props","domNodeName","template","node","create","initialize","Text","children","onAttach","createEventHandlers","bindProps","class","handleClass","repeatModel","handleRepeat","keys","assignStringSourceToAttribute","computedEventName","toUpperCase","Object","defineProperty","bind","onClick","dataSource","repeatData","generate","render","index2","ref$2","rerenderPending","childNodes","addChildrenDom","getChildIndex","swapChildrenDom","addDomNodeAt","removeChild","setAttribute","className","Array","isArray","join","p","resolveStringSource","source","document","createElement","hasChild","appendChild","nodeA","nodeB","childElementCount","insertBefore","hasParent","parentElement","isConnected","child","removeChildAt","swapChildren","clearChildren","addChild","Template","childNodeToAurum","TextNode","addChildAt","addChildren","nodes","generator","text","textContent","createTextNode","Aurum","attach","dom","detach","domNode","factory","args","defaultTemplate","instance","concat","innerNodes","templateMap","hasRef","prototype","Button","Div","Input","inputValueSource","_b","_c","Li","Span","Style","Ul","P","Img","Link","Canvas","A","Article","Br","Form","Label","Ol","Pre","Progress","Table","Td","TextArea","Th","Tr","H1","H2","H3","H4","H5","H6","Header","Footer","Switch","firstRender","renderSwitch","state","lastValue","toString"],"mappings":"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"}