{"version":3,"file":"aurumjs.js","sources":["../dist/stream/event_emitter.js","../dist/stream/data_source.js","../dist/utilities/linkedlist/linked_list_node.js","../dist/utilities/linkedlist/linked_list.js","../dist/utilities/cancellation_token.js","../dist/utilities/owner_symbol.js","../dist/nodes/aurum_element.js","../dist/utilities/aurum.js","../dist/nodes/button.js","../dist/nodes/div.js","../dist/nodes/input.js","../dist/nodes/li.js","../dist/nodes/span.js","../dist/nodes/style.js","../dist/nodes/ul.js","../dist/nodes/p.js","../dist/nodes/img.js","../dist/nodes/link.js","../dist/nodes/canvas.js","../dist/nodes/a.js","../dist/nodes/article.js","../dist/nodes/br.js","../dist/nodes/form.js","../dist/nodes/label.js","../dist/nodes/ol.js","../dist/nodes/pre.js","../dist/nodes/progress.js","../dist/nodes/table.js","../dist/nodes/td.js","../dist/nodes/textarea.js","../dist/nodes/th.js","../dist/nodes/tr.js","../dist/nodes/h1.js","../dist/nodes/h2.js","../dist/nodes/h3.js","../dist/nodes/h4.js","../dist/nodes/h5.js","../dist/nodes/h6.js","../dist/nodes/header.js","../dist/nodes/footer.js","../dist/nodes/nav.js","../dist/nodes/b.js","../dist/nodes/i.js","../dist/nodes/script.js","../dist/nodes/special/switch.js","../dist/nodes/special/router.js"],"sourcesContent":["export class EventEmitter {\n    constructor(config) {\n        this.subscribeChannel = [];\n        this.subscribeOnceChannel = [];\n        this.throttleCount = 0;\n        this.onAfterFire = [];\n        if (config) {\n            if (config.observable) {\n                this.makeObservable();\n            }\n            if (config.cancellationToken) {\n                config.cancellationToken.addCancelable(() => this.cancelAll());\n            }\n            if (config.throttled) {\n                this.throttle = config.throttled;\n            }\n        }\n    }\n    get subscriptions() {\n        return this.subscribeChannel.length;\n    }\n    get oneTimeSubscriptions() {\n        return this.subscribeOnceChannel.length;\n    }\n    linkEvent(eventToLink) {\n        if (!this.linkedEvents) {\n            this.linkedEvents = [];\n        }\n        this.linkedEvents.push(eventToLink);\n    }\n    unlinkEvent(eventToUnlink) {\n        if (!this.linkedEvents || !this.linkedEvents.includes(eventToUnlink)) {\n            throw new Error('Cannot unlink event that is not linked');\n        }\n        this.linkedEvents.splice(this.linkedEvents.indexOf(eventToUnlink), 1);\n    }\n    makeObservable() {\n        if (!this.onSubscribe) {\n            this.onSubscribe = new EventEmitter();\n            this.onSubscribeOnce = new EventEmitter();\n            this.onCancelAll = new EventEmitter();\n            this.onCancel = new EventEmitter();\n        }\n    }\n    swapSubscriptions(event) {\n        const sub = this.subscribeChannel;\n        const subOnce = this.subscribeOnceChannel;\n        this.subscribeChannel = event.subscribeChannel;\n        this.subscribeOnceChannel = event.subscribeOnceChannel;\n        event.subscribeChannel = sub;\n        event.subscribeOnceChannel = subOnce;\n    }\n    subscribe(callback, cancellationToken) {\n        if (this.onSubscribe) {\n            this.onSubscribe.fire();\n        }\n        const { facade } = this.createSubscription(callback, this.subscribeChannel, cancellationToken);\n        return facade;\n    }\n    hasSubscriptions() {\n        return this.subscriptions > 0 || this.oneTimeSubscriptions > 0;\n    }\n    subscribeOnce(cancellationToken) {\n        if (this.onSubscribeOnce) {\n            this.onSubscribeOnce.fire();\n        }\n        return new Promise((resolved) => {\n            this.createSubscription((data) => resolved(data), this.subscribeOnceChannel, cancellationToken);\n        });\n    }\n    cancelAll() {\n        if (this.onCancelAll !== undefined) {\n            this.onCancelAll.fire();\n        }\n    }\n    fire(data, data2, data3, data4, data5) {\n        if (this.throttle && this.throttleCount++ % this.throttle !== 0) {\n            return;\n        }\n        this.isFiring = true;\n        let length = this.subscribeChannel.length;\n        for (let i = 0; i < length; i++) {\n            this.subscribeChannel[i].callback(data);\n        }\n        length = this.subscribeOnceChannel.length;\n        if (this.subscribeOnceChannel.length > 0) {\n            for (let i = 0; i < length; i++) {\n                this.subscribeOnceChannel[i].callback(data);\n            }\n            this.subscribeOnceChannel.length = 0;\n        }\n        if (this.linkedEvents) {\n            for (let event of this.linkedEvents) {\n                event.fire(data, data2, data3, data4, data5);\n            }\n        }\n        this.isFiring = false;\n        if (this.onAfterFire.length > 0) {\n            this.onAfterFire.forEach((cb) => cb());\n            this.onAfterFire.length = 0;\n        }\n    }\n    createSubscription(callback, channel, cancellationToken) {\n        const that = this;\n        const subscription = {\n            callback\n        };\n        const facade = {\n            cancel() {\n                that.cancel(subscription, channel);\n            }\n        };\n        if (cancellationToken !== undefined) {\n            cancellationToken.addCancelable(() => that.cancel(subscription, channel));\n        }\n        channel.push(subscription);\n        return { subscription, facade };\n    }\n    cancel(subscription, channel) {\n        let index = channel.indexOf(subscription);\n        if (index >= 0) {\n            if (!this.isFiring) {\n                channel.splice(index, 1);\n            }\n            else {\n                this.onAfterFire.push(() => this.cancel(subscription, channel));\n            }\n        }\n    }\n}\n//# sourceMappingURL=event_emitter.js.map","import { EventEmitter } from './event_emitter';\nexport class DataSource {\n    constructor(initialValue) {\n        this.value = initialValue;\n        this.listeners = [];\n    }\n    update(newValue) {\n        this.value = newValue;\n        for (const l of this.listeners) {\n            l(newValue);\n        }\n    }\n    listen(callback, cancellationToken) {\n        var _a;\n        this.listeners.push(callback);\n        const cancel = () => {\n            const index = this.listeners.indexOf(callback);\n            if (index !== -1) {\n                this.listeners.splice(index, 1);\n            }\n        };\n        (_a = cancellationToken) === null || _a === void 0 ? void 0 : _a.addCancelable(() => {\n            cancel();\n        });\n        return cancel;\n    }\n    filter(callback, cancellationToken) {\n        const filteredSource = new DataSource();\n        this.listen((value) => {\n            if (callback(value)) {\n                filteredSource.update(value);\n            }\n        }, cancellationToken);\n        return filteredSource;\n    }\n    pipe(targetDataSource, cancellationToken) {\n        this.listen((v) => targetDataSource.update(v), cancellationToken);\n    }\n    map(callback, cancellationToken) {\n        const mappedSource = new DataSource(callback(this.value));\n        this.listen((value) => {\n            mappedSource.update(callback(value));\n        }, cancellationToken);\n        return mappedSource;\n    }\n    unique(cancellationToken) {\n        const uniqueSource = new DataSource(this.value);\n        this.listen((value) => {\n            if (value !== uniqueSource.value) {\n                uniqueSource.update(value);\n            }\n        }, cancellationToken);\n        return uniqueSource;\n    }\n    reduce(reducer, initialValue, cancellationToken) {\n        const reduceSource = new DataSource(initialValue);\n        this.listen((v) => reduceSource.update(reducer(reduceSource.value, v)), cancellationToken);\n        return reduceSource;\n    }\n    aggregate(otherSource, combinator, cancellationToken) {\n        const aggregatedSource = new DataSource(combinator(this.value, otherSource.value));\n        this.listen(() => aggregatedSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        otherSource.listen(() => aggregatedSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        return aggregatedSource;\n    }\n    combine(otherSource, cancellationToken) {\n        const combinedDataSource = new DataSource();\n        this.pipe(combinedDataSource, cancellationToken);\n        otherSource.pipe(combinedDataSource, cancellationToken);\n        return combinedDataSource;\n    }\n    debounce(time, cancellationToken) {\n        const debouncedDataSource = new DataSource();\n        let timeout;\n        this.listen((v) => {\n            clearTimeout(timeout);\n            setTimeout(() => {\n                debouncedDataSource.update(v);\n            }, time);\n        }, cancellationToken);\n        return debouncedDataSource;\n    }\n    buffer(time, cancellationToken) {\n        const bufferedDataSource = new DataSource();\n        let timeout;\n        let buffer = [];\n        this.listen((v) => {\n            buffer.push(v);\n            if (!timeout) {\n                setTimeout(() => {\n                    timeout = undefined;\n                    bufferedDataSource.update(buffer);\n                    buffer = [];\n                }, time);\n            }\n        }, cancellationToken);\n        return bufferedDataSource;\n    }\n    queue(time, cancellationToken) {\n        const queueDataSource = new ArrayDataSource();\n        this.listen((v) => {\n            queueDataSource.push(v);\n        }, cancellationToken);\n        return queueDataSource;\n    }\n    pick(key, cancellationToken) {\n        var _a;\n        const subDataSource = new DataSource((_a = this.value) === null || _a === void 0 ? void 0 : _a[key]);\n        this.listen((v) => {\n            if (v !== undefined && v !== null) {\n                subDataSource.update(v[key]);\n            }\n            else {\n                subDataSource.update(v);\n            }\n        }, cancellationToken);\n        return subDataSource;\n    }\n    cancelAll() {\n        this.listeners.length = 0;\n    }\n}\nexport class ArrayDataSource {\n    constructor(initialData) {\n        if (initialData) {\n            this.data = initialData.slice();\n        }\n        else {\n            this.data = [];\n        }\n        this.onChange = new EventEmitter();\n    }\n    get length() {\n        return this.data.length;\n    }\n    getData() {\n        return this.data.slice();\n    }\n    get(index) {\n        return this.data[index];\n    }\n    set(index, item) {\n        const old = this.data[index];\n        if (old === item) {\n            return;\n        }\n        this.data[index] = item;\n        this.onChange.fire({ operation: 'replace', target: old, count: 1, index, items: [item], newState: this.data });\n    }\n    swap(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const itemA = this.data[indexA];\n        const itemB = this.data[indexB];\n        this.data[indexB] = itemA;\n        this.data[indexA] = itemB;\n        this.onChange.fire({ operation: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n    }\n    swapItems(itemA, itemB) {\n        if (itemA === itemB) {\n            return;\n        }\n        const indexA = this.data.indexOf(itemA);\n        const indexB = this.data.indexOf(itemB);\n        if (indexA !== -1 && indexB !== -1) {\n            this.data[indexB] = itemA;\n            this.data[indexA] = itemB;\n        }\n        this.onChange.fire({ operation: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n    }\n    push(...items) {\n        this.data.push(...items);\n        this.onChange.fire({\n            operation: 'append',\n            count: items.length,\n            index: this.data.length - items.length,\n            items,\n            newState: this.data\n        });\n    }\n    unshift(...items) {\n        this.data.unshift(...items);\n        this.onChange.fire({ operation: 'prepend', count: items.length, items, index: 0, newState: this.data });\n    }\n    pop() {\n        const item = this.data.pop();\n        this.onChange.fire({\n            operation: 'remove',\n            count: 1,\n            index: this.data.length,\n            items: [item],\n            newState: this.data\n        });\n        return item;\n    }\n    merge(newData) {\n        for (let i = 0; i < newData.length; i++) {\n            if (this.data[i] !== newData[i]) {\n                if (this.length > i) {\n                    this.set(i, newData[i]);\n                }\n                else {\n                    this.push(newData[i]);\n                }\n            }\n        }\n        if (this.length > newData.length) {\n            this.removeRight(this.length - newData.length);\n        }\n    }\n    removeRight(count) {\n        const result = this.data.splice(this.length - count, count);\n        this.onChange.fire({ operation: 'remove', count, index: this.length - count, items: result, newState: this.data });\n    }\n    removeLeft(count) {\n        const result = this.data.splice(0, count);\n        this.onChange.fire({ operation: 'remove', count, index: 0, items: result, newState: this.data });\n    }\n    remove(item) {\n        const index = this.data.indexOf(item);\n        if (index !== -1) {\n            this.data.splice(index, 1);\n            this.onChange.fire({ operation: 'remove', count: 1, index, items: [item], newState: this.data });\n        }\n    }\n    clear() {\n        const items = this.data;\n        this.data = [];\n        this.onChange.fire({\n            operation: 'remove',\n            count: items.length,\n            index: 0,\n            items,\n            newState: this.data\n        });\n    }\n    shift() {\n        const item = this.data.shift();\n        this.onChange.fire({ operation: 'remove', items: [item], count: 1, index: 0, newState: this.data });\n        return item;\n    }\n    toArray() {\n        return this.data.slice();\n    }\n    filter(callback, cancellationToken) {\n        return new FilteredArrayView(this, callback, cancellationToken);\n    }\n    forEach(callbackfn, thisArg) {\n        return this.data.forEach(callbackfn, thisArg);\n    }\n    toDataSource() {\n        const stream = new DataSource(this.data);\n        this.onChange.subscribe((s) => {\n            stream.update(s.newState);\n        });\n        return stream;\n    }\n}\nexport class FilteredArrayView extends ArrayDataSource {\n    constructor(parent, filter, cancellationToken) {\n        const initial = parent.data.filter(filter);\n        super(initial);\n        this.parent = parent;\n        this.viewFilter = filter;\n        parent.onChange.subscribe((change) => {\n            let filteredItems;\n            switch (change.operation) {\n                case 'remove':\n                    for (const item of change.items) {\n                        this.remove(item);\n                    }\n                    break;\n                case 'prepend':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.unshift(...filteredItems);\n                    break;\n                case 'append':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.push(...filteredItems);\n                    break;\n                case 'swap':\n                    const indexA = this.data.indexOf(change.items[0]);\n                    const indexB = this.data.indexOf(change.items[1]);\n                    if (indexA !== -1 && indexB !== -1) {\n                        this.swap(indexA, indexB);\n                    }\n                    break;\n                case 'replace':\n                    const index = this.data.indexOf(change.target);\n                    if (index !== -1) {\n                        const acceptNew = this.viewFilter(change.items[0]);\n                        if (acceptNew) {\n                            this.set(index, change.items[0]);\n                        }\n                        else {\n                            this.remove(change.target);\n                        }\n                    }\n                    break;\n            }\n        }, cancellationToken);\n    }\n    updateFilter(filter) {\n        if (this.viewFilter === filter) {\n            return;\n        }\n        this.viewFilter = filter;\n        this.refresh();\n    }\n    refresh() {\n        this.clear();\n        const data = this.parent.data.filter(this.viewFilter);\n        this.push(...data);\n    }\n}\n//# sourceMappingURL=data_source.js.map","export class LinkedListNode {\n    constructor(data) {\n        this.data = data;\n    }\n    deleteNext() {\n        if (this.next) {\n            const overNext = this.next.next;\n            this.next.next = undefined;\n            this.next.previous = undefined;\n            this.next = overNext;\n            this.next.previous = this;\n        }\n    }\n    deletePrevious() {\n        if (this.previous) {\n            this.previous = this.previous.previous;\n            this.previous.next = undefined;\n            this.previous.previous = undefined;\n        }\n    }\n}\n//# sourceMappingURL=linked_list_node.js.map","import { LinkedListNode } from './linked_list_node';\nexport class LinkedList {\n    constructor(data = []) {\n        this.length = 0;\n        data.forEach((d) => this.append(d));\n    }\n    find(predicate) {\n        let ptr = this.rootNode;\n        while (ptr && !predicate(ptr)) {\n            ptr = ptr.next;\n        }\n        return ptr;\n    }\n    append(element) {\n        if (!this.rootNode && !this.lastNode) {\n            this.rootNode = this.lastNode = new LinkedListNode(element);\n        }\n        else {\n            this.lastNode.next = new LinkedListNode(element);\n            this.lastNode.next.previous = this.lastNode;\n            this.lastNode = this.lastNode.next;\n        }\n        this.length++;\n        return element;\n    }\n    forEach(cb) {\n        this.find((n) => {\n            cb(n.data);\n            return false;\n        });\n    }\n    prepend(element) {\n        if (!this.rootNode && !this.lastNode) {\n            this.rootNode = this.lastNode = new LinkedListNode(element);\n        }\n        else {\n            this.rootNode.previous = new LinkedListNode(element);\n            this.rootNode.previous.next = this.rootNode;\n            this.rootNode = this.rootNode.previous;\n        }\n        this.length++;\n        return element;\n    }\n    remove(element) {\n        if (element === this.rootNode.data) {\n            this.rootNode = this.rootNode.next;\n            this.length--;\n        }\n        else {\n            const result = this.find((e) => e.next && e.next.data === element);\n            if (result) {\n                if (result.next === this.lastNode) {\n                    this.lastNode = result;\n                }\n                result.deleteNext();\n                this.length--;\n            }\n        }\n    }\n}\n//# sourceMappingURL=linked_list.js.map","import { LinkedList } from './linkedlist/linked_list';\nexport class CancellationToken {\n    constructor(...cancellables) {\n        this.cancelables = new LinkedList(cancellables);\n        this._isCancelled = false;\n    }\n    get isCanceled() {\n        return this._isCancelled;\n    }\n    addCancelable(delegate) {\n        this.throwIfCancelled('attempting to add cancellable to token that is already cancelled');\n        this.cancelables.append(delegate);\n        if (this.cancelables.length > 200) {\n            console.log('potential memory leak: cancellation token has over 200 clean up calls');\n        }\n        return this;\n    }\n    removeCancelable(delegate) {\n        this.throwIfCancelled('attempting to remove cancellable from token that is already cancelled');\n        this.cancelables.remove(delegate);\n        return this;\n    }\n    addDisposable(disposable) {\n        this.addCancelable(() => disposable.dispose());\n        return this;\n    }\n    callIfNotCancelled(action) {\n        if (!this.isCanceled) {\n            action();\n        }\n    }\n    setTimeout(cb, time = 0) {\n        const id = setTimeout(cb, time);\n        this.addCancelable(() => clearTimeout(id));\n    }\n    setInterval(cb, time) {\n        const id = setInterval(cb, time);\n        this.addCancelable(() => clearInterval(id));\n    }\n    requestAnimationFrame(cb) {\n        const id = requestAnimationFrame(cb);\n        this.addCancelable(() => cancelAnimationFrame(id));\n    }\n    animationLoop(cb) {\n        let id = requestAnimationFrame(function f(time) {\n            cb(time);\n            id = requestAnimationFrame(f);\n        });\n        this.addCancelable(() => cancelAnimationFrame(id));\n    }\n    throwIfCancelled(msg) {\n        if (this.isCanceled) {\n            throw new Error(msg || 'cancellation token is cancelled');\n        }\n    }\n    chain(target, twoWays = false) {\n        if (twoWays) {\n            target.chain(this, false);\n        }\n        this.addCancelable(() => target.cancel());\n        return this;\n    }\n    registerDomEvent(eventEmitter, event, callback) {\n        eventEmitter.addEventListener(event, callback);\n        this.addCancelable(() => eventEmitter.removeEventListener(event, callback));\n        return this;\n    }\n    cancel() {\n        if (this.isCanceled) {\n            return;\n        }\n        this._isCancelled = true;\n        this.cancelables.forEach((c) => c());\n        this.cancelables = undefined;\n    }\n}\n//# sourceMappingURL=cancellation_token.js.map","export const ownerSymbol = Symbol('owner');\n//# sourceMappingURL=owner_symbol.js.map","import { DataSource, ArrayDataSource } from '../stream/data_source';\nimport { CancellationToken } from '../utilities/cancellation_token';\nimport { ownerSymbol } from '../utilities/owner_symbol';\nexport class AurumElement {\n    constructor(props, domNodeName) {\n        this.domNodeName = domNodeName;\n        this.template = props.template;\n        this.cancellationToken = new CancellationToken();\n        this.node = this.create(props);\n        this.initialize(props);\n        if (props.onAttach) {\n            props.onAttach(this);\n        }\n    }\n    initialize(props) {\n        if (!(this.node instanceof Text)) {\n            this.children = [];\n        }\n        this.createEventHandlers([\n            'drag',\n            'name',\n            'dragstart',\n            'dragend',\n            'dragexit',\n            'dragover',\n            'dragenter',\n            'dragleave',\n            'blur',\n            'focus',\n            'click',\n            'dblclick',\n            'keydown',\n            'keyhit',\n            'keyup',\n            'mousedown, mouseup',\n            'mouseenter',\n            'mouseleave',\n            'mousewheel'\n        ], props);\n        const dataProps = Object.keys(props).filter((e) => e.startsWith('x-') || e.startsWith('data-'));\n        this.bindProps(['id', 'draggable', 'tabindex', 'style', 'role', ...dataProps], props);\n        if (props.class) {\n            this.handleClass(props.class);\n        }\n        if (props.repeatModel) {\n            this.handleRepeat(props.repeatModel);\n        }\n    }\n    bindProps(keys, props) {\n        for (const key of keys) {\n            if (props[key]) {\n                this.assignStringSourceToAttribute(props[key], key);\n            }\n        }\n    }\n    createEventHandlers(keys, props) {\n        if (this.node instanceof Text) {\n            return;\n        }\n        for (const key of keys) {\n            const computedEventName = 'on' + key[0].toUpperCase() + key.slice(1);\n            let eventEmitter;\n            Object.defineProperty(this, computedEventName, {\n                get() {\n                    if (!eventEmitter) {\n                        eventEmitter = new DataSource();\n                    }\n                    return eventEmitter;\n                },\n                set() {\n                    throw new Error(computedEventName + ' is read only');\n                }\n            });\n            if (props[computedEventName]) {\n                if (props[computedEventName] instanceof DataSource) {\n                    this[computedEventName].listen(props[computedEventName].update.bind(props.onClick), this.cancellationToken);\n                }\n                else if (typeof props[computedEventName] === 'function') {\n                    this[computedEventName].listen(props[computedEventName], this.cancellationToken);\n                }\n            }\n            this.cancellationToken.registerDomEvent(this.node, key, (e) => this[computedEventName].update(e));\n        }\n    }\n    handleRepeat(dataSource) {\n        if (dataSource instanceof ArrayDataSource) {\n            this.repeatData = dataSource;\n        }\n        else {\n            this.repeatData = new ArrayDataSource(dataSource);\n        }\n        if (this.repeatData.length) {\n            this.children.push(...this.repeatData.toArray().map((i) => this.template.generate(i)));\n            this.render();\n        }\n        this.repeatData.onChange.subscribe((change) => {\n            switch (change.operation) {\n                case 'swap':\n                    const itemA = this.children[change.index];\n                    const itemB = this.children[change.index2];\n                    this.children[change.index2] = itemA;\n                    this.children[change.index] = itemB;\n                    break;\n                case 'append':\n                    this.children.push(...change.items.map((i) => this.template.generate(i)));\n                    break;\n                case 'prepend':\n                    this.children.unshift(...change.items.map((i) => this.template.generate(i)));\n                    break;\n                case 'remove':\n                    this.children.splice(change.index, change.count);\n                    break;\n                default:\n                    this.children.length = 0;\n                    this.children.push(...this.repeatData.toArray().map((i) => this.template.generate(i)));\n                    break;\n            }\n            this.render();\n        });\n    }\n    render() {\n        if (this.rerenderPending) {\n            return;\n        }\n        if (this.node instanceof Text) {\n            return;\n        }\n        setTimeout(() => {\n            for (let i = 0; i < this.children.length; i++) {\n                if (this.node.childNodes.length <= i) {\n                    this.addChildrenDom(this.children.slice(i, this.children.length));\n                    break;\n                }\n                if (this.node.childNodes[i][ownerSymbol] !== this.children[i]) {\n                    if (!this.children.includes(this.node.childNodes[i][ownerSymbol])) {\n                        this.node.childNodes[i].remove();\n                        i--;\n                        continue;\n                    }\n                    const index = this.getChildIndex(this.children[i].node);\n                    if (index !== -1) {\n                        this.swapChildrenDom(i, index);\n                    }\n                    else {\n                        this.addDomNodeAt(this.children[i].node, i);\n                    }\n                }\n            }\n            while (this.node.childNodes.length > this.children.length) {\n                this.node.removeChild(this.node.childNodes[this.node.childNodes.length - 1]);\n            }\n            this.rerenderPending = false;\n        });\n        this.rerenderPending = true;\n    }\n    assignStringSourceToAttribute(data, key) {\n        if (this.node instanceof Text) {\n            return;\n        }\n        if (typeof data === 'string') {\n            this.node.setAttribute(key, data);\n        }\n        else {\n            if (data.value) {\n                this.node.setAttribute(key, data.value);\n            }\n            data.unique(this.cancellationToken).listen((v) => this.node.setAttribute(key, v), this.cancellationToken);\n        }\n    }\n    handleClass(data) {\n        if (this.node instanceof Text) {\n            return;\n        }\n        if (typeof data === 'string') {\n            this.node.className = data;\n        }\n        else if (data instanceof DataSource) {\n            if (data.value) {\n                if (Array.isArray(data.value)) {\n                    this.node.className = data.value.join(' ');\n                    data.unique(this.cancellationToken).listen(() => {\n                        this.node.className = data.value.join(' ');\n                    }, this.cancellationToken);\n                }\n                else {\n                    this.node.className = data.value;\n                    data.unique(this.cancellationToken).listen(() => {\n                        this.node.className = data.value;\n                    }, this.cancellationToken);\n                }\n            }\n            data.unique(this.cancellationToken).listen((v) => (this.node.className = v), this.cancellationToken);\n        }\n        else {\n            const value = data.reduce((p, c) => {\n                if (typeof c === 'string') {\n                    return `${p} ${c}`;\n                }\n                else {\n                    if (c.value) {\n                        return `${p} ${c.value}`;\n                    }\n                    else {\n                        return p;\n                    }\n                }\n            }, '');\n            this.node.className = value;\n            for (const i of data) {\n                if (i instanceof DataSource) {\n                    i.unique(this.cancellationToken).listen((v) => {\n                        const value = data.reduce((p, c) => {\n                            if (typeof c === 'string') {\n                                return `${p} ${c}`;\n                            }\n                            else {\n                                if (c.value) {\n                                    return `${p} ${c.value}`;\n                                }\n                                else {\n                                    return p;\n                                }\n                            }\n                        }, '');\n                        this.node.className = value;\n                    }, this.cancellationToken);\n                }\n            }\n        }\n    }\n    resolveStringSource(source) {\n        if (typeof source === 'string') {\n            return source;\n        }\n        else {\n            return source.value;\n        }\n    }\n    create(props) {\n        const node = document.createElement(this.domNodeName);\n        node[ownerSymbol] = this;\n        return node;\n    }\n    getChildIndex(node) {\n        let i = 0;\n        for (const child of node.childNodes) {\n            if (child === node) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n    hasChild(node) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        for (const child of node.children) {\n            if (child === node) {\n                return true;\n            }\n        }\n        return false;\n    }\n    addChildrenDom(children) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        for (const child of children) {\n            this.node.appendChild(child.node);\n        }\n    }\n    swapChildrenDom(indexA, indexB) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (indexA === indexB) {\n            return;\n        }\n        const nodeA = this.node.children[indexA];\n        const nodeB = this.node.children[indexB];\n        nodeA.remove();\n        nodeB.remove();\n        if (indexA < indexB) {\n            this.addDomNodeAt(nodeB, indexA);\n            this.addDomNodeAt(nodeA, indexB);\n        }\n        else {\n            this.addDomNodeAt(nodeA, indexB);\n            this.addDomNodeAt(nodeB, indexA);\n        }\n    }\n    addDomNodeAt(node, index) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (index >= this.node.childElementCount) {\n            this.node.appendChild(node);\n        }\n        else {\n            this.node.insertBefore(node, this.node.children[index]);\n        }\n    }\n    remove() {\n        if (this.hasParent()) {\n            this.node.parentElement[ownerSymbol].removeChild(this.node);\n        }\n    }\n    hasParent() {\n        return !!this.node.parentElement;\n    }\n    isConnected() {\n        return this.node.isConnected;\n    }\n    removeChild(child) {\n        const index = this.children.indexOf(child);\n        if (index !== -1) {\n            this.children.splice(index, 1);\n        }\n        this.render();\n    }\n    removeChildAt(index) {\n        this.children.splice(index, 1);\n        this.render();\n    }\n    swapChildren(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const nodeA = this.children[indexA];\n        const nodeB = this.children[indexB];\n        this.children[indexA] = nodeB;\n        this.children[indexB] = nodeA;\n        this.render();\n    }\n    clearChildren() {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        this.children.length = 0;\n        this.render();\n    }\n    addChild(child) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (child instanceof Template) {\n            return;\n        }\n        child = this.childNodeToAurum(child);\n        this.children.push(child);\n        this.render();\n    }\n    childNodeToAurum(child) {\n        if (typeof child === 'string' || child instanceof DataSource) {\n            child = new TextNode({\n                text: child\n            });\n        }\n        else if (!(child instanceof AurumElement)) {\n            child = new TextNode({\n                text: child.toString()\n            });\n        }\n        return child;\n    }\n    addChildAt(child, index) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (child instanceof Template) {\n            return;\n        }\n        child = this.childNodeToAurum(child);\n        this.children.splice(index, 0, child);\n        this.render();\n    }\n    addChildren(nodes) {\n        if (this.node instanceof Text) {\n            throw new Error(\"Text nodes don't have children\");\n        }\n        if (nodes.length === 0) {\n            return;\n        }\n        for (const child of nodes) {\n            this.addChild(child);\n        }\n    }\n    dispose() {\n        this.cancellationToken.cancel();\n        this.remove();\n        for (const child of this.node.childNodes) {\n            if (child[ownerSymbol]) {\n                child[ownerSymbol].dispose();\n            }\n        }\n    }\n}\nexport class Template extends AurumElement {\n    constructor(props) {\n        super(props, 'template');\n        this.ref = props.ref;\n        this.generate = props.generator;\n    }\n}\nexport class TextNode extends AurumElement {\n    constructor(props) {\n        super(props, 'textNode');\n        if (props.text instanceof DataSource) {\n            props.text.listen((v) => (this.node.textContent = v), this.cancellationToken);\n        }\n    }\n    create(props) {\n        const node = document.createTextNode(this.resolveStringSource(props.text));\n        node[ownerSymbol] = this;\n        return node;\n    }\n}\n//# sourceMappingURL=aurum_element.js.map","import { Template } from '../nodes/aurum_element';\nimport { ownerSymbol } from './owner_symbol';\nexport class Aurum {\n    static attach(node, dom) {\n        if (dom[ownerSymbol]) {\n            throw new Error('This node is already managed by aurum and cannot be used');\n        }\n        dom.appendChild(node.node);\n        dom[ownerSymbol] = node;\n    }\n    static detach(domNode) {\n        if (domNode[ownerSymbol]) {\n            domNode[ownerSymbol].node.remove();\n            domNode[ownerSymbol].dispose();\n            domNode[ownerSymbol] = undefined;\n        }\n    }\n    static factory(node, args, ...innerNodes) {\n        if (typeof node === 'string') {\n            return;\n        }\n        const children = [].concat(...innerNodes).filter((e) => e);\n        const templateMap = {};\n        let defaultTemplate;\n        let hasRef = false;\n        for (const c of children) {\n            if (typeof c === 'string') {\n                continue;\n            }\n            if (c instanceof Template && (!c.ref || c.ref === 'default')) {\n                defaultTemplate = c;\n            }\n            if (c.ref) {\n                templateMap[c.ref] = c;\n                hasRef = true;\n            }\n        }\n        args = (args !== null && args !== void 0 ? args : {});\n        if (defaultTemplate) {\n            args.template = defaultTemplate;\n        }\n        if (hasRef) {\n            args.templateMap = templateMap;\n        }\n        let instance;\n        if (node.prototype) {\n            instance = new node(args || {});\n        }\n        else {\n            instance = node(args || {});\n        }\n        instance.addChildren(children);\n        return instance;\n    }\n}\n//# sourceMappingURL=aurum.js.map","import { AurumElement } from './aurum_element';\nexport class Button extends AurumElement {\n    constructor(props) {\n        super(props, 'button');\n        this.bindProps(['disabled'], props);\n    }\n}\n//# sourceMappingURL=button.js.map","import { AurumElement } from './aurum_element';\nexport class Div extends AurumElement {\n    constructor(props) {\n        super(props, 'div');\n    }\n}\n//# sourceMappingURL=div.js.map","import { AurumElement } from './aurum_element';\nexport class Input extends AurumElement {\n    constructor(props) {\n        var _a, _b, _c;\n        super(props, 'input');\n        if (props.inputValueSource) {\n            this.node.value = (_b = (_a = props.initialValue, (_a !== null && _a !== void 0 ? _a : props.inputValueSource.value)), (_b !== null && _b !== void 0 ? _b : ''));\n            props.inputValueSource.unique().listen((value) => (this.node.value = value), this.cancellationToken);\n        }\n        else {\n            this.node.value = (_c = props.initialValue, (_c !== null && _c !== void 0 ? _c : ''));\n        }\n        this.bindProps(['placeholder', 'readonly', 'disabled'], props);\n        this.createEventHandlers(['input', 'change'], props);\n        if (props.inputValueSource) {\n            this.onInput.map((p) => this.node.value).pipe(props.inputValueSource);\n        }\n    }\n}\n//# sourceMappingURL=input.js.map","import { AurumElement } from './aurum_element';\nexport class Li extends AurumElement {\n    constructor(props) {\n        super(props, 'li');\n    }\n}\n//# sourceMappingURL=li.js.map","import { AurumElement } from './aurum_element';\nexport class Span extends AurumElement {\n    constructor(props) {\n        super(props, 'span');\n    }\n}\n//# sourceMappingURL=span.js.map","import { AurumElement } from './aurum_element';\nexport class Style extends AurumElement {\n    constructor(props) {\n        super(props, 'style');\n    }\n}\n//# sourceMappingURL=style.js.map","import { AurumElement } from './aurum_element';\nexport class Ul extends AurumElement {\n    constructor(props) {\n        super(props, 'ul');\n    }\n}\n//# sourceMappingURL=ul.js.map","import { AurumElement } from './aurum_element';\nexport class P extends AurumElement {\n    constructor(props) {\n        super(props, 'p');\n    }\n}\n//# sourceMappingURL=p.js.map","import { AurumElement } from './aurum_element';\nexport class Img extends AurumElement {\n    constructor(props) {\n        super(props, 'img');\n        this.bindProps(['src'], props);\n    }\n}\n//# sourceMappingURL=img.js.map","import { AurumElement } from './aurum_element';\nexport class Link extends AurumElement {\n    constructor(props) {\n        super(props, 'link');\n        this.bindProps(['href', 'rel'], props);\n    }\n}\n//# sourceMappingURL=link.js.map","import { AurumElement } from './aurum_element';\nexport class Canvas extends AurumElement {\n    constructor(props) {\n        super(props, 'canvas');\n        this.bindProps(['width', 'height'], props);\n    }\n}\n//# sourceMappingURL=canvas.js.map","import { AurumElement } from './aurum_element';\nexport class A extends AurumElement {\n    constructor(props) {\n        super(props, 'a');\n        this.bindProps(['href', 'target'], props);\n    }\n}\n//# sourceMappingURL=a.js.map","import { AurumElement } from './aurum_element';\nexport class Article extends AurumElement {\n    constructor(props) {\n        super(props, 'pre');\n    }\n}\n//# sourceMappingURL=article.js.map","import { AurumElement } from './aurum_element';\nexport class Br extends AurumElement {\n    constructor(props) {\n        super(props, 'br');\n    }\n}\n//# sourceMappingURL=br.js.map","import { AurumElement } from './aurum_element';\nexport class Form extends AurumElement {\n    constructor(props) {\n        super(props, 'form');\n    }\n}\n//# sourceMappingURL=form.js.map","import { AurumElement } from './aurum_element';\nexport class Label extends AurumElement {\n    constructor(props) {\n        super(props, 'label');\n        this.bindProps(['for'], props);\n    }\n}\n//# sourceMappingURL=label.js.map","import { AurumElement } from './aurum_element';\nexport class Ol extends AurumElement {\n    constructor(props) {\n        super(props, 'ol');\n    }\n}\n//# sourceMappingURL=ol.js.map","import { AurumElement } from './aurum_element';\nexport class Pre extends AurumElement {\n    constructor(props) {\n        super(props, 'pre');\n    }\n}\n//# sourceMappingURL=pre.js.map","import { AurumElement } from './aurum_element';\nexport class Progress extends AurumElement {\n    constructor(props) {\n        super(props, 'progress');\n        this.bindProps(['max', 'value'], props);\n    }\n}\n//# sourceMappingURL=progress.js.map","import { AurumElement } from './aurum_element';\nexport class Table extends AurumElement {\n    constructor(props) {\n        super(props, 'table');\n    }\n}\n//# sourceMappingURL=table.js.map","import { AurumElement } from './aurum_element';\nexport class Td extends AurumElement {\n    constructor(props) {\n        super(props, 'td');\n    }\n}\n//# sourceMappingURL=td.js.map","import { AurumElement } from './aurum_element';\nexport class TextArea extends AurumElement {\n    constructor(props) {\n        var _a, _b, _c;\n        super(props, 'textArea');\n        if (props.inputValueSource) {\n            this.node.value = (_b = (_a = props.initialValue, (_a !== null && _a !== void 0 ? _a : props.inputValueSource.value)), (_b !== null && _b !== void 0 ? _b : ''));\n            props.inputValueSource.unique().listen((value) => (this.node.value = value), this.cancellationToken);\n        }\n        else {\n            this.node.value = (_c = props.initialValue, (_c !== null && _c !== void 0 ? _c : ''));\n        }\n        this.bindProps(['placeholder', 'readonly', 'disabled'], props);\n        this.createEventHandlers(['input', 'change'], props);\n        if (props.inputValueSource) {\n            this.onInput.map((p) => this.node.value).pipe(props.inputValueSource);\n        }\n    }\n}\n//# sourceMappingURL=textarea.js.map","import { AurumElement } from './aurum_element';\nexport class Th extends AurumElement {\n    constructor(props) {\n        super(props, 'th');\n    }\n}\n//# sourceMappingURL=th.js.map","import { AurumElement } from './aurum_element';\nexport class Tr extends AurumElement {\n    constructor(props) {\n        super(props, 'tr');\n    }\n}\n//# sourceMappingURL=tr.js.map","import { AurumElement } from './aurum_element';\nexport class H1 extends AurumElement {\n    constructor(props) {\n        super(props, 'h1');\n    }\n}\n//# sourceMappingURL=h1.js.map","import { AurumElement } from './aurum_element';\nexport class H2 extends AurumElement {\n    constructor(props) {\n        super(props, 'h2');\n    }\n}\n//# sourceMappingURL=h2.js.map","import { AurumElement } from './aurum_element';\nexport class H3 extends AurumElement {\n    constructor(props) {\n        super(props, 'h3');\n    }\n}\n//# sourceMappingURL=h3.js.map","import { AurumElement } from './aurum_element';\nexport class H4 extends AurumElement {\n    constructor(props) {\n        super(props, 'h4');\n    }\n}\n//# sourceMappingURL=h4.js.map","import { AurumElement } from './aurum_element';\nexport class H5 extends AurumElement {\n    constructor(props) {\n        super(props, 'h5');\n    }\n}\n//# sourceMappingURL=h5.js.map","import { AurumElement } from './aurum_element';\nexport class H6 extends AurumElement {\n    constructor(props) {\n        super(props, 'h6');\n    }\n}\n//# sourceMappingURL=h6.js.map","import { AurumElement } from './aurum_element';\nexport class Header extends AurumElement {\n    constructor(props) {\n        super(props, 'header');\n    }\n}\n//# sourceMappingURL=header.js.map","import { AurumElement } from './aurum_element';\nexport class Footer extends AurumElement {\n    constructor(props) {\n        super(props, 'footer');\n    }\n}\n//# sourceMappingURL=footer.js.map","import { AurumElement } from './aurum_element';\nexport class Nav extends AurumElement {\n    constructor(props) {\n        super(props, 'nav');\n    }\n}\n//# sourceMappingURL=nav.js.map","import { AurumElement } from './aurum_element';\nexport class B extends AurumElement {\n    constructor(props) {\n        super(props, 'b');\n    }\n}\n//# sourceMappingURL=b.js.map","import { AurumElement } from './aurum_element';\nexport class I extends AurumElement {\n    constructor(props) {\n        super(props, 'i');\n    }\n}\n//# sourceMappingURL=i.js.map","import { AurumElement } from './aurum_element';\nexport class Script extends AurumElement {\n    constructor(props) {\n        super(props, 'script');\n        this.bindProps(['src'], props);\n    }\n}\n//# sourceMappingURL=script.js.map","import { AurumElement } from '../aurum_element';\nexport class Switch extends AurumElement {\n    constructor(props) {\n        super(props, 'switch');\n        this.firstRender = true;\n        this.templateMap = props.templateMap;\n        this.renderSwitch(props.state.value);\n        props.state.listen((data) => {\n            this.renderSwitch(data);\n        }, this.cancellationToken);\n    }\n    renderSwitch(data) {\n        var _a;\n        if (data !== this.lastValue || this.firstRender) {\n            this.lastValue = data;\n            this.firstRender = false;\n            this.clearChildren();\n            if (data !== undefined && data !== null) {\n                const template = (_a = this.templateMap[data.toString()], (_a !== null && _a !== void 0 ? _a : this.template));\n                if (template) {\n                    const result = template.generate();\n                    this.addChild(result);\n                }\n            }\n            else if (this.template) {\n                const result = this.template.generate();\n                this.addChild(result);\n            }\n        }\n    }\n}\n//# sourceMappingURL=switch.js.map","import { Switch } from './switch';\nimport { DataSource } from '../../stream/data_source';\nexport class AurumRouter extends Switch {\n    constructor(props) {\n        const urlDataSource = new DataSource(location.hash.substring(1));\n        super(Object.assign(Object.assign({}, props), { state: urlDataSource }));\n        window.addEventListener('hashchange', () => {\n            urlDataSource.update(location.hash.substring(1));\n        });\n    }\n}\n//# sourceMappingURL=router.js.map"],"names":["EventEmitter","config","subscribeChannel","subscribeOnceChannel","throttleCount","onAfterFire","observable","makeObservable","cancellationToken","addCancelable","this","cancelAll","throttled","throttle","prototypeAccessors","subscriptions","length","oneTimeSubscriptions","linkEvent","eventToLink","linkedEvents","push","unlinkEvent","eventToUnlink","includes","Error","splice","indexOf","onSubscribe","onSubscribeOnce","onCancelAll","onCancel","swapSubscriptions","event","sub","subOnce","subscribe","callback","fire","createSubscription","hasSubscriptions","subscribeOnce","Promise","resolved","data","undefined","data2","data3","data4","data5","isFiring","i","let","forEach","cb","channel","that","subscription","facade","cancel","index","DataSource","initialValue","value","listeners","update","newValue","l","listen","_a","filter","filteredSource","pipe","targetDataSource","v","map","mappedSource","unique","uniqueSource","reduce","reducer","reduceSource","aggregate","otherSource","combinator","aggregatedSource","combine","combinedDataSource","debounce","time","debouncedDataSource","clearTimeout","timeout","buffer","bufferedDataSource","queue","queueDataSource","ArrayDataSource","pick","key","subDataSource","initialData","slice","onChange","getData","get","set","item","old","items","newState","swap","indexA","indexB","itemA","itemB","swapItems","ref","count","unshift","pop","merge","newData","removeRight","result","removeLeft","remove","clear","shift","toArray","FilteredArrayView","callbackfn","thisArg","toDataSource","stream","s","parent","initial","viewFilter","change","filteredItems","operation","ref$1","target","updateFilter","refresh","LinkedListNode","deleteNext","next","overNext","previous","deletePrevious","LinkedList","d","append","find","predicate","ptr","rootNode","element","lastNode","n","prepend","e","CancellationToken","cancelables","cancellables","_isCancelled","isCanceled","delegate","throwIfCancelled","console","log","removeCancelable","addDisposable","disposable","dispose","callIfNotCancelled","action","setTimeout","id","setInterval","clearInterval","requestAnimationFrame","cancelAnimationFrame","animationLoop","f","msg","chain","twoWays","registerDomEvent","eventEmitter","addEventListener","removeEventListener","c","const","ownerSymbol","Symbol","AurumElement","props","domNodeName","template","node","create","initialize","onAttach","Text","children","createEventHandlers","dataProps","Object","keys","startsWith","bindProps","class","handleClass","repeatModel","handleRepeat","assignStringSourceToAttribute","computedEventName","toUpperCase","defineProperty","bind","onClick","dataSource","repeatData","generate","render","index2","ref$2","rerenderPending","childNodes","addChildrenDom","getChildIndex","swapChildrenDom","addDomNodeAt","removeChild","setAttribute","className","Array","isArray","join","p","resolveStringSource","source","document","createElement","hasChild","appendChild","nodeA","nodeB","childElementCount","insertBefore","hasParent","parentElement","isConnected","child","removeChildAt","swapChildren","clearChildren","addChild","Template","childNodeToAurum","TextNode","text","toString","addChildAt","addChildren","nodes","generator","textContent","createTextNode","Aurum","attach","dom","detach","domNode","factory","args","defaultTemplate","instance","concat","innerNodes","templateMap","hasRef","prototype","Button","Div","Input","inputValueSource","_b","_c","onInput","Li","Span","Style","Ul","P","Img","Link","Canvas","A","Article","Br","Form","Label","Ol","Pre","Progress","Table","Td","TextArea","Th","Tr","H1","H2","H3","H4","H5","H6","Header","Footer","Nav","B","I","Script","Switch","firstRender","renderSwitch","state","lastValue","AurumRouter","urlDataSource","location","hash","substring","assign","window"],"mappings":"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"}