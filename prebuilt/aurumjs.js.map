{"version":3,"file":"aurumjs.js","sources":["../dist/utilities/event_emitter.js","../dist/stream/data_source.js","../dist/stream/object_data_source.js","../dist/utilities/owner_symbol.js","../dist/stream/duplex_data_source.js","../dist/nodes/special/aurum_text.js","../dist/nodes/special/aurum_element.js","../dist/nodes/div.js","../dist/nodes/button.js","../dist/nodes/input.js","../dist/nodes/li.js","../dist/nodes/span.js","../dist/nodes/style.js","../dist/nodes/audio.js","../dist/nodes/ul.js","../dist/nodes/p.js","../dist/nodes/img.js","../dist/nodes/link.js","../dist/nodes/canvas.js","../dist/nodes/a.js","../dist/nodes/article.js","../dist/nodes/br.js","../dist/nodes/form.js","../dist/nodes/label.js","../dist/nodes/ol.js","../dist/nodes/pre.js","../dist/nodes/progress.js","../dist/nodes/table.js","../dist/nodes/td.js","../dist/nodes/tr.js","../dist/nodes/th.js","../dist/nodes/textarea.js","../dist/nodes/h1.js","../dist/nodes/h2.js","../dist/nodes/h3.js","../dist/nodes/h4.js","../dist/nodes/h5.js","../dist/nodes/h6.js","../dist/nodes/header.js","../dist/nodes/footer.js","../dist/nodes/nav.js","../dist/nodes/b.js","../dist/nodes/i.js","../dist/nodes/script.js","../dist/nodes/abbr.js","../dist/nodes/area.js","../dist/nodes/aside.js","../dist/nodes/em.js","../dist/nodes/heading.js","../dist/nodes/iframe.js","../dist/nodes/noscript.js","../dist/nodes/q.js","../dist/nodes/select.js","../dist/nodes/source.js","../dist/nodes/title.js","../dist/nodes/video.js","../dist/nodes/tbody.js","../dist/nodes/tfoot.js","../dist/nodes/thead.js","../dist/nodes/summary.js","../dist/nodes/details.js","../dist/nodes/sub.js","../dist/nodes/sup.js","../dist/nodes/svg.js","../dist/nodes/data.js","../dist/nodes/time.js","../dist/utilities/aurum.js","../dist/nodes/option.js","../dist/nodes/template.js","../dist/utilities/linkedlist/linked_list_node.js","../dist/utilities/linkedlist/linked_list.js","../dist/utilities/cancellation_token.js","../dist/nodes/special/custom.js","../dist/nodes/special/router.js","../dist/nodes/special/switch.js","../dist/nodes/special/suspense.js"],"sourcesContent":["/**\n * @internal\n */\nexport class EventEmitter {\n    constructor() {\n        this.subscribeChannel = [];\n        this.onAfterFire = [];\n    }\n    get subscriptions() {\n        return this.subscribeChannel.length;\n    }\n    subscribe(callback, cancellationToken) {\n        const { facade } = this.createSubscription(callback, this.subscribeChannel, cancellationToken);\n        return facade;\n    }\n    hasSubscriptions() {\n        return this.subscriptions > 0;\n    }\n    cancelAll() {\n        if (!this.isFiring) {\n            this.subscribeChannel.length = 0;\n        }\n        else {\n            this.onAfterFire.push(() => (this.subscribeChannel.length = 0));\n        }\n    }\n    afterFire() {\n        if (this.onAfterFire.length > 0) {\n            this.onAfterFire.forEach((cb) => cb());\n            this.onAfterFire.length = 0;\n        }\n    }\n    fire(data) {\n        this.isFiring = true;\n        const length = this.subscribeChannel.length;\n        for (let i = 0; i < length; i++) {\n            this.subscribeChannel[i].callback(data);\n        }\n        this.isFiring = false;\n        this.afterFire();\n    }\n    createSubscription(callback, channel, cancellationToken) {\n        const that = this;\n        const subscription = {\n            callback\n        };\n        const facade = {\n            cancel() {\n                that.cancel(subscription, channel);\n            }\n        };\n        if (cancellationToken !== undefined) {\n            cancellationToken.addCancelable(() => that.cancel(subscription, channel));\n        }\n        channel.push(subscription);\n        return { subscription, facade };\n    }\n    cancel(subscription, channel) {\n        let index = channel.indexOf(subscription);\n        if (index >= 0) {\n            if (!this.isFiring) {\n                channel.splice(index, 1);\n            }\n            else {\n                this.onAfterFire.push(() => this.cancel(subscription, channel));\n            }\n        }\n    }\n}\n//# sourceMappingURL=event_emitter.js.map","import { EventEmitter } from '../utilities/event_emitter';\n/**\n * Datasources wrap a value and allow you to update it in an observable way. Datasources can be manipulated like streams and can be bound directly in the JSX syntax and will update the html whenever the value changes\n */\nexport class DataSource {\n    constructor(initialValue) {\n        this.value = initialValue;\n        this.updateEvent = new EventEmitter();\n    }\n    /**\n     * Updates the value in the data source and calls the listen callback for all listeners\n     * @param newValue new value for the data source\n     */\n    update(newValue) {\n        if (this.updating) {\n            throw new Error('Problem in datas source: Unstable value propagation, when updating a value the stream was updated back as a direct response. This can lead to infinite loops and is therefore not allowed');\n        }\n        this.updating = true;\n        this.value = newValue;\n        this.updateEvent.fire(newValue);\n        this.updating = false;\n    }\n    /**\n     * Same as listen but will immediately call the callback with the current value first\n     * @param callback Callback to call when value is updated\n     * @param cancellationToken Optional token to control the cancellation of the subscription\n     * @returns Cancellation callback, can be used to cancel subscription without a cancellation token\n     */\n    listenAndRepeat(callback, cancellationToken) {\n        callback(this.value);\n        return this.listen(callback, cancellationToken);\n    }\n    /**\n     * Subscribes to the updates of the data stream\n     * @param callback Callback to call when value is updated\n     * @param cancellationToken Optional token to control the cancellation of the subscription\n     * @returns Cancellation callback, can be used to cancel subscription without a cancellation token\n     */\n    listen(callback, cancellationToken) {\n        return this.updateEvent.subscribe(callback, cancellationToken).cancel;\n    }\n    /**\n     * Creates a new datasource that listenes to updates of this datasource but only propagates the updates from this source if they pass a predicate check\n     * @param callback predicate check to decide if the update from the parent data source is passed down or not\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    filter(callback, cancellationToken) {\n        const filteredSource = new DataSource();\n        this.listen((value) => {\n            if (callback(value, filteredSource.value)) {\n                filteredSource.update(value);\n            }\n        }, cancellationToken);\n        return filteredSource;\n    }\n    /**\n     * Creates a new datasource that listenes to updates of this datasource but only propagates the updates from this source if they are larger than the previous value\n     * In case of strings it checks alphabetical order when deciding what is bigger or smaller\n     * @param callback predicate check to decide if the update from the parent data source is passed down or not\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    max(cancellationToken) {\n        return this.filter((newValue, oldValue) => {\n            if (typeof newValue === 'string' && typeof oldValue === 'string') {\n                return newValue.localeCompare(oldValue) > 0;\n            }\n            else {\n                return newValue > oldValue;\n            }\n        });\n    }\n    /**\n     * Creates a new datasource that listenes to updates of this datasource but only propagates the updates from this source if they are smaller than the previous value\n     * In case of strings it checks alphabetical order when deciding what is bigger or smaller\n     * @param callback predicate check to decide if the update from the parent data source is passed down or not\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    min(cancellationToken) {\n        return this.filter((newValue, oldValue) => {\n            if (typeof newValue === 'string' && typeof oldValue === 'string') {\n                return newValue.localeCompare(oldValue) < 0;\n            }\n            else {\n                return newValue < oldValue;\n            }\n        });\n    }\n    /**\n     * Forwards all updates from this source to another\n     * @param targetDataSource datasource to pipe the updates to\n     * @param cancellationToken  Cancellation token to cancel the subscription the target datasource has to this datasource\n     */\n    pipe(targetDataSource, cancellationToken) {\n        this.listen((v) => targetDataSource.update(v), cancellationToken);\n    }\n    /**\n     * Creates a new datasource that is listening to updates from this datasource and transforms them with a mapper function before fowarding them to itself\n     * @param callback mapper function that transforms the updates of this source\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    map(callback, cancellationToken) {\n        const mappedSource = new DataSource(callback(this.value));\n        this.listen((value) => {\n            mappedSource.update(callback(value));\n        }, cancellationToken);\n        return mappedSource;\n    }\n    /**\n     * Allows tapping into the stream and calls a function for each value.\n     */\n    tap(callback, cancellationToken) {\n        const tapSource = new DataSource(this.value);\n        this.listen((value) => {\n            callback(value);\n            tapSource.update(value);\n        }, cancellationToken);\n        return tapSource;\n    }\n    /**\n     * Creates a new datasource that is listening to updates from this datasource and transforms them with a mapper function before fowarding them to itself\n     * @param callback mapper function that transforms the updates of this source\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    await(cancellationToken) {\n        const mappedSource = new DataSource();\n        this.listen(async (value) => {\n            mappedSource.update(await value);\n        }, cancellationToken);\n        return mappedSource;\n    }\n    /**\n     * Creates a new datasource that listens to this one and forwards updates if they are not the same as the last update\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    unique(cancellationToken) {\n        const uniqueSource = new DataSource(this.value);\n        this.listen((value) => {\n            if (value !== uniqueSource.value) {\n                uniqueSource.update(value);\n            }\n        }, cancellationToken);\n        return uniqueSource;\n    }\n    /**\n     * Creates a new datasource that listens to this one and forwards updates revealing the previous value on each update\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    diff(cancellationToken) {\n        const diffingSource = new DataSource({\n            new: this.value,\n            old: undefined\n        });\n        this.listen((value) => {\n            diffingSource.update({\n                new: value,\n                old: diffingSource.value\n            });\n        }, cancellationToken);\n        return diffingSource;\n    }\n    /**\n     * Creates a new datasource that listens to this source and combines all updates into a single value\n     * @param reducer  function that aggregates an update with the previous result of aggregation\n     * @param initialValue initial value given to the new source\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    reduce(reducer, initialValue, cancellationToken) {\n        const reduceSource = new DataSource(initialValue);\n        this.listen((v) => reduceSource.update(reducer(reduceSource.value, v)), cancellationToken);\n        return reduceSource;\n    }\n    /**\n     * Combines two sources into a third source that listens to updates from both parent sources.\n     * @param otherSource Second parent for the new source\n     * @param combinator Method allowing you to combine the data from both parents on update. Called each time a parent is updated with the latest values of both parents\n     * @param cancellationToken  Cancellation token to cancel the subscriptions the new datasource has to the two parent datasources\n     */\n    aggregate(otherSource, combinator, cancellationToken) {\n        const aggregatedSource = new DataSource(combinator(this.value, otherSource.value));\n        this.listen(() => aggregatedSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        otherSource.listen(() => aggregatedSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n        return aggregatedSource;\n    }\n    /**\n     * Combines three sources into a fourth source that listens to updates from all parent sources.\n     * @param second Second parent for the new source\n     * @param third Third parent for the new source\n     * @param combinator Method allowing you to combine the data from all parents on update. Called each time a parent is updated with the latest values of all parents\n     * @param cancellationToken  Cancellation token to cancel the subscriptions the new datasource has to the parent datasources\n     */\n    aggregateThree(second, third, combinator, cancellationToken) {\n        const aggregatedSource = new DataSource(combinator(this.value, second.value, third.value));\n        this.listen(() => aggregatedSource.update(combinator(this.value, second.value, third.value)), cancellationToken);\n        second.listen(() => aggregatedSource.update(combinator(this.value, second.value, third.value)), cancellationToken);\n        third.listen(() => aggregatedSource.update(combinator(this.value, second.value, third.value)), cancellationToken);\n        return aggregatedSource;\n    }\n    /**\n     * Combines four sources into a fifth source that listens to updates from all parent sources.\n     * @param second Second parent for the new source\n     * @param third Third parent for the new source\n     * @param fourth Fourth parent for the new source\n     * @param combinator Method allowing you to combine the data from all parents on update. Called each time a parent is updated with the latest values of all parents\n     * @param cancellationToken  Cancellation token to cancel the subscriptions the new datasource has to the parent datasources\n     */\n    aggregateFour(second, third, fourth, combinator, cancellationToken) {\n        const aggregatedSource = new DataSource(combinator(this.value, second.value, third.value, fourth.value));\n        this.listen(() => aggregatedSource.update(combinator(this.value, second.value, third.value, fourth.value)), cancellationToken);\n        second.listen(() => aggregatedSource.update(combinator(this.value, second.value, third.value, fourth.value)), cancellationToken);\n        third.listen(() => aggregatedSource.update(combinator(this.value, second.value, third.value, fourth.value)), cancellationToken);\n        fourth.listen(() => aggregatedSource.update(combinator(this.value, second.value, third.value, fourth.value)), cancellationToken);\n        return aggregatedSource;\n    }\n    /**\n     * Creates a new datasource that listens to this source and creates a string that contains all the updates with a seperator\n     * @param seperator string to be placed between all the values\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    stringJoin(seperator, cancellationToken) {\n        const joinSource = new DataSource('');\n        this.listen((v) => joinSource.update(joinSource.value + seperator + v.toString()), cancellationToken);\n        return joinSource;\n    }\n    /**\n     * Like aggregate except that no combination method is needed as a result both parents must have the same type and the new stream just exposes the last update recieved from either parent\n     * @param otherSource Second parent for the new source\n     * @param cancellationToken  Cancellation token to cancel the subscriptions the new datasource has to the two parent datasources\n     */\n    combine(otherSources, cancellationToken) {\n        const combinedDataSource = new DataSource();\n        this.pipe(combinedDataSource, cancellationToken);\n        for (const otherSource of otherSources) {\n            otherSource.pipe(combinedDataSource, cancellationToken);\n        }\n        return combinedDataSource;\n    }\n    /**\n     * Creates a datasource that forwards all the updates after a certain time has passed, useful to introduce a delay before something triggers. Does not debounce\n     * @param time\n     * @param cancellationToken\n     */\n    delay(time, cancellationToken) {\n        const delayedDataSource = new DataSource(this.value);\n        this.listen((v) => {\n            setTimeout(() => {\n                delayedDataSource.update(v);\n            }, time);\n        }, cancellationToken);\n        return delayedDataSource;\n    }\n    /**\n     * Creates a new source that listens to the updates of this source and forwards them to itself with a delay, in case many updates happen during this delay only the last update will be taken into account, effectively allowing to skip short lived values. Useful for optimizations\n     * @param time Milliseconds to wait before updating\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    debounce(time, cancellationToken) {\n        const debouncedDataSource = new DataSource(this.value);\n        let timeout;\n        this.listen((v) => {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                debouncedDataSource.update(v);\n            }, time);\n        }, cancellationToken);\n        return debouncedDataSource;\n    }\n    /**\n     * Creates a new source that listens to the updates of this source and forwards them to itself at most once per <time> milliseconds. In case many updates happen during the delay time only at most one update per delay will be taken into account,\n     * effectively allowing to reduce load on the next stream. Useful for optimizations\n     * @param time Milliseconds of cooldown after an update before another update can happen\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    throttle(time, cancellationToken) {\n        const throttledDataSource = new DataSource(this.value);\n        let cooldown = false;\n        this.listen((v) => {\n            if (!cooldown) {\n                throttledDataSource.update(v);\n                cooldown = true;\n                setTimeout(() => {\n                    cooldown = false;\n                }, time);\n            }\n        }, cancellationToken);\n        return throttledDataSource;\n    }\n    /**\n     * Creates a new source that listens to the updates of this source. The updates are collected in an array for a period of time and then the new source updates with an array of all the updates collected in the timespan. Useful to take a rapidly changing source and process it a buffered manner. Can be used for things like batching network requests\n     * @param time Milliseconds to wait before updating the returned source\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    buffer(time, cancellationToken) {\n        const bufferedDataSource = new DataSource();\n        let timeout;\n        let buffer = [];\n        this.listen((v) => {\n            buffer.push(v);\n            if (!timeout) {\n                timeout = setTimeout(() => {\n                    timeout = undefined;\n                    bufferedDataSource.update(buffer);\n                    buffer = [];\n                }, time);\n            }\n        }, cancellationToken);\n        return bufferedDataSource;\n    }\n    /**\n     * Creates a new datasource that listens to the updates of this one. The datasource will accumulate all the updates from this source in form of an array data source. Useful to keep a history of all values from a source\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    accumulate(cancellationToken) {\n        const queueDataSource = new ArrayDataSource();\n        this.listen((v) => {\n            queueDataSource.push(v);\n        }, cancellationToken);\n        return queueDataSource;\n    }\n    /**\n     * Creates a new datasource that listens to the updates of this source and forwards only a single key from the object that is held by this data source\n     * @param key key to take from the object\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    pick(key, cancellationToken) {\n        var _a;\n        const subDataSource = new DataSource((_a = this.value) === null || _a === void 0 ? void 0 : _a[key]);\n        this.listen((v) => {\n            if (v !== undefined && v !== null) {\n                subDataSource.update(v[key]);\n            }\n            else {\n                subDataSource.update(v);\n            }\n        }, cancellationToken);\n        return subDataSource;\n    }\n    /**\n     * Remove all listeners\n     */\n    cancelAll() {\n        this.updateEvent.cancelAll();\n    }\n}\nexport class ArrayDataSource {\n    constructor(initialData) {\n        if (initialData) {\n            this.data = initialData.slice();\n        }\n        else {\n            this.data = [];\n        }\n        this.lengthSource = new DataSource(this.data.length).unique();\n        this.updateEvent = new EventEmitter();\n    }\n    /**\n     * Same as listen but will immediately call the callback with an append of all existing elements first\n     */\n    listenAndRepeat(callback, cancellationToken) {\n        callback({\n            operation: 'add',\n            operationDetailed: 'append',\n            index: 0,\n            items: this.data,\n            newState: this.data,\n            count: this.data.length\n        });\n        return this.listen(callback, cancellationToken);\n    }\n    listen(callback, cancellationToken) {\n        return this.updateEvent.subscribe(callback, cancellationToken).cancel;\n    }\n    get length() {\n        return this.lengthSource;\n    }\n    getData() {\n        return this.data.slice();\n    }\n    get(index) {\n        return this.data[index];\n    }\n    set(index, item) {\n        const old = this.data[index];\n        if (old === item) {\n            return;\n        }\n        this.data[index] = item;\n        this.update({ operation: 'replace', operationDetailed: 'replace', target: old, count: 1, index, items: [item], newState: this.data });\n        this.lengthSource.update(this.data.length);\n    }\n    swap(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const itemA = this.data[indexA];\n        const itemB = this.data[indexB];\n        this.data[indexB] = itemA;\n        this.data[indexA] = itemB;\n        this.update({ operation: 'swap', operationDetailed: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n        this.lengthSource.update(this.data.length);\n    }\n    swapItems(itemA, itemB) {\n        if (itemA === itemB) {\n            return;\n        }\n        const indexA = this.data.indexOf(itemA);\n        const indexB = this.data.indexOf(itemB);\n        if (indexA !== -1 && indexB !== -1) {\n            this.data[indexB] = itemA;\n            this.data[indexA] = itemB;\n        }\n        this.update({ operation: 'swap', operationDetailed: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n        this.lengthSource.update(this.data.length);\n    }\n    appendArray(items) {\n        const old = this.data;\n        this.data = new Array(old.length);\n        let i = 0;\n        for (i = 0; i < old.length; i++) {\n            this.data[i] = old[i];\n        }\n        for (let n = 0; n < items.length; n++) {\n            this.data[i + n] = items[n];\n        }\n        this.update({\n            operation: 'add',\n            operationDetailed: 'append',\n            count: items.length,\n            index: this.data.length - items.length,\n            items,\n            newState: this.data\n        });\n        this.lengthSource.update(this.data.length);\n    }\n    push(...items) {\n        this.appendArray(items);\n        this.lengthSource.update(this.data.length);\n    }\n    unshift(...items) {\n        this.data.unshift(...items);\n        this.update({ operation: 'add', operationDetailed: 'prepend', count: items.length, items, index: 0, newState: this.data });\n        this.lengthSource.update(this.data.length);\n    }\n    pop() {\n        const item = this.data.pop();\n        this.update({\n            operation: 'remove',\n            operationDetailed: 'removeRight',\n            count: 1,\n            index: this.data.length,\n            items: [item],\n            newState: this.data\n        });\n        this.lengthSource.update(this.data.length);\n        return item;\n    }\n    merge(newData) {\n        for (let i = 0; i < newData.length; i++) {\n            if (this.data[i] !== newData[i]) {\n                if (this.data.length > i) {\n                    this.set(i, newData[i]);\n                }\n                else {\n                    this.push(newData[i]);\n                }\n            }\n        }\n        if (this.data.length > newData.length) {\n            this.removeRight(this.data.length - newData.length);\n        }\n        this.lengthSource.update(this.data.length);\n    }\n    removeRight(count) {\n        const length = this.data.length;\n        const result = this.data.splice(length - count, count);\n        this.update({ operation: 'remove', operationDetailed: 'removeRight', count, index: length - count, items: result, newState: this.data });\n        this.lengthSource.update(this.data.length);\n    }\n    removeLeft(count) {\n        const result = this.data.splice(0, count);\n        this.update({ operation: 'remove', operationDetailed: 'removeLeft', count, index: 0, items: result, newState: this.data });\n        this.lengthSource.update(this.data.length);\n    }\n    remove(item) {\n        const index = this.data.indexOf(item);\n        if (index !== -1) {\n            this.data.splice(index, 1);\n            this.update({ operation: 'remove', operationDetailed: 'remove', count: 1, index, items: [item], newState: this.data });\n            this.lengthSource.update(this.data.length);\n        }\n    }\n    clear() {\n        const items = this.data;\n        this.data = [];\n        this.update({\n            operation: 'remove',\n            operationDetailed: 'clear',\n            count: items.length,\n            index: 0,\n            items,\n            newState: this.data\n        });\n        this.lengthSource.update(this.data.length);\n    }\n    shift() {\n        const item = this.data.shift();\n        this.update({ operation: 'remove', operationDetailed: 'removeLeft', items: [item], count: 1, index: 0, newState: this.data });\n        this.lengthSource.update(this.data.length);\n        return item;\n    }\n    toArray() {\n        return this.data.slice();\n    }\n    sort(comparator, cancellationToken) {\n        return new SortedArrayView(this, comparator, cancellationToken);\n    }\n    map(mapper, cancellationToken) {\n        return new MappedArrayView(this, mapper, cancellationToken);\n    }\n    filter(callback, dependencies = [], cancellationToken) {\n        const view = new FilteredArrayView(this, callback, cancellationToken);\n        dependencies.forEach((dep) => {\n            dep.unique().listen(() => view.refresh());\n        });\n        return view;\n    }\n    forEach(callbackfn) {\n        return this.data.forEach(callbackfn);\n    }\n    update(change) {\n        this.updateEvent.fire(change);\n    }\n}\nexport class MappedArrayView extends ArrayDataSource {\n    constructor(parent, mapper, cancellationToken) {\n        const initial = parent.getData().map(mapper);\n        super(initial);\n        this.mapper = mapper;\n        parent.listen((change) => {\n            switch (change.operationDetailed) {\n                case 'removeLeft':\n                    this.removeLeft(change.count);\n                    break;\n                case 'removeRight':\n                    this.removeRight(change.count);\n                    break;\n                case 'remove':\n                    this.remove(this.data[change.index]);\n                    break;\n                case 'clear':\n                    this.clear();\n                    break;\n                case 'prepend':\n                    this.unshift(...change.items.map(this.mapper));\n                    break;\n                case 'append':\n                    this.appendArray(change.items.map(this.mapper));\n                    break;\n                case 'swap':\n                    this.swap(change.index, change.index2);\n                    break;\n                case 'replace':\n                    this.set(change.index, this.mapper(change.items[0]));\n                    break;\n            }\n        }, cancellationToken);\n    }\n}\nexport class SortedArrayView extends ArrayDataSource {\n    constructor(parent, comparator, cancellationToken) {\n        const initial = parent.getData().sort(comparator);\n        super(initial);\n        this.comparator = comparator;\n        parent.listen((change) => {\n            switch (change.operationDetailed) {\n                case 'removeLeft':\n                    this.removeLeft(change.count);\n                    break;\n                case 'removeRight':\n                    this.removeRight(change.count);\n                    break;\n                case 'remove':\n                    this.remove(change.items[0]);\n                    break;\n                case 'clear':\n                    this.data.length = 0;\n                    break;\n                case 'prepend':\n                    this.unshift(...change.items);\n                    this.data.sort(this.comparator);\n                    break;\n                case 'append':\n                    this.push(...change.items);\n                    this.data.sort(this.comparator);\n                    break;\n                case 'swap':\n                    break;\n                case 'replace':\n                    this.set(change.index, change.items[0]);\n                    this.data.sort(this.comparator);\n                    break;\n            }\n        }, cancellationToken);\n    }\n}\nexport class FilteredArrayView extends ArrayDataSource {\n    constructor(parent, filter, cancellationToken) {\n        if (Array.isArray(parent)) {\n            parent = new ArrayDataSource(parent);\n        }\n        filter = filter !== null && filter !== void 0 ? filter : (() => true);\n        const initial = parent.data.filter(filter);\n        super(initial);\n        this.parent = parent;\n        this.viewFilter = filter;\n        parent.listen((change) => {\n            let filteredItems;\n            switch (change.operationDetailed) {\n                case 'clear':\n                    this.clear();\n                    break;\n                case 'removeLeft':\n                case 'removeRight':\n                case 'remove':\n                    for (const item of change.items) {\n                        this.remove(item);\n                    }\n                    break;\n                case 'prepend':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.unshift(...filteredItems);\n                    break;\n                case 'append':\n                    filteredItems = change.items.filter(this.viewFilter);\n                    this.push(...filteredItems);\n                    break;\n                case 'swap':\n                    const indexA = this.data.indexOf(change.items[0]);\n                    const indexB = this.data.indexOf(change.items[1]);\n                    if (indexA !== -1 && indexB !== -1) {\n                        this.swap(indexA, indexB);\n                    }\n                    break;\n                case 'replace':\n                    const index = this.data.indexOf(change.target);\n                    if (index !== -1) {\n                        const acceptNew = this.viewFilter(change.items[0]);\n                        if (acceptNew) {\n                            this.set(index, change.items[0]);\n                        }\n                        else {\n                            this.remove(change.target);\n                        }\n                    }\n                    break;\n            }\n        }, cancellationToken);\n    }\n    /**\n     * Replaces the filter function\n     * @param filter\n     * @returns returns new size of array view after applying filter\n     */\n    updateFilter(filter) {\n        if (this.viewFilter === filter) {\n            return;\n        }\n        this.viewFilter = filter;\n        this.refresh();\n        return this.data.length;\n    }\n    /**\n     * Recalculates the filter. Only needed if your filter function isn't pure and you know the result would be different if run again compared to before\n     */\n    refresh() {\n        this.clear();\n        const data = this.parent.data.filter(this.viewFilter);\n        this.push(...data);\n    }\n}\n//# sourceMappingURL=data_source.js.map","import { DataSource } from './data_source';\nimport { EventEmitter } from '../utilities/event_emitter';\nexport class ObjectDataSource {\n    constructor(initialData) {\n        if (initialData) {\n            this.data = initialData;\n        }\n        this.updateEvent = new EventEmitter();\n        this.updateEventOnKey = new Map();\n    }\n    /**\n     * Creates a datasource for a single key of the object\n     * @param key\n     * @param cancellationToken\n     */\n    pick(key, cancellationToken) {\n        var _a;\n        const subDataSource = new DataSource((_a = this.data) === null || _a === void 0 ? void 0 : _a[key]);\n        this.listenOnKey(key, (v) => {\n            subDataSource.update(v.newValue);\n        }, cancellationToken);\n        return subDataSource;\n    }\n    /**\n     * Listen to changes of the object\n     */\n    listen(callback, cancellationToken) {\n        return this.updateEvent.subscribe(callback, cancellationToken).cancel;\n    }\n    /**\n     * Same as listenOnKey but will immediately call the callback with the current value first\n     */\n    listenOnKeyAndRepeat(key, callback, cancellationToken) {\n        callback({\n            key,\n            newValue: this.data[key],\n            oldValue: undefined\n        });\n        return this.listenOnKey(key, callback, cancellationToken);\n    }\n    /**\n     * Listen to changes of a single key of the object\n     */\n    listenOnKey(key, callback, cancellationToken) {\n        if (!this.updateEventOnKey.has(key)) {\n            this.updateEventOnKey.set(key, new EventEmitter());\n        }\n        const event = this.updateEventOnKey.get(key);\n        return event.subscribe(callback, cancellationToken).cancel;\n    }\n    /**\n     * Returns all the keys of the object in the source\n     */\n    keys() {\n        return Object.keys(this.data);\n    }\n    /**\n     * Returns all the values of the object in the source\n     */\n    values() {\n        return Object.values(this.data);\n    }\n    /**\n     * get the current value of a key of the object\n     * @param key\n     */\n    get(key) {\n        return this.data[key];\n    }\n    /**\n     * delete a key from the object\n     * @param key\n     * @param value\n     */\n    delete(key, value) {\n        const old = this.data[key];\n        delete this.data[key];\n        this.updateEvent.fire({ oldValue: old, key, newValue: undefined, deleted: true });\n    }\n    /**\n     * set the value for a key of the object\n     * @param key\n     * @param value\n     */\n    set(key, value) {\n        if (this.data[key] === value) {\n            return;\n        }\n        const old = this.data[key];\n        this.data[key] = value;\n        this.updateEvent.fire({ oldValue: old, key, newValue: this.data[key] });\n        if (this.updateEventOnKey.has(key)) {\n            this.updateEventOnKey.get(key).fire({ oldValue: old, key, newValue: this.data[key] });\n        }\n    }\n    /**\n     * Merge the key value pairs of an object into this object non recursively\n     * @param newData\n     */\n    assign(newData) {\n        for (const key of Object.keys(newData)) {\n            this.set(key, newData[key]);\n        }\n    }\n    /**\n     * Returns a shallow copy of the object\n     */\n    toObject() {\n        return Object.assign({}, this.data);\n    }\n    /**\n     * Returns a simplified version of this datasource\n     */\n    toDataSource() {\n        const stream = new DataSource(this.data);\n        this.listen((s) => {\n            stream.update(this.data);\n        });\n        return stream;\n    }\n}\n//# sourceMappingURL=object_data_source.js.map","/**\n * @internal\n */\nexport const ownerSymbol = Symbol('owner');\n//# sourceMappingURL=owner_symbol.js.map","import { EventEmitter } from '../utilities/event_emitter';\nexport var DataFlow;\n(function (DataFlow) {\n    DataFlow[DataFlow[\"UPSTREAM\"] = 0] = \"UPSTREAM\";\n    DataFlow[DataFlow[\"DOWNSTREAM\"] = 1] = \"DOWNSTREAM\";\n})(DataFlow || (DataFlow = {}));\n/**\n * Same as DataSource except data can flow in both directions\n */\nexport class DuplexDataSource {\n    constructor(initialValue) {\n        this.value = initialValue;\n        this.updateDownstreamEvent = new EventEmitter();\n        this.updateUpstreamEvent = new EventEmitter();\n    }\n    /**\n     * Makes it possible to have 2 completely separate data flow pipelines for each direction\n     * @param downStream stream to pipe downstream data to\n     * @param upstream  stream to pipe upstream data to\n     */\n    static fromTwoDataSource(downStream, upstream, initialValue) {\n        const result = new DuplexDataSource(initialValue);\n        //@ts-ignore\n        result.updateDownstreamEvent = downStream.updateEvent;\n        //@ts-ignore\n        result.updateUpstreamEvent = upstream.updateEvent;\n    }\n    /**\n     * Allows creating a duplex stream that blocks data in one direction. Useful for plugging into code that uses two way flow but only one way is desired\n     * @param direction direction of the dataflow that is allowed\n     */\n    static createOneWay(direction = DataFlow.DOWNSTREAM, initialValue) {\n        return new DuplexDataSource(initialValue).oneWayFlow(direction);\n    }\n    /**\n     * Updates the value in the data source and calls the listen callback for all listeners\n     * @param newValue new value for the data source\n     */\n    updateDownstream(newValue) {\n        if (this.updating) {\n            throw new Error('Problem in datas source: Unstable value propagation, when updating a value the stream was updated back as a direct response. This can lead to infinite loops and is therefore not allowed');\n        }\n        this.updating = true;\n        this.value = newValue;\n        this.updateDownstreamEvent.fire(newValue);\n        this.updating = false;\n    }\n    /**\n     * Updates the value in the data source and calls the listen callback for all listeners\n     * @param newValue new value for the data source\n     */\n    updateUpstream(newValue) {\n        if (this.updating) {\n            throw new Error('Problem in datas source: Unstable value propagation, when updating a value the stream was updated back as a direct response. This can lead to infinite loops and is therefore not allowed');\n        }\n        this.updating = true;\n        this.value = newValue;\n        this.updateUpstreamEvent.fire(newValue);\n        this.updating = false;\n    }\n    /**\n     * Same as listen but will immediately call the callback with the current value first\n     * @param callback Callback to call when value is updated\n     * @param cancellationToken Optional token to control the cancellation of the subscription\n     * @returns Cancellation callback, can be used to cancel subscription without a cancellation token\n     */\n    listenAndRepeat(callback, cancellationToken) {\n        callback(this.value);\n        return this.listen(callback, cancellationToken);\n    }\n    /**\n     * Subscribes to the updates of the data stream\n     * @param callback Callback to call when value is updated\n     * @param cancellationToken Optional token to control the cancellation of the subscription\n     * @returns Cancellation callback, can be used to cancel subscription without a cancellation token\n     */\n    listen(callback, cancellationToken) {\n        this.updateDownstreamEvent.subscribe(callback, cancellationToken).cancel;\n        return this.updateUpstreamEvent.subscribe(callback, cancellationToken).cancel;\n    }\n    /**\n     * Subscribes exclusively to updates of the data stream that occur due to an update flowing upstream\n     * @param callback Callback to call when value is updated\n     * @param cancellationToken Optional token to control the cancellation of the subscription\n     * @returns Cancellation callback, can be used to cancel subscription without a cancellation token\n     */\n    listenUpstream(callback, cancellationToken) {\n        return this.updateUpstreamEvent.subscribe(callback, cancellationToken).cancel;\n    }\n    /**\n     * Subscribes exclusively to updates of the data stream that occur due to an update flowing downstream\n     * @param callback Callback to call when value is updated\n     * @param cancellationToken Optional token to control the cancellation of the subscription\n     * @returns Cancellation callback, can be used to cancel subscription without a cancellation token\n     */\n    listenDownstream(callback, cancellationToken) {\n        return this.updateDownstreamEvent.subscribe(callback, cancellationToken).cancel;\n    }\n    /**\n     * Creates a new datasource that listenes to updates of this datasource but only propagates the updates from this source if they pass a predicate check\n     * @param callback predicate check to decide if the update from the parent data source is passed down or not\n     * @param cancellationToken  Cancellation token to cancel the subscriptions added to the datasources by this operation\n     */\n    filter(downStreamFilter, upstreamFilter, cancellationToken) {\n        if (!upstreamFilter) {\n            upstreamFilter = downStreamFilter;\n        }\n        const filteredSource = new DuplexDataSource();\n        this.listenDownstream((newVal) => {\n            if (downStreamFilter(newVal)) {\n                filteredSource.updateDownstream(newVal);\n            }\n        }, cancellationToken);\n        filteredSource.listenUpstream((newVal) => {\n            if ((upstreamFilter !== null && upstreamFilter !== void 0 ? upstreamFilter : downStreamFilter)(newVal)) {\n                this.updateUpstream(newVal);\n            }\n        }, cancellationToken);\n        return filteredSource;\n    }\n    /**\n     * Forwards all updates from this source to another\n     * @param targetDataSource datasource to pipe the updates to\n     * @param cancellationToken  Cancellation token to cancel the subscriptions added to the datasources by this operation\n     */\n    pipe(targetDataSource, cancellationToken) {\n        this.listenDownstream((newVal) => targetDataSource.updateDownstream(newVal), cancellationToken);\n        targetDataSource.listenUpstream((newVal) => this.updateUpstream(newVal), cancellationToken);\n    }\n    /**\n     * Creates a new datasource that is listening to updates from this datasource and transforms them with a mapper function before fowarding them to itself\n     * @param mapper mapper function that transforms the data when it flows downwards\n     * @param reverseMapper mapper function that transforms the data when it flows upwards\n     * @param cancellationToken  Cancellation token to cancel the subscriptions added to the datasources by this operation\n     */\n    map(mapper, reverseMapper, cancellationToken) {\n        const mappedSource = new DuplexDataSource(mapper(this.value));\n        this.listenDownstream((v) => mappedSource.updateDownstream(mapper(v)), cancellationToken);\n        mappedSource.listenUpstream((v) => this.updateUpstream(reverseMapper(v)), cancellationToken);\n        return mappedSource;\n    }\n    /**\n     * Creates a new datasource that listens to this one and forwards updates if they are not the same as the last update\n     * @param cancellationToken  Cancellation token to cancel the subscription the new datasource has to this datasource\n     */\n    unique(cancellationToken) {\n        const uniqueSource = new DuplexDataSource(this.value);\n        this.listenDownstream((v) => {\n            if (uniqueSource.value !== v) {\n                uniqueSource.updateDownstream(v);\n            }\n        }, cancellationToken);\n        uniqueSource.listenUpstream((v) => {\n            if (this.value !== v) {\n                this.updateUpstream(v);\n            }\n        }, cancellationToken);\n        return uniqueSource;\n    }\n    /**\n     * Allows flow of data only in one direction\n     * @param direction direction of the dataflow that is allowed\n     * @param cancellationToken  Cancellation token to cancel the subscriptions the new datasource has to the two parent datasources\n     */\n    oneWayFlow(direction = DataFlow.DOWNSTREAM, cancellationToken) {\n        const oneWaySource = new DuplexDataSource(this.value);\n        if (direction === DataFlow.DOWNSTREAM) {\n            this.listenDownstream((v) => oneWaySource.updateDownstream(v), cancellationToken);\n            oneWaySource.updateUpstream = () => void 0;\n        }\n        else {\n            oneWaySource.listenUpstream((v) => this.updateUpstream(v));\n            oneWaySource.updateDownstream = () => void 0;\n        }\n        return oneWaySource;\n    }\n    /**\n     * Remove all listeners\n     */\n    cancelAll() {\n        this.updateDownstreamEvent.cancelAll();\n        this.updateUpstreamEvent.cancelAll();\n    }\n}\n//# sourceMappingURL=duplex_data_source.js.map","import { DataSource } from '../../stream/data_source';\nimport { ownerSymbol } from '../../utilities/owner_symbol';\n/**\n * @internal\n */\nexport class AurumTextElement {\n    constructor(text) {\n        this.node = this.create(text);\n        if (text instanceof DataSource) {\n            text.listen((v) => {\n                if (this.node) {\n                    this.node.textContent = v;\n                }\n            });\n        }\n    }\n    resolveStringSource(source) {\n        if (typeof source === 'string') {\n            return source;\n        }\n        else {\n            return source.value;\n        }\n    }\n    create(text) {\n        const node = document.createTextNode(this.resolveStringSource(text));\n        node[ownerSymbol] = this;\n        return node;\n    }\n    remove() {\n        if (this.hasParent()) {\n            this.node.parentElement[ownerSymbol].removeChild(this.node);\n        }\n    }\n    hasParent() {\n        return !!this.node.parentElement;\n    }\n}\n//# sourceMappingURL=aurum_text.js.map","import { ArrayDataSource, DataSource } from '../../stream/data_source';\nimport { ownerSymbol } from '../../utilities/owner_symbol';\nimport { AurumTextElement } from './aurum_text';\nimport { EventEmitter } from '../../utilities/event_emitter';\nimport { DuplexDataSource } from '../../stream/duplex_data_source';\n/**\n * @inernal\n */\nexport const aurumElementModelIdentitiy = Symbol('AurumElementModel');\n/**\n * @internal\n */\nconst defaultEvents = {\n    drag: 'onDrag',\n    dragstart: 'onDragStart',\n    dragend: 'onDragEnd',\n    dragexit: 'onDragExit',\n    dragover: 'onDragOver',\n    dragenter: 'onDragEnter',\n    dragleave: 'onDragLeave',\n    blur: 'onBlur',\n    focus: 'onFocus',\n    click: 'onClick',\n    dblclick: 'onDblClick',\n    keydown: 'onKeyDown',\n    keyhit: 'onKeyHit',\n    keyup: 'onKeyUp',\n    mousedown: 'onMouseDown',\n    mouseup: 'onMouseUp',\n    mousemove: 'onMouseMove',\n    mouseenter: 'onMouseEnter',\n    mouseleave: 'onMouseLeave',\n    mousewheel: 'onMouseWheel',\n    load: 'onLoad',\n    error: 'onError'\n};\n/**\n * @internal\n */\nconst defaultProps = ['id', 'name', 'draggable', 'tabindex', 'style', 'role', 'contentEditable'];\nexport function prerender(model) {\n    if (model && model[aurumElementModelIdentitiy]) {\n        const result = model.constructor(model.props, model.innerNodes);\n        return prerender(result);\n    }\n    else {\n        return model;\n    }\n}\nexport class AurumElement {\n    constructor(props, children, domNodeName) {\n        var _a;\n        this.node = this.create(domNodeName);\n        this.children = [];\n        if (props != null) {\n            if (props.onAttach) {\n                this.onAttach = props.onAttach;\n                this.needAttach = true;\n            }\n            this.onDetach = props.onDetach;\n            this.initialize(props);\n            (_a = props.onCreate) === null || _a === void 0 ? void 0 : _a.call(props, this.node);\n        }\n        if (children) {\n            this.addChildren(children);\n        }\n    }\n    initialize(props) {\n        this.createEventHandlers(defaultEvents, props);\n        const dataProps = Object.keys(props).filter((e) => e.includes('-'));\n        this.bindProps(defaultProps, props, dataProps);\n        if (props.class) {\n            this.handleClass(props.class);\n        }\n    }\n    bindProps(keys, props, dynamicProps) {\n        for (const key of keys) {\n            if (props[key]) {\n                this.assignStringSourceToAttribute(props[key], key);\n            }\n        }\n        if (dynamicProps) {\n            for (const key of dynamicProps) {\n                if (props[key]) {\n                    this.assignStringSourceToAttribute(props[key], key);\n                }\n            }\n        }\n    }\n    createEventHandlers(events, props) {\n        for (const key in events) {\n            if (props[events[key]]) {\n                if (props[events[key]] instanceof DataSource) {\n                    this.node.addEventListener(key, (e) => props[events[key]].update(e));\n                }\n                else if (props[events[key]] instanceof DuplexDataSource) {\n                    this.node.addEventListener(key, (e) => props[events[key]].updateDownstream(e));\n                }\n                else if (typeof props[events[key]] === 'function') {\n                    this.node.addEventListener(key, (e) => props[events[key]](e));\n                }\n            }\n        }\n    }\n    render() {\n        let absoluteIndex = 0;\n        for (let i = 0; i < this.children.length; i++, absoluteIndex++) {\n            if (this.children[i] instanceof AurumFragment) {\n                absoluteIndex = this.renderFragment(this.children[i], absoluteIndex);\n            }\n            else {\n                this.renderChild(this.children[i], absoluteIndex);\n            }\n        }\n        while (this.node.childNodes.length > absoluteIndex) {\n            const child = this.node.childNodes[this.node.childNodes.length - 1];\n            this.node.removeChild(child);\n        }\n    }\n    renderFragment(fragment, absoluteIndex) {\n        for (let j = 0; j < fragment.children.length; j++, absoluteIndex++) {\n            if (fragment.children[j] instanceof AurumFragment) {\n                absoluteIndex = this.renderFragment(fragment.children[j], absoluteIndex);\n            }\n            else {\n                this.renderChild(fragment.children[j], absoluteIndex);\n            }\n        }\n        absoluteIndex--;\n        return absoluteIndex;\n    }\n    renderChild(child, index) {\n        if (this.node.childNodes.length <= index) {\n            return this.addChildDom(child);\n        }\n        if (this.node.childNodes[index][ownerSymbol] !== child) {\n            const childIndex = this.getChildIndex(child.node);\n            if (childIndex !== -1) {\n                this.swapChildrenDom(index, childIndex);\n            }\n            else {\n                this.addDomNodeAt(child.node, index);\n            }\n        }\n    }\n    assignStringSourceToAttribute(data, key) {\n        if (typeof data === 'string' || typeof data === 'boolean') {\n            if (typeof data === 'boolean') {\n                if (data) {\n                    this.node.setAttribute(key, '');\n                }\n                else {\n                    this.node.removeAttribute(key);\n                }\n            }\n            else {\n                this.node.setAttribute(key, data);\n            }\n        }\n        else {\n            data.unique().listenAndRepeat((v) => {\n                if (typeof v === 'boolean') {\n                    if (v) {\n                        this.node.setAttribute(key, '');\n                    }\n                    else {\n                        this.node.removeAttribute(key);\n                    }\n                }\n                else {\n                    this.node.setAttribute(key, v);\n                }\n            });\n        }\n    }\n    handleAttach(parent) {\n        var _a, _b, _c;\n        if (this.needAttach) {\n            if (parent.isConnected()) {\n                (_a = this.onAttach) === null || _a === void 0 ? void 0 : _a.call(this, this.node);\n                for (const child of this.node.childNodes) {\n                    (_c = (_b = child[ownerSymbol]) === null || _b === void 0 ? void 0 : _b.handleAttach) === null || _c === void 0 ? void 0 : _c.call(_b, this);\n                }\n            }\n            else {\n                parent.needAttach = true;\n            }\n        }\n    }\n    //@ts-ignore\n    handleDetach() {\n        var _a, _b, _c;\n        if (!this.node.isConnected) {\n            (_a = this.onDetach) === null || _a === void 0 ? void 0 : _a.call(this, this.node);\n            for (const child of this.node.childNodes) {\n                if (child[ownerSymbol]) {\n                    (_c = (_b = child[ownerSymbol]).handleDetach) === null || _c === void 0 ? void 0 : _c.call(_b);\n                }\n            }\n        }\n    }\n    handleClass(data) {\n        if (typeof data === 'string') {\n            this.node.className = data;\n        }\n        else if (data instanceof DataSource) {\n            if (data.value) {\n                if (Array.isArray(data.value)) {\n                    this.node.className = data.value.join(' ');\n                    data.unique().listen(() => {\n                        this.node.className = data.value.join(' ');\n                    });\n                }\n                else {\n                    this.node.className = data.value;\n                    data.unique().listen(() => {\n                        this.node.className = data.value;\n                    });\n                }\n            }\n            data.unique().listen((v) => (this.node.className = v));\n        }\n        else {\n            const value = data.reduce((p, c) => {\n                if (typeof c === 'string') {\n                    return `${p} ${c}`;\n                }\n                else {\n                    if (c.value) {\n                        return `${p} ${c.value}`;\n                    }\n                    else {\n                        return p;\n                    }\n                }\n            }, '');\n            this.node.className = value;\n            for (const i of data) {\n                if (i instanceof DataSource) {\n                    i.unique().listen((v) => {\n                        const value = data.reduce((p, c) => {\n                            if (typeof c === 'string') {\n                                return `${p} ${c}`;\n                            }\n                            else {\n                                if (c.value) {\n                                    return `${p} ${c.value}`;\n                                }\n                                else {\n                                    return p;\n                                }\n                            }\n                        }, '');\n                        this.node.className = value;\n                    });\n                }\n            }\n        }\n    }\n    create(domNodeName) {\n        const node = document.createElement(domNodeName);\n        node[ownerSymbol] = this;\n        return node;\n    }\n    getChildIndex(node) {\n        let i = 0;\n        for (const child of this.node.childNodes) {\n            if (child === node) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n    hasChild(node) {\n        for (const child of node.children) {\n            if (child === node) {\n                return true;\n            }\n        }\n        return false;\n    }\n    addChildDom(child) {\n        var _a;\n        this.node.appendChild(child.node);\n        (_a = child.handleAttach) === null || _a === void 0 ? void 0 : _a.call(child, this);\n    }\n    swapChildrenDom(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const nodeA = this.node.children[indexA];\n        const nodeB = this.node.children[indexB];\n        nodeA.remove();\n        nodeB.remove();\n        if (indexA < indexB) {\n            this.addDomNodeAt(nodeB, indexA);\n            this.addDomNodeAt(nodeA, indexB);\n        }\n        else {\n            this.addDomNodeAt(nodeA, indexB);\n            this.addDomNodeAt(nodeB, indexA);\n        }\n    }\n    addDomNodeAt(node, index) {\n        var _a, _b, _c, _d;\n        if (index >= this.node.childElementCount) {\n            this.node.appendChild(node);\n            (_b = (_a = node[ownerSymbol]).handleAttach) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n        }\n        else {\n            this.node.insertBefore(node, this.node.children[index]);\n            (_d = (_c = node[ownerSymbol]).handleAttach) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        }\n    }\n    remove() {\n        if (this.hasParent()) {\n            this.node.parentElement[ownerSymbol].removeChild(this.node);\n        }\n    }\n    hasParent() {\n        return !!this.node.parentElement;\n    }\n    isConnected() {\n        return this.node.isConnected;\n    }\n    removeChild(child) {\n        const index = this.children.indexOf(child);\n        if (index !== -1) {\n            this.children.splice(index, 1);\n        }\n        this.render();\n    }\n    removeChildAt(index) {\n        this.children.splice(index, 1);\n        this.render();\n    }\n    swapChildren(indexA, indexB) {\n        if (indexA === indexB) {\n            return;\n        }\n        const nodeA = this.children[indexA];\n        const nodeB = this.children[indexB];\n        this.children[indexA] = nodeB;\n        this.children[indexB] = nodeA;\n        this.render();\n    }\n    clearChildren() {\n        this.children.length = 0;\n        this.render();\n    }\n    addChild(child) {\n        if (child === undefined || child === null) {\n            return;\n        }\n        if (child[aurumElementModelIdentitiy]) {\n            //@ts-ignore\n            child = prerender(child);\n            if (child === undefined) {\n                return;\n            }\n        }\n        if (Array.isArray(child)) {\n            for (const subChild of child) {\n                this.addChild(subChild);\n            }\n            return;\n        }\n        this.children.push(this.childNodeToAurum(child));\n        this.render();\n    }\n    childNodeToAurum(child) {\n        if (child instanceof AurumElement) {\n            return child;\n        }\n        if (child instanceof Promise) {\n            const result = new AurumFragment({});\n            //@ts-ignore\n            child.then((value) => {\n                result.addChildren([value]);\n                this.render();\n            });\n            return result;\n        }\n        else if (child instanceof ArrayDataSource) {\n            //@ts-ignore\n            const result = new AurumFragment({ repeatModel: child });\n            result.onChange.subscribe(() => this.render());\n            return result;\n        }\n        else if (typeof child === 'string' || typeof child === 'number' || typeof child === 'boolean' || typeof child === 'bigint') {\n            return new AurumTextElement(child.toString());\n        }\n        else if (child instanceof DataSource) {\n            //@ts-ignore\n            const result = new AurumFragment({}, [child]);\n            result.onChange.subscribe(() => this.render());\n            return result;\n        }\n        else {\n            throw new Error('Unsupported child type');\n        }\n    }\n    addChildAt(child, index) {\n        this.children.splice(index, 0, this.childNodeToAurum(child));\n        this.render();\n    }\n    addChildren(nodes) {\n        if (nodes.length === 0) {\n            return;\n        }\n        for (const child of nodes) {\n            this.addChild(child);\n        }\n    }\n}\n/**\n * @internal\n */\nexport class AurumFragment {\n    constructor(props, children) {\n        this.onChange = new EventEmitter();\n        this.children = [];\n        if (props.repeatModel) {\n            this.handleRepeat(props.repeatModel);\n        }\n        else if (children) {\n            this.addChildren(children);\n        }\n    }\n    addChildren(children) {\n        for (const child of children) {\n            let renderable;\n            if (child[aurumElementModelIdentitiy]) {\n                renderable = prerender(child);\n            }\n            else {\n                renderable = child;\n            }\n            if (renderable instanceof AurumElement) {\n                this.children.push(renderable);\n            }\n            else if (renderable instanceof DataSource) {\n                let sourceChild = undefined;\n                let wasArray;\n                const freshnessToken = { ts: undefined };\n                renderable.unique().listenAndRepeat((newValue) => {\n                    freshnessToken.ts = Date.now();\n                    if ((newValue === undefined || newValue === null) && wasArray) {\n                        this.children.length = 0;\n                        this.onChange.fire();\n                        wasArray = false;\n                        return;\n                    }\n                    else if (!Array.isArray(newValue) && wasArray) {\n                        this.children.length = 0;\n                        this.onChange.fire();\n                        wasArray = false;\n                    }\n                    if (Array.isArray(newValue)) {\n                        wasArray = true;\n                        this.children.length = 0;\n                        this.onChange.fire();\n                        for (const newSubValue of newValue) {\n                            this.handleSourceChild(newSubValue, undefined, undefined, freshnessToken, freshnessToken.ts);\n                        }\n                    }\n                    else {\n                        sourceChild = this.handleSourceChild(newValue, sourceChild, renderable, freshnessToken, freshnessToken.ts);\n                    }\n                });\n            }\n            else {\n                throw new Error('case not yet implemented');\n            }\n        }\n    }\n    handleSourceChild(newValue, sourceChild, dataSource, freshnessToken, timestamp) {\n        if (newValue === undefined || newValue === null) {\n            if (sourceChild) {\n                this.children.splice(this.children.indexOf(sourceChild), 1);\n                sourceChild = undefined;\n                this.onChange.fire();\n            }\n            return;\n        }\n        if (newValue[aurumElementModelIdentitiy]) {\n            newValue = prerender(newValue);\n        }\n        if (typeof newValue === 'string' || typeof newValue === 'bigint' || typeof newValue === 'number' || typeof newValue === 'boolean') {\n            if (!sourceChild) {\n                const textNode = new AurumTextElement(dataSource !== null && dataSource !== void 0 ? dataSource : newValue);\n                this.children.push(textNode);\n                sourceChild = textNode;\n                this.onChange.fire();\n            }\n            else if (sourceChild instanceof AurumElement) {\n                const textNode = new AurumTextElement(dataSource !== null && dataSource !== void 0 ? dataSource : newValue);\n                this.children.splice(this.children.indexOf(sourceChild), 1, textNode);\n                sourceChild = textNode;\n                this.onChange.fire();\n            }\n        }\n        else if (newValue instanceof AurumElement) {\n            if (newValue !== sourceChild) {\n                if (sourceChild) {\n                    this.children.splice(this.children.indexOf(sourceChild), 1, newValue);\n                }\n                else {\n                    this.children.push(newValue);\n                }\n                sourceChild = newValue;\n                this.onChange.fire();\n            }\n        }\n        else if (newValue instanceof Promise) {\n            newValue.then((value) => {\n                if (freshnessToken.ts === timestamp) {\n                    this.addChildren([value]);\n                    this.onChange.fire();\n                }\n            });\n        }\n        else if (newValue instanceof DataSource) {\n            if (!sourceChild) {\n                const result = new AurumFragment({}, [newValue]);\n                sourceChild = result;\n                this.children.push(result);\n                result.onChange.subscribe(() => this.onChange.fire());\n                this.onChange.fire();\n            }\n            else if (sourceChild !== newValue) {\n                const result = new AurumFragment({}, [newValue]);\n                result.onChange.subscribe(() => this.onChange.fire());\n                this.children.splice(this.children.indexOf(sourceChild), 1, result);\n                sourceChild = result;\n                this.onChange.fire();\n            }\n        }\n        else if (newValue instanceof ArrayDataSource) {\n            if (!sourceChild) {\n                const result = new AurumFragment({ repeatModel: newValue });\n                sourceChild = result;\n                this.children.push(result);\n                result.onChange.subscribe(() => this.onChange.fire());\n                this.onChange.fire();\n            }\n            else if (sourceChild !== newValue) {\n                const result = new AurumFragment({ repeatModel: newValue });\n                result.onChange.subscribe(() => this.onChange.fire());\n                this.children.splice(this.children.indexOf(sourceChild), 1, result);\n                sourceChild = result;\n                this.onChange.fire();\n            }\n        }\n        return sourceChild;\n    }\n    handleRepeat(dataSource) {\n        dataSource.listenAndRepeat((change) => {\n            switch (change.operationDetailed) {\n                case 'replace':\n                    //TODO:FIX THIS\n                    //@ts-ignore\n                    this.children[change.index] = prerender(change.items[0]);\n                    break;\n                case 'swap':\n                    const itemA = this.children[change.index];\n                    const itemB = this.children[change.index2];\n                    this.children[change.index2] = itemA;\n                    this.children[change.index] = itemB;\n                    break;\n                case 'append':\n                    //@ts-ignore\n                    this.children = this.children.concat(change.items.map(prerender));\n                    break;\n                case 'prepend':\n                    //@ts-ignore\n                    this.children.unshift(...change.items.map(prerender));\n                    break;\n                case 'remove':\n                case 'removeLeft':\n                case 'removeRight':\n                    this.children.splice(change.index, change.count);\n                    break;\n                case 'clear':\n                    this.children = [];\n                    break;\n                default:\n                    throw new Error('unhandled operation');\n            }\n            this.onChange.fire();\n        });\n    }\n}\n//# sourceMappingURL=aurum_element.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Div extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'div');\n    }\n}\n//# sourceMappingURL=div.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Button extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'button');\n        if (props !== null) {\n            this.bindProps(['disabled'], props);\n        }\n    }\n}\n//# sourceMappingURL=button.js.map","import { AurumElement } from './special/aurum_element';\nimport { DataSource } from '../stream/data_source';\nimport { DuplexDataSource } from '../stream/duplex_data_source';\n/**\n * @internal\n */\nconst inputEvents = { input: 'onInput', change: 'onChange' };\n/**\n * @internal\n */\nconst inputProps = [\n    'placeholder',\n    'readonly',\n    'disabled',\n    'accept',\n    'alt',\n    'autocomplete',\n    'autofocus',\n    'checked',\n    'defaultChecked',\n    'formAction',\n    'formEnctype',\n    'formMethod',\n    'formNoValidate',\n    'formTarget',\n    'max',\n    'maxLength',\n    'min',\n    'minLength',\n    'pattern',\n    'multiple',\n    'required',\n    'type'\n];\n/**\n * @internal\n */\nexport class Input extends AurumElement {\n    constructor(props, children) {\n        var _a, _b;\n        super(props, children, 'input');\n        if (props !== null) {\n            if (props.value instanceof DataSource || props.value instanceof DuplexDataSource) {\n                props.value.unique().listenAndRepeat((value) => (this.node.value = value));\n                this.node.addEventListener('input', () => {\n                    if (props.value instanceof DataSource) {\n                        props.value.update(this.node.value);\n                    }\n                    else if (props.value instanceof DuplexDataSource) {\n                        props.value.updateUpstream(this.node.value);\n                    }\n                });\n            }\n            else {\n                this.node.value = (_a = props.value) !== null && _a !== void 0 ? _a : '';\n            }\n            if (props.checked instanceof DataSource || props.checked instanceof DuplexDataSource) {\n                props.checked.unique().listenAndRepeat((value) => (this.node.checked = value));\n                this.node.addEventListener('change', () => {\n                    if (props.checked instanceof DataSource) {\n                        props.checked.update(this.node.checked);\n                    }\n                    else if (props.checked instanceof DuplexDataSource) {\n                        props.checked.updateUpstream(this.node.checked);\n                    }\n                });\n            }\n            else {\n                this.node.checked = (_b = props.checked) !== null && _b !== void 0 ? _b : false;\n            }\n            this.bindProps(inputProps, props);\n            this.createEventHandlers(inputEvents, props);\n        }\n    }\n}\n//# sourceMappingURL=input.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Li extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'li');\n    }\n}\n//# sourceMappingURL=li.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Span extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'span');\n    }\n}\n//# sourceMappingURL=span.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Style extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'style');\n        if (props !== null) {\n            this.bindProps(['media'], props);\n        }\n    }\n}\n//# sourceMappingURL=style.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Audio extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'audio');\n        if (props !== null) {\n            this.bindProps(['controls', 'autoplay', 'loop', 'muted', 'preload', 'src'], props);\n        }\n    }\n}\n//# sourceMappingURL=audio.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Ul extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'ul');\n    }\n}\n//# sourceMappingURL=ul.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class P extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'p');\n    }\n}\n//# sourceMappingURL=p.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Img extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'img');\n        if (props !== null) {\n            this.bindProps(['src', 'alt', 'width', 'height', 'referrerPolicy', 'sizes', 'srcset', 'useMap'], props);\n        }\n    }\n}\n//# sourceMappingURL=img.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Link extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'link');\n        if (props !== null) {\n            this.bindProps(['href', 'rel', 'media', 'as', 'disabled', 'type'], props);\n        }\n    }\n}\n//# sourceMappingURL=link.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Canvas extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'canvas');\n        if (props !== null) {\n            this.bindProps(['width', 'height'], props);\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class A extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'a');\n        if (props !== null) {\n            this.bindProps(['href', 'target'], props);\n        }\n    }\n}\n//# sourceMappingURL=a.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Article extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'article');\n    }\n}\n//# sourceMappingURL=article.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Br extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'br');\n    }\n}\n//# sourceMappingURL=br.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Form extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'form');\n    }\n}\n//# sourceMappingURL=form.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Label extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'label');\n        if (props !== null) {\n            this.bindProps(['for'], props);\n        }\n    }\n}\n//# sourceMappingURL=label.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Ol extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'ol');\n    }\n}\n//# sourceMappingURL=ol.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Pre extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'pre');\n    }\n}\n//# sourceMappingURL=pre.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Progress extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'progress');\n        if (props !== null) {\n            this.bindProps(['max', 'value'], props);\n        }\n    }\n}\n//# sourceMappingURL=progress.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Table extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'table');\n    }\n}\n//# sourceMappingURL=table.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Td extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'td');\n    }\n}\n//# sourceMappingURL=td.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Tr extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'tr');\n    }\n}\n//# sourceMappingURL=tr.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Th extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'th');\n    }\n}\n//# sourceMappingURL=th.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nconst textAreaEvents = { input: 'onInput', change: 'onChange' };\n/**\n * @internal\n */\nconst textAreaProps = [\n    'placeholder',\n    'readonly',\n    'disabled',\n    'rows',\n    'wrap',\n    'autocomplete',\n    'autofocus',\n    'max',\n    'maxLength',\n    'min',\n    'minLength',\n    'required',\n    'type'\n];\n/**\n * @internal\n */\nexport class TextArea extends AurumElement {\n    constructor(props, children) {\n        var _a, _b, _c;\n        super(props, children, 'textArea');\n        if (props !== null) {\n            if (props.inputValueSource) {\n                this.node.value = (_b = (_a = props.initialValue) !== null && _a !== void 0 ? _a : props.inputValueSource.value) !== null && _b !== void 0 ? _b : '';\n                props.inputValueSource.unique().listen((value) => (this.node.value = value));\n            }\n            else {\n                this.node.value = (_c = props.initialValue) !== null && _c !== void 0 ? _c : '';\n            }\n            this.bindProps(textAreaProps, props);\n            this.createEventHandlers(textAreaEvents, props);\n            if (props.inputValueSource) {\n                this.node.addEventListener('input', () => {\n                    props.inputValueSource.update(this.node.value);\n                });\n            }\n        }\n    }\n}\n//# sourceMappingURL=textarea.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class H1 extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'h1');\n    }\n}\n//# sourceMappingURL=h1.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class H2 extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'h2');\n    }\n}\n//# sourceMappingURL=h2.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class H3 extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'h3');\n    }\n}\n//# sourceMappingURL=h3.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class H4 extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'h4');\n    }\n}\n//# sourceMappingURL=h4.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class H5 extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'h5');\n    }\n}\n//# sourceMappingURL=h5.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class H6 extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'h6');\n    }\n}\n//# sourceMappingURL=h6.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Header extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'header');\n    }\n}\n//# sourceMappingURL=header.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Footer extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'footer');\n    }\n}\n//# sourceMappingURL=footer.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Nav extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'nav');\n    }\n}\n//# sourceMappingURL=nav.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class B extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'b');\n    }\n}\n//# sourceMappingURL=b.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class I extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'i');\n    }\n}\n//# sourceMappingURL=i.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Script extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'script');\n        if (props !== null) {\n            this.bindProps(['src', 'async', 'defer', 'integrity', 'noModule', 'type'], props);\n        }\n    }\n}\n//# sourceMappingURL=script.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Abbr extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'abbr');\n    }\n}\n//# sourceMappingURL=abbr.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Area extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'area');\n    }\n}\n//# sourceMappingURL=area.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Aside extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'aside');\n    }\n}\n//# sourceMappingURL=aside.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Em extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'em');\n    }\n}\n//# sourceMappingURL=em.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Heading extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'heading');\n    }\n}\n//# sourceMappingURL=heading.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class IFrame extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'iframe');\n        if (props !== null) {\n            this.bindProps(['src', 'srcdoc', 'width', 'height', 'allow', 'allowFullscreen', 'allowPaymentRequest'], props);\n        }\n    }\n}\n//# sourceMappingURL=iframe.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class NoScript extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'noscript');\n    }\n}\n//# sourceMappingURL=noscript.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Q extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'q');\n    }\n}\n//# sourceMappingURL=q.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nconst selectEvents = { change: 'onChange' };\n/**\n * @internal\n */\nexport class Select extends AurumElement {\n    constructor(props, children) {\n        var _a;\n        super(props, children, 'select');\n        if (props !== null) {\n            this.createEventHandlers(selectEvents, props);\n            this.initialSelection = props.initialSelection;\n            if (props.selectedIndexSource) {\n                this.selectedIndexSource = props.selectedIndexSource;\n                props.selectedIndexSource.unique().listenAndRepeat((value) => (this.node.selectedIndex = value));\n            }\n            else {\n                this.node.selectedIndex = (_a = props.initialSelection) !== null && _a !== void 0 ? _a : -1;\n            }\n            if (props.selectedIndexSource) {\n                this.needAttach = true;\n                this.node.addEventListener('change', () => {\n                    props.selectedIndexSource.update(this.node.selectedIndex);\n                });\n            }\n        }\n    }\n    handleAttach(parent) {\n        super.handleAttach(parent);\n        if (this.node.isConnected) {\n            if (this.selectedIndexSource) {\n                this.node.selectedIndex = this.selectedIndexSource.value;\n            }\n            else if (this.initialSelection !== undefined) {\n                this.node.selectedIndex = this.initialSelection;\n            }\n        }\n    }\n}\n//# sourceMappingURL=select.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Source extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'source');\n        if (props !== null) {\n            this.bindProps(['src', 'srcSet', 'media', 'sizes', 'type'], props);\n        }\n    }\n}\n//# sourceMappingURL=source.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Title extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'title');\n    }\n}\n//# sourceMappingURL=title.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Video extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'video');\n        if (props !== null) {\n            this.bindProps(['controls', 'autoplay', 'loop', 'muted', 'preload', 'src', 'poster', 'width', 'height'], props);\n        }\n    }\n}\n//# sourceMappingURL=video.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Tbody extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'tbody');\n    }\n}\n//# sourceMappingURL=tbody.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Tfoot extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'tfoot');\n    }\n}\n//# sourceMappingURL=tfoot.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Thead extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'thead');\n    }\n}\n//# sourceMappingURL=thead.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Summary extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'summary');\n    }\n}\n//# sourceMappingURL=summary.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Details extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'details');\n    }\n}\n//# sourceMappingURL=details.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Sub extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'sub');\n    }\n}\n//# sourceMappingURL=sub.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Sup extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'sup');\n    }\n}\n//# sourceMappingURL=sup.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Svg extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'svg');\n        if (props !== null) {\n            this.bindProps(['width', 'height'], props);\n        }\n    }\n}\n//# sourceMappingURL=svg.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Data extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'data');\n        if (props !== null) {\n            this.bindProps(['datalue'], props);\n        }\n    }\n}\n//# sourceMappingURL=data.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Time extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'time');\n        if (props !== null) {\n            this.bindProps(['datetime'], props);\n        }\n    }\n}\n//# sourceMappingURL=time.js.map","import { AurumElement, prerender, aurumElementModelIdentitiy } from '../nodes/special/aurum_element';\nimport { ownerSymbol } from './owner_symbol';\nimport { Div } from '../nodes/div';\nimport { Button } from '../nodes/button';\nimport { Input } from '../nodes/input';\nimport { Li } from '../nodes/li';\nimport { Span } from '../nodes/span';\nimport { Style } from '../nodes/style';\nimport { Audio } from '../nodes/audio';\nimport { Ul } from '../nodes/ul';\nimport { P } from '../nodes/p';\nimport { Img } from '../nodes/img';\nimport { Link } from '../nodes/link';\nimport { Canvas } from '../nodes/canvas';\nimport { A } from '../nodes/a';\nimport { Article } from '../nodes/article';\nimport { Br } from '../nodes/br';\nimport { Form } from '../nodes/form';\nimport { Label } from '../nodes/label';\nimport { Ol } from '../nodes/ol';\nimport { Pre } from '../nodes/pre';\nimport { Progress } from '../nodes/progress';\nimport { Table } from '../nodes/table';\nimport { Td } from '../nodes/td';\nimport { Tr } from '../nodes/tr';\nimport { Th } from '../nodes/th';\nimport { TextArea } from '../nodes/textarea';\nimport { H1 } from '../nodes/h1';\nimport { H2 } from '../nodes/h2';\nimport { H3 } from '../nodes/h3';\nimport { H4 } from '../nodes/h4';\nimport { H5 } from '../nodes/h5';\nimport { H6 } from '../nodes/h6';\nimport { Header } from '../nodes/header';\nimport { Footer } from '../nodes/footer';\nimport { Nav } from '../nodes/nav';\nimport { B } from '../nodes/b';\nimport { I } from '../nodes/i';\nimport { Script } from '../nodes/script';\nimport { Abbr } from '../nodes/abbr';\nimport { Area } from '../nodes/area';\nimport { Aside } from '../nodes/aside';\nimport { Em } from '../nodes/em';\nimport { Heading } from '../nodes/heading';\nimport { IFrame } from '../nodes/iframe';\nimport { NoScript } from '../nodes/noscript';\nimport { Q } from '../nodes/q';\nimport { Select } from '../nodes/select';\nimport { Source } from '../nodes/source';\nimport { Title } from '../nodes/title';\nimport { Video } from '../nodes/video';\nimport { Tbody } from '../nodes/tbody';\nimport { Tfoot } from '../nodes/tfoot';\nimport { Thead } from '../nodes/thead';\nimport { Summary } from '../nodes/summary';\nimport { Details } from '../nodes/details';\nimport { Sub } from '../nodes/sub';\nimport { Sup } from '../nodes/sup';\nimport { Svg } from '../nodes/svg';\nimport { Data } from '../nodes/data';\nimport { Time } from '../nodes/time';\nimport { Option } from '../nodes/option';\nimport { Template } from '../nodes/template';\nconst nodeMap = {\n    button: Button,\n    div: Div,\n    input: Input,\n    li: Li,\n    span: Span,\n    style: Style,\n    ul: Ul,\n    p: P,\n    img: Img,\n    link: Link,\n    canvas: Canvas,\n    a: A,\n    article: Article,\n    br: Br,\n    form: Form,\n    label: Label,\n    ol: Ol,\n    pre: Pre,\n    progress: Progress,\n    table: Table,\n    td: Td,\n    tr: Tr,\n    th: Th,\n    textarea: TextArea,\n    h1: H1,\n    h2: H2,\n    h3: H3,\n    h4: H4,\n    h5: H5,\n    h6: H6,\n    header: Header,\n    footer: Footer,\n    nav: Nav,\n    b: B,\n    i: I,\n    script: Script,\n    abbr: Abbr,\n    area: Area,\n    aside: Aside,\n    audio: Audio,\n    em: Em,\n    heading: Heading,\n    iframe: IFrame,\n    noscript: NoScript,\n    option: Option,\n    q: Q,\n    select: Select,\n    source: Source,\n    title: Title,\n    video: Video,\n    tbody: Tbody,\n    tfoot: Tfoot,\n    thead: Thead,\n    summary: Summary,\n    details: Details,\n    sub: Sub,\n    sup: Sup,\n    svg: Svg,\n    data: Data,\n    time: Time,\n    template: Template\n};\nexport class Aurum {\n    static attach(aurumElementModel, dom) {\n        const aurumElement = prerender(aurumElementModel);\n        if (dom[ownerSymbol]) {\n            throw new Error('This node is already managed by aurum and cannot be used');\n        }\n        if (aurumElement instanceof AurumElement) {\n            dom.appendChild(aurumElement.node);\n            aurumElement['handleAttach'](aurumElement);\n            dom[ownerSymbol] = aurumElement;\n        }\n        else {\n            throw new Error('Root node of aurum application must be a single dom node');\n        }\n    }\n    static isAttached(dom) {\n        return dom[ownerSymbol] !== undefined;\n    }\n    static detach(domNode) {\n        if (domNode[ownerSymbol]) {\n            domNode[ownerSymbol].node.remove();\n            domNode[ownerSymbol].handleDetach();\n            domNode[ownerSymbol] = undefined;\n        }\n    }\n    static factory(node, args, ...innerNodes) {\n        if (typeof node === 'string') {\n            const type = node;\n            node = nodeMap[node];\n            if (node === undefined) {\n                throw new Error(`Node ${type} does not exist or is not supported`);\n            }\n        }\n        if (Object.getPrototypeOf(node) === AurumElement) {\n            return {\n                [aurumElementModelIdentitiy]: true,\n                //@ts-ignore\n                constructor: (args, innerNodes) => new node(args, innerNodes),\n                props: args,\n                innerNodes: innerNodes\n            };\n        }\n        else {\n            return {\n                [aurumElementModelIdentitiy]: true,\n                //@ts-ignore\n                constructor: node,\n                props: args,\n                innerNodes: innerNodes\n            };\n        }\n    }\n}\n//# sourceMappingURL=aurum.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Option extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'option');\n    }\n}\n//# sourceMappingURL=option.js.map","import { AurumElement } from './special/aurum_element';\n/**\n * @internal\n */\nexport class Template extends AurumElement {\n    constructor(props, children) {\n        super(props, children, 'template');\n    }\n}\n//# sourceMappingURL=template.js.map","/**\n * @internal\n */\nexport class LinkedListNode {\n    constructor(data) {\n        this.data = data;\n    }\n    deleteNext() {\n        if (this.next) {\n            const overNext = this.next.next;\n            this.next.next = undefined;\n            this.next.previous = undefined;\n            this.next = overNext;\n            if (this.next) {\n                this.next.previous = this;\n            }\n        }\n    }\n    deletePrevious() {\n        if (this.previous) {\n            const overPrevious = this.previous.previous;\n            this.previous.next = undefined;\n            this.previous.previous = undefined;\n            this.previous = overPrevious;\n            if (this.previous) {\n                this.previous.next = this;\n            }\n        }\n    }\n}\n//# sourceMappingURL=linked_list_node.js.map","import { LinkedListNode } from './linked_list_node';\n/**\n * @internal\n */\nexport class LinkedList {\n    constructor(data = []) {\n        this.length = 0;\n        data.forEach((d) => this.append(d));\n    }\n    find(predicate) {\n        let ptr = this.rootNode;\n        while (ptr && !predicate(ptr)) {\n            ptr = ptr.next;\n        }\n        return ptr;\n    }\n    append(element) {\n        if (!this.rootNode && !this.lastNode) {\n            this.rootNode = this.lastNode = new LinkedListNode(element);\n        }\n        else {\n            this.lastNode.next = new LinkedListNode(element);\n            this.lastNode.next.previous = this.lastNode;\n            this.lastNode = this.lastNode.next;\n        }\n        this.length++;\n        return element;\n    }\n    forEach(cb) {\n        this.find((n) => {\n            cb(n.data);\n            return false;\n        });\n    }\n    remove(element) {\n        if (element === this.rootNode.data) {\n            if (this.rootNode === this.lastNode) {\n                this.rootNode = this.lastNode = undefined;\n            }\n            else {\n                this.rootNode = this.rootNode.next;\n            }\n            this.length--;\n        }\n        else {\n            const result = this.find((e) => e.next && e.next.data === element);\n            if (result) {\n                if (result.next === this.lastNode) {\n                    this.lastNode = result;\n                }\n                result.deleteNext();\n                this.length--;\n            }\n        }\n    }\n}\n//# sourceMappingURL=linked_list.js.map","import { LinkedList } from './linkedlist/linked_list';\nexport class CancellationToken {\n    constructor(...cancellables) {\n        this.cancelables = new LinkedList(cancellables);\n        this._isCancelled = false;\n    }\n    get isCanceled() {\n        return this._isCancelled;\n    }\n    /**\n     * Attaches a new cancelable to this token\n     * @param delegate\n     */\n    addCancelable(delegate) {\n        this.throwIfCancelled('attempting to add cancellable to token that is already cancelled');\n        this.cancelables.append(delegate);\n        if (this.cancelables.length > 200) {\n            console.log('potential memory leak: cancellation token has over 200 clean up calls');\n        }\n        return this;\n    }\n    removeCancelable(delegate) {\n        this.throwIfCancelled('attempting to remove cancellable from token that is already cancelled');\n        this.cancelables.remove(delegate);\n        return this;\n    }\n    addDisposable(disposable) {\n        this.addCancelable(() => disposable.dispose());\n        return this;\n    }\n    callIfNotCancelled(action) {\n        if (!this.isCanceled) {\n            action();\n        }\n    }\n    setTimeout(cb, time = 0) {\n        const id = setTimeout(() => {\n            this.removeCancelable(cancelable);\n            cb();\n        }, time);\n        const cancelable = () => clearTimeout(id);\n        this.addCancelable(cancelable);\n    }\n    setInterval(cb, time) {\n        const id = setInterval(cb, time);\n        this.addCancelable(() => clearInterval(id));\n    }\n    requestAnimationFrame(cb) {\n        const id = requestAnimationFrame(() => {\n            this.removeCancelable(cancelable);\n            cb();\n        });\n        const cancelable = () => cancelAnimationFrame(id);\n        this.addCancelable(cancelable);\n    }\n    animationLoop(cb) {\n        let id = requestAnimationFrame(function f(time) {\n            cb(time);\n            id = requestAnimationFrame(f);\n        });\n        this.addCancelable(() => cancelAnimationFrame(id));\n    }\n    throwIfCancelled(msg) {\n        if (this.isCanceled) {\n            throw new Error(msg || 'cancellation token is cancelled');\n        }\n    }\n    chain(target, twoWays = false) {\n        if (twoWays) {\n            target.chain(this, false);\n        }\n        this.addCancelable(() => target.cancel());\n        return this;\n    }\n    /**\n     * Registers an event using addEventListener and if you cancel the token the event will be canceled as well\n     */\n    registerDomEvent(eventEmitter, event, callback) {\n        eventEmitter.addEventListener(event, callback);\n        this.addCancelable(() => eventEmitter.removeEventListener(event, callback));\n        return this;\n    }\n    /**\n     * Cancels everything attached to this token\n     */\n    cancel() {\n        if (this.isCanceled) {\n            return;\n        }\n        this._isCancelled = true;\n        this.cancelables.forEach((c) => c());\n        this.cancelables = undefined;\n    }\n}\n//# sourceMappingURL=cancellation_token.js.map","import { AurumElement } from './aurum_element';\nexport class Custom extends AurumElement {\n    constructor(props, children) {\n        super(props, children, props.tag);\n        if (props.attributes) {\n            if (props !== null) {\n                this.bindProps(Object.keys(props.attributes), props.attributes);\n            }\n        }\n    }\n}\n//# sourceMappingURL=custom.js.map","import { DataSource } from '../../stream/data_source';\nimport { prerender } from './aurum_element';\nconst routeIdentity = Symbol('route');\nexport function AurumRouter(props, children) {\n    children = children.map(prerender);\n    if (children.some((c) => !c[routeIdentity])) {\n        throw new Error('Aurum Router only accepts Route and DefaultRoute instances as children');\n    }\n    if (children.filter((c) => c.default).length > 1) {\n        throw new Error('Too many default routes only 0 or 1 allowed');\n    }\n    const urlDataSource = new DataSource(getUrlPath());\n    window.addEventListener('hashchange', () => {\n        urlDataSource.update(getUrlPath());\n    });\n    return urlDataSource.unique().map((p) => selectRoute(p, children));\n}\nfunction getUrlPath() {\n    const hash = location.hash.substring(1);\n    if (hash.includes('?')) {\n        return hash.substring(0, hash.indexOf('?'));\n    }\n    else if (hash.includes('#')) {\n        return hash.substring(0, hash.indexOf('#'));\n    }\n    else {\n        return hash;\n    }\n}\nfunction selectRoute(url, routes) {\n    var _a, _b;\n    if (url === undefined || url === null) {\n        return (_a = routes.find((r) => r.default)) === null || _a === void 0 ? void 0 : _a.content;\n    }\n    else {\n        if (routes.find((r) => r.href === url)) {\n            return routes.find((r) => r.href === url).content;\n        }\n        else {\n            const segments = url.split('/');\n            segments.pop();\n            while (segments.length) {\n                const path = segments.join('/');\n                if (routes.find((r) => r.href === path)) {\n                    return routes.find((r) => r.href === path).content;\n                }\n                segments.pop();\n            }\n            return (_b = routes.find((r) => r.default)) === null || _b === void 0 ? void 0 : _b.content;\n        }\n    }\n}\nexport function Route(props, children) {\n    return {\n        [routeIdentity]: true,\n        content: children,\n        default: false,\n        href: props.href\n    };\n}\nexport function DefaultRoute(props, children) {\n    return {\n        [routeIdentity]: true,\n        content: children,\n        default: true,\n        href: undefined\n    };\n}\n//# sourceMappingURL=router.js.map","import { prerender } from './aurum_element';\nconst switchCaseIdentity = Symbol('switchCase');\nexport function Switch(props, children) {\n    children = children.map(prerender);\n    if (children.some((c) => !c[switchCaseIdentity])) {\n        throw new Error('Switch only accepts SwitchCase as children');\n    }\n    if (children.filter((c) => c.default).length > 1) {\n        throw new Error('Too many default switch cases only 0 or 1 allowed');\n    }\n    return props.state.unique().map((state) => selectCase(state, children));\n}\nfunction selectCase(state, children) {\n    var _a, _b, _c;\n    return (_b = (_a = children.find((c) => c.value === state)) === null || _a === void 0 ? void 0 : _a.content) !== null && _b !== void 0 ? _b : (_c = children.find((p) => p.default)) === null || _c === void 0 ? void 0 : _c.content;\n}\nexport function SwitchCase(props, children) {\n    return {\n        [switchCaseIdentity]: true,\n        content: children,\n        default: false,\n        value: props.when\n    };\n}\nexport function DefaultSwitchCase(props, children) {\n    return {\n        [switchCaseIdentity]: true,\n        content: children,\n        default: true,\n        value: undefined\n    };\n}\n//# sourceMappingURL=switch.js.map","import { DataSource } from '../../stream/data_source';\nimport { prerender } from './aurum_element';\nexport function Suspense(props, children) {\n    const data = new DataSource(props.fallback);\n    Promise.all(children.map(prerender)).then((res) => {\n        data.update(res);\n    });\n    return data;\n}\n//# sourceMappingURL=suspense.js.map"],"names":["EventEmitter","subscribeChannel","onAfterFire","subscriptions","this","length","subscribe","callback","cancellationToken","createSubscription","hasSubscriptions","cancelAll","isFiring","push","afterFire","forEach","cb","fire","data","i","channel","that","subscription","facade","cancel","undefined","addCancelable","index","indexOf","splice","DataSource","initialValue","value","updateEvent","update","newValue","updating","Error","listenAndRepeat","listen","filter","filteredSource","max","oldValue","localeCompare","min","pipe","targetDataSource","v","map","mappedSource","tap","tapSource","await","unique","uniqueSource","diff","diffingSource","new","old","reduce","reducer","reduceSource","aggregate","otherSource","combinator","aggregatedSource","aggregateThree","second","third","aggregateFour","fourth","stringJoin","seperator","joinSource","toString","combine","otherSources","combinedDataSource","delay","time","delayedDataSource","setTimeout","debounce","timeout","debouncedDataSource","clearTimeout","throttle","throttledDataSource","cooldown","buffer","bufferedDataSource","accumulate","queueDataSource","ArrayDataSource","pick","key","subDataSource","_a","initialData","slice","lengthSource","operation","operationDetailed","items","newState","count","getData","get","set","item","target","swap","indexA","indexB","itemA","itemB","index2","swapItems","appendArray","Array","let","n","unshift","pop","merge","newData","removeRight","result","removeLeft","remove","clear","shift","toArray","sort","comparator","SortedArrayView","mapper","MappedArrayView","dependencies","view","FilteredArrayView","dep","refresh","callbackfn","change","parent","initial","isArray","viewFilter","filteredItems","updateFilter","ObjectDataSource","updateEventOnKey","Map","listenOnKey","listenOnKeyAndRepeat","has","keys","Object","values","delete","deleted","assign","const","toObject","toDataSource","stream","s","DataFlow","ownerSymbol","Symbol","AurumTextElement","text","node","create","textContent","resolveStringSource","source","document","createTextNode","hasParent","parentElement","removeChild","DuplexDataSource","updateDownstreamEvent","updateUpstreamEvent","fromTwoDataSource","downStream","upstream","createOneWay","direction","DOWNSTREAM","oneWayFlow","updateDownstream","updateUpstream","listenUpstream","listenDownstream","downStreamFilter","upstreamFilter","newVal","reverseMapper","oneWaySource","aurumElementModelIdentitiy","defaultEvents","drag","dragstart","dragend","dragexit","dragover","dragenter","dragleave","blur","focus","click","dblclick","keydown","keyhit","keyup","mousedown","mouseup","mousemove","mouseenter","mouseleave","mousewheel","load","error","defaultProps","prerender","model","constructor","props","innerNodes","AurumElement","children","domNodeName","onAttach","needAttach","onDetach","initialize","onCreate","call","addChildren","createEventHandlers","dataProps","e","includes","bindProps","class","handleClass","dynamicProps","assignStringSourceToAttribute","events","addEventListener","render","absoluteIndex","AurumFragment","renderFragment","renderChild","childNodes","fragment","j","child","addChildDom","childIndex","getChildIndex","swapChildrenDom","addDomNodeAt","setAttribute","removeAttribute","handleAttach","isConnected","_c","_b","handleDetach","className","join","p","c","createElement","hasChild","appendChild","nodeA","nodeB","childElementCount","insertBefore","_d","removeChildAt","swapChildren","clearChildren","addChild","childNodeToAurum","Promise","then","repeatModel","onChange","addChildAt","nodes","handleRepeat","renderable","sourceChild","wasArray","freshnessToken","ts","Date","now","handleSourceChild","dataSource","timestamp","textNode","concat","Div","Button","inputEvents","input","inputProps","Input","checked","Li","Span","Style","Audio","Ul","P","Img","Link","Canvas","A","Article","Br","Form","Label","Ol","Pre","Progress","Table","Td","Tr","Th","textAreaEvents","textAreaProps","TextArea","inputValueSource","H1","H2","H3","H4","H5","H6","Header","Footer","Nav","B","I","Script","Abbr","Area","Aside","Em","Heading","IFrame","NoScript","Q","selectEvents","Select","initialSelection","selectedIndexSource","selectedIndex","Source","Title","Video","Tbody","Tfoot","Thead","Summary","Details","Sub","Sup","Svg","Data","Time","nodeMap","button","div","li","span","style","ul","img","link","canvas","a","article","br","form","label","ol","pre","progress","table","td","tr","th","textarea","h1","h2","h3","h4","h5","h6","header","footer","nav","b","script","abbr","area","aside","audio","em","heading","iframe","noscript","option","q","select","title","video","tbody","tfoot","thead","summary","details","sub","sup","svg","template","Aurum","attach","aurumElementModel","dom","aurumElement","isAttached","detach","domNode","factory","args","type","getPrototypeOf","LinkedListNode","deleteNext","next","overNext","previous","deletePrevious","overPrevious","LinkedList","d","append","find","predicate","ptr","rootNode","element","lastNode","CancellationToken","cancelables","cancellables","_isCancelled","isCanceled","delegate","throwIfCancelled","console","log","removeCancelable","addDisposable","disposable","dispose","callIfNotCancelled","action","id","cancelable","setInterval","clearInterval","requestAnimationFrame","cancelAnimationFrame","animationLoop","f","msg","chain","twoWays","registerDomEvent","eventEmitter","event","removeEventListener","Custom","tag","attributes","routeIdentity","getUrlPath","hash","location","substring","switchCaseIdentity","some","default","urlDataSource","window","url","routes","r","content","href","segments","split","path","selectRoute","fallback","all","res","state","selectCase","when"],"mappings":"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"}