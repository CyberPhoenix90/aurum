{"version":3,"file":"dom_api_wrapper.js","sourceRoot":"","sources":["../../src/utilities/dom_api_wrapper.ts"],"names":[],"mappings":"AAAA,MAAM,YAAY,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AASpD,MAAM,OAAO,aAAa;IAClB,MAAM,CAAC,OAAO,CAAC,IAAwB;QAC7C,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAEM,MAAM,CAAC,OAAO,CAAC,IAAwB,EAAE,KAAa;QAC5D,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEM,MAAM,CAAC,SAAS,CAAC,IAAwB;QAC/C,IAAI,IAAI,YAAY,gBAAgB,EAAE;YACrC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;SAC1B;aAAM;YACN,OAAO,IAAI,CAAC,aAAa,CAAC;SAC1B;IACF,CAAC;IAEM,MAAM,CAAC,WAAW,CAAC,IAAwB,EAAE,KAAyB;QAC5E,IAAI,KAAK,YAAY,gBAAgB,EAAE;YACtC,KAAK,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;YAClC,KAAK,MAAM,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE;gBAC7C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACpB;SACD;aAAM;YACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACxB;IACF,CAAC;IAEM,MAAM,CAAC,WAAW,CAAC,IAAwB;QACjD,IAAI,IAAI,YAAY,gBAAgB,EAAE;YACrC,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC;SACnC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAEM,MAAM,CAAC,WAAW,CAAC,IAAwB;QACjD,IAAI,IAAI,YAAY,gBAAgB,EAAE;YACrC,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SAChG;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAEM,MAAM,CAAC,WAAW,CAAC,IAAwB,EAAE,KAAyB;QAC5E,IAAI,IAAI,YAAY,gBAAgB,EAAE;SACrC;IACF,CAAC;CACD","sourcesContent":["const documentMeta = Symbol('DocumentFragmentMeta');\ntype SupportedNodeTypes = HTMLElement | DocumentFragment | Text;\n\nexport interface DocumentFragmentMeta {\n\tparent: HTMLElement | DocumentFragment;\n\tchildren: SupportedNodeTypes[];\n\tatParentIndex: number;\n}\n\nexport class DomAPIWrapper {\n\tpublic static getText(node: SupportedNodeTypes) {\n\t\treturn node.textContent;\n\t}\n\n\tpublic static setText(node: SupportedNodeTypes, value: string) {\n\t\tnode.textContent = value;\n\t}\n\n\tpublic static getParent(node: SupportedNodeTypes) {\n\t\tif (node instanceof DocumentFragment) {\n\t\t\tnode[documentMeta].parent;\n\t\t} else {\n\t\t\treturn node.parentElement;\n\t\t}\n\t}\n\n\tpublic static removeChild(node: SupportedNodeTypes, child: SupportedNodeTypes) {\n\t\tif (child instanceof DocumentFragment) {\n\t\t\tchild[documentMeta].parent = null;\n\t\t\tfor (const c of child[documentMeta].children) {\n\t\t\t\tnode.removeChild(c);\n\t\t\t}\n\t\t} else {\n\t\t\tnode.removeChild(child);\n\t\t}\n\t}\n\n\tpublic static getChildren(node: SupportedNodeTypes) {\n\t\tif (node instanceof DocumentFragment) {\n\t\t\treturn node[documentMeta].children;\n\t\t}\n\t\treturn node.childNodes;\n\t}\n\n\tpublic static isConnected(node: SupportedNodeTypes): boolean {\n\t\tif (node instanceof DocumentFragment) {\n\t\t\treturn node[documentMeta].parent ? DomAPIWrapper.isConnected(node[documentMeta].parent) : false;\n\t\t}\n\t\treturn node.isConnected;\n\t}\n\n\tpublic static appendChild(node: SupportedNodeTypes, child: SupportedNodeTypes) {\n\t\tif (node instanceof DocumentFragment) {\n\t\t}\n\t}\n}\n"]}