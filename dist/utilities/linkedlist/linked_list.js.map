{"version":3,"file":"linked_list.js","sourceRoot":"","sources":["../../../src/utilities/linkedlist/linked_list.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAGpD;;GAEG;AACH,MAAM,OAAO,UAAU;IAKtB,YAAY,OAAY,EAAE;QACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAEM,IAAI,CAAC,SAAuC;QAClD,IAAI,GAAG,GAAsB,IAAI,CAAC,QAAQ,CAAC;QAC3C,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9B,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;SACf;QAED,OAAO,GAAG,CAAC;IACZ,CAAC;IAEM,MAAM,CAAC,OAAU;QACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;SAC5D;aAAM;YACN,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;YACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;SACnC;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,OAAO,OAAO,CAAC;IAChB,CAAC;IAEM,OAAO,CAAC,EAAkB;QAChC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACf,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACX,OAAO,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACJ,CAAC;IACM,MAAM,CAAC,OAAU;QACvB,IAAI,OAAO,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACnC,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE;gBACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;aAC1C;iBAAM;gBACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;aACnC;YACD,IAAI,CAAC,MAAM,EAAE,CAAC;SACd;aAAM;YACN,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC;YACnE,IAAI,MAAM,EAAE;gBACX,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,EAAE;oBAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;iBACvB;gBACD,MAAM,CAAC,UAAU,EAAE,CAAC;gBACpB,IAAI,CAAC,MAAM,EAAE,CAAC;aACd;SACD;IACF,CAAC;CACD","sourcesContent":["import { LinkedListNode } from './linked_list_node';\r\nimport { Predicate } from '../common';\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class LinkedList<T> {\r\n\tpublic rootNode: LinkedListNode<T>;\r\n\tpublic lastNode: LinkedListNode<T>;\r\n\tpublic length: number;\r\n\r\n\tconstructor(data: T[] = []) {\r\n\t\tthis.length = 0;\r\n\t\tdata.forEach((d) => this.append(d));\r\n\t}\r\n\r\n\tpublic find(predicate: Predicate<LinkedListNode<T>>): LinkedListNode<T> {\r\n\t\tlet ptr: LinkedListNode<T> = this.rootNode;\r\n\t\twhile (ptr && !predicate(ptr)) {\r\n\t\t\tptr = ptr.next;\r\n\t\t}\r\n\r\n\t\treturn ptr;\r\n\t}\r\n\r\n\tpublic append(element: T): T {\r\n\t\tif (!this.rootNode && !this.lastNode) {\r\n\t\t\tthis.rootNode = this.lastNode = new LinkedListNode(element);\r\n\t\t} else {\r\n\t\t\tthis.lastNode.next = new LinkedListNode(element);\r\n\t\t\tthis.lastNode.next.previous = this.lastNode;\r\n\t\t\tthis.lastNode = this.lastNode.next;\r\n\t\t}\r\n\r\n\t\tthis.length++;\r\n\t\treturn element;\r\n\t}\r\n\r\n\tpublic forEach(cb: (d: T) => void) {\r\n\t\tthis.find((n) => {\r\n\t\t\tcb(n.data);\r\n\t\t\treturn false;\r\n\t\t});\r\n\t}\r\n\tpublic remove(element: T) {\r\n\t\tif (element === this.rootNode.data) {\r\n\t\t\tif (this.rootNode === this.lastNode) {\r\n\t\t\t\tthis.rootNode = this.lastNode = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tthis.rootNode = this.rootNode.next;\r\n\t\t\t}\r\n\t\t\tthis.length--;\r\n\t\t} else {\r\n\t\t\tconst result = this.find((e) => e.next && e.next.data === element);\r\n\t\t\tif (result) {\r\n\t\t\t\tif (result.next === this.lastNode) {\r\n\t\t\t\t\tthis.lastNode = result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.deleteNext();\r\n\t\t\t\tthis.length--;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}