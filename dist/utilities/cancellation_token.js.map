{"version":3,"file":"cancellation_token.js","sourceRoot":"","sources":["../../src/utilities/cancellation_token.ts"],"names":[],"mappings":"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","sourcesContent":["import { Delegate, Callback } from './common';\r\nimport { LinkedList } from './linkedlist/linked_list';\r\n\r\nexport class CancellationToken {\r\n\tprivate cancelables: LinkedList<Delegate>;\r\n\tprivate _isCancelled: boolean;\r\n\r\n\tpublic get isCanceled(): boolean {\r\n\t\treturn this._isCancelled;\r\n\t}\r\n\r\n\tconstructor(...cancellables: Delegate[]) {\r\n\t\tthis.cancelables = new LinkedList(cancellables);\r\n\t\tthis._isCancelled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Attaches a new cancelable to this token\r\n\t * @param delegate\r\n\t */\r\n\tpublic addCancelable(delegate: Delegate): this {\r\n\t\tthis.throwIfCancelled('attempting to add cancellable to token that is already cancelled');\r\n\r\n\t\tthis.cancelables.append(delegate);\r\n\r\n\t\tif (this.cancelables.length > 200) {\r\n\t\t\tconsole.log('potential memory leak: cancellation token has over 200 clean up calls');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic removeCancelable(delegate: Delegate): this {\r\n\t\tthis.throwIfCancelled('attempting to remove cancellable from token that is already cancelled');\r\n\r\n\t\tthis.cancelables.remove(delegate);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic addDisposable(disposable: { dispose(): any }): this {\r\n\t\tthis.addCancelable(() => disposable.dispose());\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic callIfNotCancelled(action: Delegate): void {\r\n\t\tif (!this.isCanceled) {\r\n\t\t\taction();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setTimeout(cb: Delegate, time: number = 0): void {\r\n\t\tconst id = setTimeout(() => {\r\n\t\t\tthis.removeCancelable(cancelable);\r\n\t\t\tcb();\r\n\t\t}, time);\r\n\t\tconst cancelable = () => clearTimeout(id);\r\n\t\tthis.addCancelable(cancelable);\r\n\t}\r\n\r\n\tpublic setInterval(cb: Delegate, time: number): void {\r\n\t\tconst id = setInterval(cb, time);\r\n\t\tthis.addCancelable(() => clearInterval(id));\r\n\t}\r\n\r\n\tpublic requestAnimationFrame(cb: Callback<number>): void {\r\n\t\tconst id: number = requestAnimationFrame(() => {\r\n\t\t\tthis.removeCancelable(cancelable);\r\n\t\t\tcb();\r\n\t\t});\r\n\t\tconst cancelable = () => cancelAnimationFrame(id);\r\n\t\tthis.addCancelable(cancelable);\r\n\t}\r\n\r\n\tpublic animationLoop(cb: Callback<number>): void {\r\n\t\tlet id: number = requestAnimationFrame(function f(time: number) {\r\n\t\t\tcb(time);\r\n\t\t\tid = requestAnimationFrame(f);\r\n\t\t});\r\n\r\n\t\tthis.addCancelable(() => cancelAnimationFrame(id));\r\n\t}\r\n\r\n\tpublic throwIfCancelled(msg: string): void {\r\n\t\tif (this.isCanceled) {\r\n\t\t\tthrow new Error(msg || 'cancellation token is cancelled');\r\n\t\t}\r\n\t}\r\n\r\n\tpublic chain(target: CancellationToken, twoWays: boolean = false): CancellationToken {\r\n\t\tif (twoWays) {\r\n\t\t\ttarget.chain(this, false);\r\n\t\t}\r\n\r\n\t\tthis.addCancelable(() => target.cancel());\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers an event using addEventListener and if you cancel the token the event will be canceled as well\r\n\t */\r\n\tpublic registerDomEvent(eventEmitter: HTMLElement | Document, event: string, callback: (e: Event) => void): this {\r\n\t\t(eventEmitter as HTMLElement).addEventListener(event, callback);\r\n\t\tthis.addCancelable(() => eventEmitter.removeEventListener(event, callback));\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels everything attached to this token\r\n\t */\r\n\tpublic cancel(): void {\r\n\t\tif (this.isCanceled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isCancelled = true;\r\n\t\tthis.cancelables.forEach((c) => c());\r\n\t\tthis.cancelables = undefined;\r\n\t}\r\n}\r\n"]}