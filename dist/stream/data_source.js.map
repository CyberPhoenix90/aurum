{"version":3,"file":"data_source.js","sourceRoot":"","sources":["../../src/stream/data_source.ts"],"names":[],"mappings":"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","sourcesContent":["import { CancellationToken } from '../utilities/cancellation_token';\nimport { Callback, Predicate } from '../utilities/common';\nimport { EventEmitter } from '../utilities/event_emitter';\n\nexport class DataSource<T> {\n\tpublic value: T;\n\tprivate updating: boolean;\n\tprivate updateEvent: EventEmitter<T>;\n\n\tconstructor(initialValue?: T) {\n\t\tthis.value = initialValue;\n\t\tthis.updateEvent = new EventEmitter();\n\t}\n\n\t/**\n\t * Updates the value in the data source and calls the listen callback for all listeners\n\t * @param newValue new value for the data source\n\t */\n\tpublic update(newValue: T): void {\n\t\tif (this.updating) {\n\t\t\tthrow new Error(\n\t\t\t\t'Problem in datas source: Unstable value propagation, when updating a value the stream was updated back as a direct response. This can lead to infinite loops and is therefore not allowed'\n\t\t\t);\n\t\t}\n\t\tthis.updating = true;\n\t\tthis.value = newValue;\n\t\tthis.updateEvent.fire(newValue);\n\t\tthis.updating = false;\n\t}\n\n\t/**\n\t * Similar to update but does not update the the sender to avoid infinite mutual updates\n\t * @param sender Source of the backpropagation\n\t * @param newValue\n\t */\n\tprotected backPropagate(sender: Callback<T>, newValue: T): void {\n\t\tthis.value = newValue;\n\t\tthis.updating = true;\n\t\tthis.updateEvent.fireFiltered(newValue, sender);\n\t\tthis.updating = false;\n\t}\n\n\t/**\n\t * Same as listen but will immediately call the callback with the current value first\n\t * @param callback Callback to call when value is updated\n\t * @param cancellationToken Optional token to control the cancellation of the subscription\n\t * @returns Cancellation callback, can be used to cancel subscription without a cancellation token\n\t */\n\tpublic listenAndRepeat(callback: Callback<T>, cancellationToken?: CancellationToken): Callback<void> {\n\t\tcallback(this.value);\n\t\treturn this.listen(callback, cancellationToken);\n\t}\n\n\t/**\n\t * Subscribes to the updates of the data stream\n\t * @param callback Callback to call when value is updated\n\t * @param cancellationToken Optional token to control the cancellation of the subscription\n\t * @returns Cancellation callback, can be used to cancel subscription without a cancellation token\n\t */\n\tpublic listen(callback: Callback<T>, cancellationToken?: CancellationToken): Callback<void> {\n\t\treturn this.updateEvent.subscribe(callback, cancellationToken).cancel;\n\t}\n\n\tpublic filter(callback: (value: T) => boolean, cancellationToken?: CancellationToken): DataSource<T> {\n\t\tconst filteredSource = new DataSource<T>();\n\t\tthis.listen((value) => {\n\t\t\tif (callback(value)) {\n\t\t\t\tfilteredSource.update(value);\n\t\t\t}\n\t\t}, cancellationToken);\n\t\treturn filteredSource;\n\t}\n\n\t/**\n\t *\n\t * @param callback\n\t * @param cancellationToken\n\t */\n\tpublic filterDuplex(callback: (value: T) => boolean, cancellationToken?: CancellationToken): DataSource<T> {\n\t\tconst filteredSource = new DataSource<T>();\n\t\tconst cb = (value) => {\n\t\t\tif (callback(value)) {\n\t\t\t\tfilteredSource.backPropagate(cb2, value);\n\t\t\t}\n\t\t};\n\t\tconst cb2 = (value) => {\n\t\t\tif (callback(value)) {\n\t\t\t\tthis.backPropagate(cb, value);\n\t\t\t}\n\t\t};\n\n\t\tthis.listen(cb, cancellationToken);\n\t\tfilteredSource.listen(cb2, cancellationToken);\n\t\treturn filteredSource;\n\t}\n\n\tpublic pipe(targetDataSource: DataSource<T>, cancellationToken?: CancellationToken): void {\n\t\tthis.listen((v) => targetDataSource.update(v), cancellationToken);\n\t}\n\n\t/**\n\t * Duplex pipe is like pipe except that it binds both ways\n\t * @param targetDataSource\n\t * @param cancellationToken\n\t */\n\tpublic pipeDuplex(targetDataSource: DataSource<T>, cancellationToken?: CancellationToken): void {\n\t\tconst cb = (v) => targetDataSource.backPropagate(cb2, v);\n\t\tconst cb2 = (v) => this.backPropagate(cb, v);\n\n\t\tthis.listen(cb, cancellationToken);\n\t\ttargetDataSource.listen(cb2, cancellationToken);\n\t}\n\n\tpublic map<D>(callback: (value: T) => D, cancellationToken?: CancellationToken): DataSource<D> {\n\t\tconst mappedSource = new DataSource<D>(callback(this.value));\n\t\tthis.listen((value) => {\n\t\t\tmappedSource.update(callback(value));\n\t\t}, cancellationToken);\n\t\treturn mappedSource;\n\t}\n\n\t/**\n\t * Duplex map is like map except that changes to the mapped stream will be backpropagated. This is useful for making duplex (both ways) data streams\n\t * @param callback\n\t * @param reverseMap\n\t * @param cancellationToken\n\t */\n\tpublic mapDuplex<D>(callback: (value: T) => D, reverseMap: (value: D) => T, cancellationToken?: CancellationToken): DataSource<D> {\n\t\tconst mappedSource = new DataSource<D>(callback(this.value));\n\t\tconst cb = (value) => mappedSource.backPropagate(cb2, callback(value));\n\t\tconst cb2 = (value) => this.backPropagate(cb, reverseMap(value));\n\n\t\tthis.listen(cb, cancellationToken);\n\t\tmappedSource.listen(cb2, cancellationToken);\n\t\treturn mappedSource;\n\t}\n\n\tpublic unique(cancellationToken?: CancellationToken): DataSource<T> {\n\t\tconst uniqueSource = new DataSource<T>(this.value);\n\t\tthis.listen((value) => {\n\t\t\tif (value !== uniqueSource.value) {\n\t\t\t\tuniqueSource.update(value);\n\t\t\t}\n\t\t}, cancellationToken);\n\t\treturn uniqueSource;\n\t}\n\n\tpublic uniqueDuplex(cancellationToken?: CancellationToken): DataSource<T> {\n\t\tconst uniqueSource = new DataSource<T>(this.value);\n\t\tconst cb = (value) => {\n\t\t\tif (value !== uniqueSource.value) {\n\t\t\t\tuniqueSource.backPropagate(cb2, value);\n\t\t\t}\n\t\t};\n\t\tconst cb2 = (value) => {\n\t\t\tif (value !== this.value) {\n\t\t\t\tthis.backPropagate(cb, value);\n\t\t\t}\n\t\t};\n\n\t\tthis.listen(cb, cancellationToken);\n\t\tuniqueSource.listen(cb2, cancellationToken);\n\t\treturn uniqueSource;\n\t}\n\n\tpublic reduce(reducer: (p: T, c: T) => T, initialValue: T, cancellationToken?: CancellationToken): DataSource<T> {\n\t\tconst reduceSource = new DataSource<T>(initialValue);\n\t\tthis.listen((v) => reduceSource.update(reducer(reduceSource.value, v)), cancellationToken);\n\n\t\treturn reduceSource;\n\t}\n\n\tpublic aggregate<D, E>(otherSource: DataSource<D>, combinator: (self: T, other: D) => E, cancellationToken?: CancellationToken): DataSource<E> {\n\t\tconst aggregatedSource = new DataSource<E>(combinator(this.value, otherSource.value));\n\n\t\tthis.listen(() => aggregatedSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n\t\totherSource.listen(() => aggregatedSource.update(combinator(this.value, otherSource.value)), cancellationToken);\n\n\t\treturn aggregatedSource;\n\t}\n\n\tpublic combine(otherSource: DataSource<T>, cancellationToken?: CancellationToken): DataSource<T> {\n\t\tconst combinedDataSource = new DataSource<T>();\n\t\tthis.pipe(combinedDataSource, cancellationToken);\n\t\totherSource.pipe(combinedDataSource, cancellationToken);\n\n\t\treturn combinedDataSource;\n\t}\n\n\tpublic debounce(time: number, cancellationToken?: CancellationToken): DataSource<T> {\n\t\tconst debouncedDataSource = new DataSource<T>();\n\t\tlet timeout;\n\n\t\tthis.listen((v) => {\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(() => {\n\t\t\t\tdebouncedDataSource.update(v);\n\t\t\t}, time);\n\t\t}, cancellationToken);\n\n\t\treturn debouncedDataSource;\n\t}\n\n\tpublic buffer(time: number, cancellationToken?: CancellationToken): DataSource<T[]> {\n\t\tconst bufferedDataSource = new DataSource<T[]>();\n\t\tlet timeout;\n\t\tlet buffer = [];\n\n\t\tthis.listen((v) => {\n\t\t\tbuffer.push(v);\n\t\t\tif (!timeout) {\n\t\t\t\ttimeout = setTimeout(() => {\n\t\t\t\t\ttimeout = undefined;\n\t\t\t\t\tbufferedDataSource.update(buffer);\n\t\t\t\t\tbuffer = [];\n\t\t\t\t}, time);\n\t\t\t}\n\t\t}, cancellationToken);\n\n\t\treturn bufferedDataSource;\n\t}\n\n\tpublic queue(cancellationToken?: CancellationToken): ArrayDataSource<T> {\n\t\tconst queueDataSource = new ArrayDataSource<T>();\n\n\t\tthis.listen((v) => {\n\t\t\tqueueDataSource.push(v);\n\t\t}, cancellationToken);\n\n\t\treturn queueDataSource;\n\t}\n\n\tpublic pick(key: keyof T, cancellationToken?: CancellationToken): DataSource<T[typeof key]> {\n\t\tconst subDataSource: DataSource<T[typeof key]> = new DataSource(this.value?.[key]);\n\n\t\tthis.listen((v) => {\n\t\t\tif (v !== undefined && v !== null) {\n\t\t\t\tsubDataSource.update(v[key]);\n\t\t\t} else {\n\t\t\t\tsubDataSource.update(v as null | undefined);\n\t\t\t}\n\t\t}, cancellationToken);\n\n\t\treturn subDataSource;\n\t}\n\n\tpublic cancelAll(): void {\n\t\tthis.updateEvent.cancelAll();\n\t}\n}\n\nexport interface CollectionChange<T> {\n\toperation: 'replace' | 'swap' | 'add' | 'remove';\n\toperationDetailed: 'replace' | 'append' | 'prepend' | 'removeRight' | 'removeLeft' | 'remove' | 'swap' | 'clear';\n\tcount?: number;\n\tindex: number;\n\tindex2?: number;\n\ttarget?: T;\n\titems: T[];\n\tnewState: T[];\n}\nexport class ArrayDataSource<T> {\n\tprotected data: T[];\n\tprivate updateEvent: EventEmitter<CollectionChange<T>>;\n\tprivate lengthSource: DataSource<number>;\n\n\tconstructor(initialData?: T[]) {\n\t\tif (initialData) {\n\t\t\tthis.data = initialData.slice();\n\t\t} else {\n\t\t\tthis.data = [];\n\t\t}\n\t\tthis.lengthSource = new DataSource(this.data.length).unique();\n\t\tthis.updateEvent = new EventEmitter();\n\t}\n\n\t/**\n\t * Same as listen but will immediately call the callback with an append of all existing elements first\n\t */\n\tpublic listenAndRepeat(callback: Callback<CollectionChange<T>>, cancellationToken?: CancellationToken): Callback<void> {\n\t\tcallback({\n\t\t\toperation: 'add',\n\t\t\toperationDetailed: 'append',\n\t\t\tindex: 0,\n\t\t\titems: this.data,\n\t\t\tnewState: this.data,\n\t\t\tcount: this.data.length\n\t\t});\n\t\treturn this.listen(callback, cancellationToken);\n\t}\n\n\tpublic listen(callback: Callback<CollectionChange<T>>, cancellationToken?: CancellationToken): Callback<void> {\n\t\treturn this.updateEvent.subscribe(callback, cancellationToken).cancel;\n\t}\n\n\tpublic get length(): DataSource<number> {\n\t\treturn this.lengthSource;\n\t}\n\n\tpublic getData(): T[] {\n\t\treturn this.data.slice();\n\t}\n\n\tpublic get(index: number): T {\n\t\treturn this.data[index];\n\t}\n\n\tpublic set(index: number, item: T): void {\n\t\tconst old = this.data[index];\n\t\tif (old === item) {\n\t\t\treturn;\n\t\t}\n\t\tthis.data[index] = item;\n\t\tthis.update({ operation: 'replace', operationDetailed: 'replace', target: old, count: 1, index, items: [item], newState: this.data });\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\n\tpublic swap(indexA: number, indexB: number): void {\n\t\tif (indexA === indexB) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemA = this.data[indexA];\n\t\tconst itemB = this.data[indexB];\n\t\tthis.data[indexB] = itemA;\n\t\tthis.data[indexA] = itemB;\n\n\t\tthis.update({ operation: 'swap', operationDetailed: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\n\tpublic swapItems(itemA: T, itemB: T): void {\n\t\tif (itemA === itemB) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst indexA = this.data.indexOf(itemA);\n\t\tconst indexB = this.data.indexOf(itemB);\n\t\tif (indexA !== -1 && indexB !== -1) {\n\t\t\tthis.data[indexB] = itemA;\n\t\t\tthis.data[indexA] = itemB;\n\t\t}\n\n\t\tthis.update({ operation: 'swap', operationDetailed: 'swap', index: indexA, index2: indexB, items: [itemA, itemB], newState: this.data });\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\n\tpublic appendArray(items: T[]) {\n\t\tconst old = this.data;\n\t\tthis.data = new Array(old.length);\n\t\tlet i = 0;\n\t\tfor (i = 0; i < old.length; i++) {\n\t\t\tthis.data[i] = old[i];\n\t\t}\n\n\t\tfor (let n = 0; n < items.length; n++) {\n\t\t\tthis.data[i + n] = items[n];\n\t\t}\n\n\t\tthis.update({\n\t\t\toperation: 'add',\n\t\t\toperationDetailed: 'append',\n\t\t\tcount: items.length,\n\t\t\tindex: this.data.length - items.length,\n\t\t\titems,\n\t\t\tnewState: this.data\n\t\t});\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\n\tpublic push(...items: T[]) {\n\t\tthis.appendArray(items);\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\n\tpublic unshift(...items: T[]) {\n\t\tthis.data.unshift(...items);\n\t\tthis.update({ operation: 'add', operationDetailed: 'prepend', count: items.length, items, index: 0, newState: this.data });\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\n\tpublic pop(): T {\n\t\tconst item = this.data.pop();\n\t\tthis.update({\n\t\t\toperation: 'remove',\n\t\t\toperationDetailed: 'removeRight',\n\t\t\tcount: 1,\n\t\t\tindex: this.data.length,\n\t\t\titems: [item],\n\t\t\tnewState: this.data\n\t\t});\n\n\t\tthis.lengthSource.update(this.data.length);\n\t\treturn item;\n\t}\n\n\tpublic merge(newData: T[]): void {\n\t\tfor (let i = 0; i < newData.length; i++) {\n\t\t\tif (this.data[i] !== newData[i]) {\n\t\t\t\tif (this.data.length > i) {\n\t\t\t\t\tthis.set(i, newData[i]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.push(newData[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.data.length > newData.length) {\n\t\t\tthis.removeRight(this.data.length - newData.length);\n\t\t}\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\n\tpublic removeRight(count: number): void {\n\t\tconst length = this.data.length;\n\t\tconst result = this.data.splice(length - count, count);\n\t\tthis.update({ operation: 'remove', operationDetailed: 'removeRight', count, index: length - count, items: result, newState: this.data });\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\n\tpublic removeLeft(count: number): void {\n\t\tconst result = this.data.splice(0, count);\n\t\tthis.update({ operation: 'remove', operationDetailed: 'removeLeft', count, index: 0, items: result, newState: this.data });\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\tpublic remove(item: T): void {\n\t\tconst index = this.data.indexOf(item);\n\t\tif (index !== -1) {\n\t\t\tthis.data.splice(index, 1);\n\t\t\tthis.update({ operation: 'remove', operationDetailed: 'remove', count: 1, index, items: [item], newState: this.data });\n\t\t\tthis.lengthSource.update(this.data.length);\n\t\t}\n\t}\n\n\tpublic clear(): void {\n\t\tconst items = this.data;\n\t\tthis.data = [];\n\t\tthis.update({\n\t\t\toperation: 'remove',\n\t\t\toperationDetailed: 'clear',\n\t\t\tcount: items.length,\n\t\t\tindex: 0,\n\t\t\titems,\n\t\t\tnewState: this.data\n\t\t});\n\t\tthis.lengthSource.update(this.data.length);\n\t}\n\n\tpublic shift(): T {\n\t\tconst item = this.data.shift();\n\t\tthis.update({ operation: 'remove', operationDetailed: 'removeLeft', items: [item], count: 1, index: 0, newState: this.data });\n\t\tthis.lengthSource.update(this.data.length);\n\n\t\treturn item;\n\t}\n\n\tpublic toArray(): T[] {\n\t\treturn this.data.slice();\n\t}\n\n\tpublic sort(comparator: (a: T, b: T) => number, cancellationToken?: CancellationToken): SortedArrayView<T> {\n\t\treturn new SortedArrayView(this, comparator, cancellationToken);\n\t}\n\n\tpublic map<D>(mapper: (data: T) => D, cancellationToken?: CancellationToken): MappedArrayView<T, D> {\n\t\treturn new MappedArrayView<T, D>(this, mapper, cancellationToken);\n\t}\n\n\tpublic filter(callback: Predicate<T>, cancellationToken?: CancellationToken): FilteredArrayView<T> {\n\t\treturn new FilteredArrayView(this, callback, cancellationToken);\n\t}\n\n\tpublic forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void {\n\t\treturn this.data.forEach(callbackfn, thisArg);\n\t}\n\n\tpublic toDataSource(): DataSource<T[]> {\n\t\tconst stream = new DataSource(this.data);\n\t\tthis.listen((s) => {\n\t\t\tstream.update(s.newState);\n\t\t});\n\t\treturn stream;\n\t}\n\n\tprivate update(change: CollectionChange<T>) {\n\t\tthis.updateEvent.fire(change);\n\t}\n}\n\nexport class MappedArrayView<D, T> extends ArrayDataSource<T> {\n\tprivate mapper: (a: D) => T;\n\n\tconstructor(parent: ArrayDataSource<D>, mapper: (a: D) => T, cancellationToken?: CancellationToken) {\n\t\tconst initial = parent.getData().map(mapper);\n\t\tsuper(initial);\n\t\tthis.mapper = mapper;\n\n\t\tparent.listen((change) => {\n\t\t\tswitch (change.operationDetailed) {\n\t\t\t\tcase 'removeLeft':\n\t\t\t\t\tthis.removeLeft(change.count);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'removeRight':\n\t\t\t\t\tthis.removeRight(change.count);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'remove':\n\t\t\t\t\tthis.remove(this.data[change.index]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'clear':\n\t\t\t\t\tthis.clear();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'prepend':\n\t\t\t\t\tthis.unshift(...change.items.map(this.mapper));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'append':\n\t\t\t\t\tthis.appendArray(change.items.map(this.mapper));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'swap':\n\t\t\t\t\tthis.swap(change.index, change.index2);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'replace':\n\t\t\t\t\tthis.set(change.index, this.mapper(change.items[0]));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}, cancellationToken);\n\t}\n}\n\nexport class SortedArrayView<T> extends ArrayDataSource<T> {\n\tprivate comparator: (a: T, b: T) => number;\n\n\tconstructor(parent: ArrayDataSource<T>, comparator: (a: T, b: T) => number, cancellationToken?: CancellationToken) {\n\t\tconst initial = parent.getData().sort(comparator);\n\t\tsuper(initial);\n\t\tthis.comparator = comparator;\n\n\t\tparent.listen((change) => {\n\t\t\tswitch (change.operationDetailed) {\n\t\t\t\tcase 'removeLeft':\n\t\t\t\t\tthis.removeLeft(change.count);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'removeRight':\n\t\t\t\t\tthis.removeRight(change.count);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'remove':\n\t\t\t\t\tthis.remove(change.items[0]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'clear':\n\t\t\t\t\tthis.data.length = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'prepend':\n\t\t\t\t\tthis.unshift(...change.items);\n\t\t\t\t\tthis.data.sort(this.comparator);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'append':\n\t\t\t\t\tthis.push(...change.items);\n\t\t\t\t\tthis.data.sort(this.comparator);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'swap':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'replace':\n\t\t\t\t\tthis.set(change.index, change.items[0]);\n\t\t\t\t\tthis.data.sort(this.comparator);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}, cancellationToken);\n\t}\n}\n\nexport class FilteredArrayView<T> extends ArrayDataSource<T> {\n\tprivate viewFilter: Predicate<T>;\n\tprivate parent: ArrayDataSource<T>;\n\tconstructor(parent: ArrayDataSource<T> | T[], filter?: Predicate<T>, cancellationToken?: CancellationToken) {\n\t\tif (Array.isArray(parent)) {\n\t\t\tparent = new ArrayDataSource(parent);\n\t\t}\n\t\tfilter = filter ?? (() => true);\n\t\tconst initial = (parent as FilteredArrayView<T>).data.filter(filter);\n\t\tsuper(initial);\n\n\t\tthis.parent = parent;\n\t\tthis.viewFilter = filter;\n\t\tparent.listen((change) => {\n\t\t\tlet filteredItems;\n\t\t\tswitch (change.operationDetailed) {\n\t\t\t\tcase 'clear':\n\t\t\t\t\tthis.clear();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'removeLeft':\n\t\t\t\tcase 'removeRight':\n\t\t\t\tcase 'remove':\n\t\t\t\t\tfor (const item of change.items) {\n\t\t\t\t\t\tthis.remove(item);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'prepend':\n\t\t\t\t\tfilteredItems = change.items.filter(this.viewFilter);\n\t\t\t\t\tthis.unshift(...filteredItems);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'append':\n\t\t\t\t\tfilteredItems = change.items.filter(this.viewFilter);\n\t\t\t\t\tthis.push(...filteredItems);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'swap':\n\t\t\t\t\tconst indexA = this.data.indexOf(change.items[0]);\n\t\t\t\t\tconst indexB = this.data.indexOf(change.items[1]);\n\t\t\t\t\tif (indexA !== -1 && indexB !== -1) {\n\t\t\t\t\t\tthis.swap(indexA, indexB);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'replace':\n\t\t\t\t\tconst index = this.data.indexOf(change.target);\n\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\tconst acceptNew = this.viewFilter(change.items[0]);\n\t\t\t\t\t\tif (acceptNew) {\n\t\t\t\t\t\t\tthis.set(index, change.items[0]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.remove(change.target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}, cancellationToken);\n\t}\n\n\t/**\n\t * Replaces the filter function\n\t * @param filter\n\t * @returns returns new size of array view after applying filter\n\t */\n\tpublic updateFilter(filter: Predicate<T>): number {\n\t\tif (this.viewFilter === filter) {\n\t\t\treturn;\n\t\t}\n\t\tthis.viewFilter = filter;\n\t\tthis.refresh();\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Recalculates the filter. Only needed if your filter function isn't pure and you know the result would be different if run again compared to before\n\t */\n\tpublic refresh() {\n\t\tthis.clear();\n\t\tconst data = (this.parent as FilteredArrayView<T>).data.filter(this.viewFilter);\n\t\tthis.push(...data);\n\t}\n}\n"]}