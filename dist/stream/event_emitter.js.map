{"version":3,"file":"event_emitter.js","sourceRoot":"src/","sources":["stream/event_emitter.ts"],"names":[],"mappings":"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","sourcesContent":["import { CancellationToken } from '../utilities/cancellation_token';\n\nexport interface EventSubscriptionFacade {\n\tcancel(): void;\n}\n\nexport type EventCallback<T> = (data: T) => void;\n\ninterface EventSubscription<T> {\n\tcallback: EventCallback<T>;\n}\n\nexport interface EventConfig {\n\t// if true defines events for this events subscription changes\n\tobservable?: boolean;\n\t// if passed attaches cancelAll to this token\n\tcancellationToken?: CancellationToken;\n\t/**\n\t * Fire will only do anything every N executions, it's faster than throttling the callbacks if they all have the same rate\n\t */\n\tthrottled?: number;\n}\n\nexport class EventEmitter<T> {\n\tpublic onSubscribe: EventEmitter<void> | undefined;\n\tpublic onSubscribeOnce: EventEmitter<void> | undefined;\n\tpublic onCancelAll: EventEmitter<void> | undefined;\n\tpublic onCancel: EventEmitter<void> | undefined;\n\n\tprivate isFiring: boolean;\n\tprivate onAfterFire: Array<() => void>;\n\n\tpublic get subscriptions(): number {\n\t\treturn this.subscribeChannel.length;\n\t}\n\n\tpublic get oneTimeSubscriptions(): number {\n\t\treturn this.subscribeOnceChannel.length;\n\t}\n\n\tprivate linkedEvents: EventEmitter<T>[] | undefined;\n\tprivate subscribeChannel: EventSubscription<T>[];\n\tprivate subscribeOnceChannel: EventSubscription<T>[];\n\tprivate readonly throttle: number;\n\tprivate throttleCount: number;\n\n\tconstructor(config?: EventConfig) {\n\t\tthis.subscribeChannel = [];\n\t\tthis.subscribeOnceChannel = [];\n\t\tthis.throttleCount = 0;\n\t\tthis.onAfterFire = [];\n\n\t\tif (config) {\n\t\t\tif (config.observable) {\n\t\t\t\tthis.makeObservable();\n\t\t\t}\n\t\t\tif (config.cancellationToken) {\n\t\t\t\tconfig.cancellationToken.addCancelable(() => this.cancelAll());\n\t\t\t}\n\n\t\t\tif (config.throttled) {\n\t\t\t\tthis.throttle = config.throttled;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic linkEvent(eventToLink: EventEmitter<T>): void {\n\t\tif (!this.linkedEvents) {\n\t\t\tthis.linkedEvents = [];\n\t\t}\n\n\t\tthis.linkedEvents.push(eventToLink);\n\t}\n\n\tpublic unlinkEvent(eventToUnlink: EventEmitter<T>): void {\n\t\tif (!this.linkedEvents || !this.linkedEvents.includes(eventToUnlink)) {\n\t\t\tthrow new Error('Cannot unlink event that is not linked');\n\t\t}\n\n\t\tthis.linkedEvents.splice(this.linkedEvents.indexOf(eventToUnlink), 1);\n\t}\n\n\tpublic makeObservable(): void {\n\t\tif (!this.onSubscribe) {\n\t\t\tthis.onSubscribe = new EventEmitter<void>();\n\t\t\tthis.onSubscribeOnce = new EventEmitter<void>();\n\t\t\tthis.onCancelAll = new EventEmitter<void>();\n\t\t\tthis.onCancel = new EventEmitter<void>();\n\t\t}\n\t}\n\n\tpublic swapSubscriptions(event: EventEmitter<T>): void {\n\t\tconst sub: EventSubscription<T>[] = this.subscribeChannel;\n\t\tconst subOnce: EventSubscription<T>[] = this.subscribeOnceChannel;\n\n\t\tthis.subscribeChannel = event.subscribeChannel;\n\t\tthis.subscribeOnceChannel = event.subscribeOnceChannel;\n\n\t\tevent.subscribeChannel = sub;\n\t\tevent.subscribeOnceChannel = subOnce;\n\t}\n\n\tpublic subscribe(callback: EventCallback<T>, cancellationToken?: CancellationToken): EventSubscriptionFacade {\n\t\tif (this.onSubscribe) {\n\t\t\tthis.onSubscribe.fire();\n\t\t}\n\n\t\tconst { facade } = this.createSubscription(callback, this.subscribeChannel, cancellationToken);\n\n\t\treturn facade;\n\t}\n\n\tpublic hasSubscriptions(): boolean {\n\t\treturn this.subscriptions > 0 || this.oneTimeSubscriptions > 0;\n\t}\n\tpublic subscribeOnce(cancellationToken?: CancellationToken): Promise<T> {\n\t\tif (this.onSubscribeOnce) {\n\t\t\tthis.onSubscribeOnce.fire();\n\t\t}\n\n\t\treturn new Promise<T>((resolved) => {\n\t\t\tthis.createSubscription((data: T) => resolved(data), this.subscribeOnceChannel, cancellationToken);\n\t\t});\n\t}\n\n\tpublic cancelAll(): void {\n\t\tif (this.onCancelAll !== undefined) {\n\t\t\tthis.onCancelAll.fire();\n\t\t}\n\t}\n\n\tpublic fire(data?: T, data2?: T, data3?: T, data4?: T, data5?: T): void {\n\t\tif (this.throttle && this.throttleCount++ % this.throttle !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isFiring = true;\n\n\t\tlet length = this.subscribeChannel.length;\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tthis.subscribeChannel[i].callback(data);\n\t\t}\n\n\t\tlength = this.subscribeOnceChannel.length;\n\n\t\tif (this.subscribeOnceChannel.length > 0) {\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tthis.subscribeOnceChannel[i].callback(data);\n\t\t\t}\n\t\t\tthis.subscribeOnceChannel.length = 0;\n\t\t}\n\n\t\t//TODO: Optimize this to only fire on events that have subscriptions\n\t\tif (this.linkedEvents) {\n\t\t\tfor (let event of this.linkedEvents) {\n\t\t\t\tevent.fire(data, data2, data3, data4, data5);\n\t\t\t}\n\t\t}\n\n\t\tthis.isFiring = false;\n\t\tif (this.onAfterFire.length > 0) {\n\t\t\tthis.onAfterFire.forEach((cb) => cb());\n\t\t\tthis.onAfterFire.length = 0;\n\t\t}\n\t}\n\n\tprivate createSubscription(\n\t\tcallback: EventCallback<T>,\n\t\tchannel: EventSubscription<T>[],\n\t\tcancellationToken?: CancellationToken\n\t): { subscription: EventSubscription<T>; facade: EventSubscriptionFacade } {\n\t\tconst that: this = this;\n\n\t\tconst subscription: EventSubscription<T> = {\n\t\t\tcallback\n\t\t};\n\n\t\tconst facade: EventSubscriptionFacade = {\n\t\t\tcancel() {\n\t\t\t\tthat.cancel(subscription, channel);\n\t\t\t}\n\t\t};\n\n\t\tif (cancellationToken !== undefined) {\n\t\t\tcancellationToken.addCancelable(() => that.cancel(subscription, channel));\n\t\t}\n\t\tchannel.push(subscription);\n\n\t\treturn { subscription, facade };\n\t}\n\n\tprivate cancel(subscription: EventSubscription<T>, channel: EventSubscription<T>[]): void {\n\t\tlet index: number = channel.indexOf(subscription);\n\t\tif (index >= 0) {\n\t\t\tif (!this.isFiring) {\n\t\t\t\tchannel.splice(index, 1);\n\t\t\t} else {\n\t\t\t\tthis.onAfterFire.push(() => this.cancel(subscription, channel));\n\t\t\t}\n\t\t}\n\t}\n}\n"]}