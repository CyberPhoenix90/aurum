{"version":3,"file":"object_data_source.js","sourceRoot":"","sources":["../../src/stream/object_data_source.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataSource } from './data_source';\r\nimport { Callback } from '../utilities/common';\r\nimport { CancellationToken } from '../utilities/cancellation_token';\r\nimport { EventEmitter } from '../utilities/event_emitter';\r\n\r\nexport interface ObjectChange<T, K extends keyof T> {\r\n\tkey: K;\r\n\toldValue: T[K];\r\n\tnewValue: T[K];\r\n\tdeleted?: boolean;\r\n}\r\n\r\nexport class ObjectDataSource<T> {\r\n\tprotected data: T;\r\n\tprivate updateEvent: EventEmitter<ObjectChange<T, keyof T>>;\r\n\tprivate updateEventOnKey: Map<keyof T, EventEmitter<ObjectChange<T, keyof T>>>;\r\n\r\n\tconstructor(initialData: T) {\r\n\t\tif (initialData) {\r\n\t\t\tthis.data = initialData;\r\n\t\t}\r\n\r\n\t\tthis.updateEvent = new EventEmitter();\r\n\t\tthis.updateEventOnKey = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a datasource for a single key of the object\r\n\t * @param key\r\n\t * @param cancellationToken\r\n\t */\r\n\tpublic pick(key: keyof T, cancellationToken?: CancellationToken): DataSource<T[typeof key]> {\r\n\t\tconst subDataSource: DataSource<T[typeof key]> = new DataSource(this.data?.[key]);\r\n\r\n\t\tthis.listenOnKey(\r\n\t\t\tkey,\r\n\t\t\t(v) => {\r\n\t\t\t\tsubDataSource.update(v.newValue);\r\n\t\t\t},\r\n\t\t\tcancellationToken\r\n\t\t);\r\n\r\n\t\treturn subDataSource;\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to changes of the object\r\n\t */\r\n\tpublic listen(callback: Callback<ObjectChange<T, keyof T>>, cancellationToken?: CancellationToken): Callback<void> {\r\n\t\treturn this.updateEvent.subscribe(callback, cancellationToken).cancel;\r\n\t}\r\n\r\n\t/**\r\n\t * Same as listenOnKey but will immediately call the callback with the current value first\r\n\t */\r\n\tpublic listenOnKeyAndRepeat<K extends keyof T>(key: K, callback: Callback<ObjectChange<T, K>>, cancellationToken?: CancellationToken): Callback<void> {\r\n\t\tcallback({\r\n\t\t\tkey,\r\n\t\t\tnewValue: this.data[key],\r\n\t\t\toldValue: undefined\r\n\t\t});\r\n\r\n\t\treturn this.listenOnKey(key, callback, cancellationToken);\r\n\t}\r\n\r\n\t/**\r\n\t * Listen to changes of a single key of the object\r\n\t */\r\n\tpublic listenOnKey<K extends keyof T>(key: K, callback: Callback<ObjectChange<T, K>>, cancellationToken?: CancellationToken): Callback<void> {\r\n\t\tif (!this.updateEventOnKey.has(key)) {\r\n\t\t\tthis.updateEventOnKey.set(key, new EventEmitter());\r\n\t\t}\r\n\t\tconst event = this.updateEventOnKey.get(key);\r\n\t\treturn event.subscribe(callback, cancellationToken).cancel;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all the keys of the object in the source\r\n\t */\r\n\tpublic keys(): string[] {\r\n\t\treturn Object.keys(this.data);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all the values of the object in the source\r\n\t */\r\n\tpublic values(): any {\r\n\t\treturn Object.values(this.data);\r\n\t}\r\n\r\n\t/**\r\n\t * get the current value of a key of the object\r\n\t * @param key\r\n\t */\r\n\tpublic get<K extends keyof T>(key: K): T[K] {\r\n\t\treturn this.data[key];\r\n\t}\r\n\r\n\t/**\r\n\t * delete a key from the object\r\n\t * @param key\r\n\t * @param value\r\n\t */\r\n\tpublic delete<K extends keyof T>(key: K, value: T[K]): void {\r\n\t\tconst old = this.data[key];\r\n\t\tdelete this.data[key];\r\n\t\tthis.updateEvent.fire({ oldValue: old, key, newValue: undefined, deleted: true });\r\n\t}\r\n\r\n\t/**\r\n\t * set the value for a key of the object\r\n\t * @param key\r\n\t * @param value\r\n\t */\r\n\tpublic set<K extends keyof T>(key: K, value: T[K]): void {\r\n\t\tif (this.data[key] === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst old = this.data[key];\r\n\t\tthis.data[key] = value;\r\n\t\tthis.updateEvent.fire({ oldValue: old, key, newValue: this.data[key] });\r\n\t\tif (this.updateEventOnKey.has(key)) {\r\n\t\t\tthis.updateEventOnKey.get(key).fire({ oldValue: old, key, newValue: this.data[key] });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Merge the key value pairs of an object into this object non recursively\r\n\t * @param newData\r\n\t */\r\n\tpublic assign(newData: Partial<T>): void {\r\n\t\tfor (const key of Object.keys(newData)) {\r\n\t\t\tthis.set(key as keyof T, newData[key]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a shallow copy of the object\r\n\t */\r\n\tpublic toObject(): T {\r\n\t\treturn { ...this.data };\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a simplified version of this datasource\r\n\t */\r\n\tpublic toDataSource(): DataSource<T> {\r\n\t\tconst stream = new DataSource(this.data);\r\n\t\tthis.listen((s) => {\r\n\t\t\tstream.update(this.data);\r\n\t\t});\r\n\t\treturn stream;\r\n\t}\r\n}\r\n"]}