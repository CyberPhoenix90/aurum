{"version":3,"file":"object_data_source.js","sourceRoot":"","sources":["../../src/stream/object_data_source.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataSource } from './data_source';\nimport { Callback } from '../utilities/common';\nimport { CancellationToken } from '../utilities/cancellation_token';\n\nexport interface ObjectChange<T, K extends keyof T> {\n\tkey: K;\n\toldValue: T[K];\n\tnewValue: T[K];\n}\n\nexport class ObjectDataSource<T> {\n\tprotected data: T;\n\tprivate listeners: Callback<ObjectChange<T, keyof T>>[];\n\tprivate listenersOnKey: Map<keyof T, Callback<ObjectChange<T, keyof T>>[]>;\n\n\tconstructor(initialData: T) {\n\t\tif (initialData) {\n\t\t\tthis.data = initialData;\n\t\t}\n\n\t\tthis.listeners = [];\n\t\tthis.listenersOnKey = new Map();\n\t}\n\n\tpublic pick(key: keyof T, cancellationToken?: CancellationToken): DataSource<T[typeof key]> {\n\t\tconst subDataSource: DataSource<T[typeof key]> = new DataSource(this.data?.[key]);\n\n\t\tthis.listenOnKey(\n\t\t\tkey,\n\t\t\t(v) => {\n\t\t\t\tsubDataSource.update(v.newValue);\n\t\t\t},\n\t\t\tcancellationToken\n\t\t);\n\n\t\treturn subDataSource;\n\t}\n\n\tpublic listen(callback: Callback<ObjectChange<T, keyof T>>, cancellationToken?: CancellationToken): Callback<void> {\n\t\tthis.listeners.push(callback);\n\t\tconst cancel = () => {\n\t\t\tconst index = this.listeners.indexOf(callback);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.listeners.splice(index, 1);\n\t\t\t}\n\t\t};\n\t\tcancellationToken?.addCancelable(() => {\n\t\t\tcancel();\n\t\t});\n\t\treturn cancel;\n\t}\n\n\t/**\n\t * Same as listenOnKey but will immediately call the callback with the current value first\n\t */\n\tpublic listenOnKeyAndRepeat<K extends keyof T>(key: K, callback: Callback<ObjectChange<T, K>>, cancellationToken?: CancellationToken): Callback<void> {\n\t\tcallback({\n\t\t\tkey,\n\t\t\tnewValue: this.data[key],\n\t\t\toldValue: undefined\n\t\t});\n\n\t\treturn this.listenOnKey(key, callback, cancellationToken);\n\t}\n\n\tpublic listenOnKey<K extends keyof T>(key: K, callback: Callback<ObjectChange<T, K>>, cancellationToken?: CancellationToken): Callback<void> {\n\t\tif (!this.listenersOnKey.has(key)) {\n\t\t\tthis.listenersOnKey.set(key, []);\n\t\t}\n\t\tconst listeners = this.listenersOnKey.get(key);\n\t\tlisteners.push(callback);\n\t\tconst cancel = () => {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index !== -1) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t};\n\t\tcancellationToken?.addCancelable(() => {\n\t\t\tcancel();\n\t\t});\n\t\treturn cancel;\n\t}\n\n\tpublic get<K extends keyof T>(key: K): T[K] {\n\t\treturn this.data[key];\n\t}\n\n\tpublic set<K extends keyof T>(key: K, value: T[K]): void {\n\t\tif (this.data[key] === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst old = this.data[key];\n\t\tthis.data[key] = value;\n\t\tfor (const l of this.listeners) {\n\t\t\tl({ oldValue: old, key, newValue: this.data[key] });\n\t\t}\n\t\tif (this.listenersOnKey.has(key)) {\n\t\t\tfor (const l of this.listenersOnKey.get(key)) {\n\t\t\t\tl({ oldValue: old, key, newValue: this.data[key] });\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic assign(newData: Partial<T>): void {\n\t\tfor (const key of Object.keys(newData)) {\n\t\t\tthis.set(key as keyof T, newData[key]);\n\t\t}\n\t}\n\n\tpublic toObject(): T {\n\t\treturn { ...this.data };\n\t}\n\n\tpublic toDataSource(): DataSource<T> {\n\t\tconst stream = new DataSource(this.data);\n\t\tthis.listen((s) => {\n\t\t\tstream.update(this.data);\n\t\t});\n\t\treturn stream;\n\t}\n}\n"]}