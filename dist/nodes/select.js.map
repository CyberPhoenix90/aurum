{"version":3,"file":"select.js","sourceRoot":"","sources":["../../src/nodes/select.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAqB,MAAM,iBAAiB,CAAC;AAalE,MAAM,OAAO,MAAO,SAAQ,YAAY;IAMvC,YAAY,KAAkB;QAC7B,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACvB,IAAI,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;QAE/C,IAAI,KAAK,CAAC,mBAAmB,EAAE;YAC9B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC;YACrD,KAAK,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;SACzH;QAED,IAAI,KAAK,CAAC,mBAAmB,EAAE;YAC9B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;gBACzC,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;SACH;IACF,CAAC;IAES,YAAY;QACrB,KAAK,CAAC,YAAY,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;SACzD;aAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;YAC/C,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAChD;IACF,CAAC;CACD","sourcesContent":["import { Callback, DataDrain } from '../utilities/common';\nimport { AurumElement, AurumElementProps } from './aurum_element';\nimport { DataSource } from '../stream/data_source';\n\nexport interface SelectProps extends AurumElementProps {\n\tonAttach?: Callback<Select>;\n\tonDetach?: Callback<Select>;\n\tonCreate?: Callback<Select>;\n\tonDispose?: Callback<Select>;\n\tonChange?: DataDrain<Event>;\n\tinitialSelection?: number;\n\tselectedIndexSource?: DataSource<number>;\n}\n\nexport class Select extends AurumElement {\n\tpublic readonly node: HTMLSelectElement;\n\tpublic onChange: DataSource<InputEvent>;\n\tprivate selectedIndexSource: DataSource<number>;\n\tprivate initialSelection: number;\n\n\tconstructor(props: SelectProps) {\n\t\tsuper(props, 'select');\n\t\tthis.createEventHandlers(['change'], props);\n\t\tthis.initialSelection = props.initialSelection;\n\n\t\tif (props.selectedIndexSource) {\n\t\t\tthis.selectedIndexSource = props.selectedIndexSource;\n\t\t\tprops.selectedIndexSource.unique().listenAndRepeat((value) => (this.node.selectedIndex = value), this.cancellationToken);\n\t\t}\n\n\t\tif (props.selectedIndexSource) {\n\t\t\tthis.node.addEventListener('change', () => {\n\t\t\t\tprops.selectedIndexSource.update(this.node.selectedIndex);\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected handleAttach() {\n\t\tsuper.handleAttach();\n\t\tif (this.selectedIndexSource) {\n\t\t\tthis.node.selectedIndex = this.selectedIndexSource.value;\n\t\t} else if (this.initialSelection !== undefined) {\n\t\t\tthis.node.selectedIndex = this.initialSelection;\n\t\t}\n\t}\n}\n"]}