{"version":3,"file":"switch.js","sourceRoot":"","sources":["../../../src/nodes/special/switch.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAA0C,MAAM,kBAAkB,CAAC;AAUxF,MAAM,OAAO,MAAoB,SAAQ,YAAY;IAMpD,YAAY,KAAqB,EAAE,QAAqB;QACvD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAL1B,gBAAW,GAAG,IAAI,CAAC;QAO1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;YAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC5B,CAAC;IAES,cAAc,CAAC,GAAW;;QACnC,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,EAAE;YACtC,OAAO,IAAI,CAAC,QAAQ,CAAC;SACrB;aAAM;YACN,YAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,uCAAI,IAAI,CAAC,QAAQ,EAAC;SAC9C;IACF,CAAC;IAES,YAAY,CAAC,IAAO;;QAC7B,IAAI,IAAI,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW,EAAE;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,OAAC,IAAI,0CAAE,QAAQ,GAAG,CAAC;YACvD,IAAI,QAAQ,EAAE;gBACb,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aACtB;SACD;IACF,CAAC;CACD","sourcesContent":["import { AurumElement, AurumElementProps, Template, ChildNode } from '../aurum_element';\nimport { MapLike } from '../../utilities/common';\nimport { DataSource } from '../../stream/data_source';\n\nexport interface SwitchProps<T = boolean> extends AurumElementProps {\n\tstate: DataSource<T>;\n\ttemplateMap?: MapLike<Template<void>>;\n\ttemplate?: Template<void>;\n}\n\nexport class Switch<T = boolean> extends AurumElement {\n\tprivate lastValue: T;\n\tprivate firstRender = true;\n\tpublic templateMap: MapLike<Template<void>>;\n\tpublic template: Template<void>;\n\n\tconstructor(props: SwitchProps<T>, children: ChildNode[]) {\n\t\tsuper(props, children, 'switch');\n\n\t\tthis.templateMap = props.templateMap;\n\t\tthis.renderSwitch(props.state.value);\n\t\tprops.state.listen((data) => {\n\t\t\tthis.renderSwitch(data);\n\t\t}, this.cancellationToken);\n\t}\n\n\tprotected selectTemplate(ref: string): Template<void> {\n\t\tif (ref === undefined || ref === null) {\n\t\t\treturn this.template;\n\t\t} else {\n\t\t\treturn this.templateMap[ref] ?? this.template;\n\t\t}\n\t}\n\n\tprotected renderSwitch(data: T): void {\n\t\tif (data !== this.lastValue || this.firstRender) {\n\t\t\tthis.lastValue = data;\n\t\t\tthis.firstRender = false;\n\t\t\tthis.clearChildren();\n\t\t\tconst template = this.selectTemplate(data?.toString());\n\t\t\tif (template) {\n\t\t\t\tconst result = template.generate();\n\t\t\t\tthis.addChild(result);\n\t\t\t}\n\t\t}\n\t}\n}\n"]}