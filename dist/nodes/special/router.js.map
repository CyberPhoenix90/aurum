{"version":3,"file":"router.js","sourceRoot":"","sources":["../../../src/nodes/special/router.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataSource } from '../../stream/data_source';\r\nimport { ChildNode, prerender } from './aurum_element';\r\n\r\nconst routeIdentity = Symbol('route');\r\n\r\nexport interface RouteInstance {\r\n\t[routeIdentity]: boolean;\r\n\thref: string;\r\n\tdefault: boolean;\r\n\tcontent: ChildNode[];\r\n}\r\n\r\nexport function AurumRouter(props, children) {\r\n\tchildren = children.map(prerender);\r\n\tif (children.some((c) => !c[routeIdentity])) {\r\n\t\tthrow new Error('Aurum Router only accepts Route and DefaultRoute instances as children');\r\n\t}\r\n\tif (children.filter((c) => c.default).length > 1) {\r\n\t\tthrow new Error('Too many default routes only 0 or 1 allowed');\r\n\t}\r\n\r\n\tconst urlDataSource = new DataSource(getUrlPath());\r\n\r\n\twindow.addEventListener('hashchange', () => {\r\n\t\turlDataSource.update(getUrlPath());\r\n\t});\r\n\r\n\treturn urlDataSource.unique().map((p) => selectRoute(p, children));\r\n}\r\n\r\nfunction getUrlPath(): string {\r\n\tconst hash = location.hash.substring(1);\r\n\tif (hash.includes('?')) {\r\n\t\treturn hash.substring(0, hash.indexOf('?'));\r\n\t} else if (hash.includes('#')) {\r\n\t\treturn hash.substring(0, hash.indexOf('#'));\r\n\t} else {\r\n\t\treturn hash;\r\n\t}\r\n}\r\n\r\nfunction selectRoute(url: string, routes: RouteInstance[]): ChildNode[] {\r\n\tif (url === undefined || url === null) {\r\n\t\treturn routes.find((r) => r.default)?.content;\r\n\t} else {\r\n\t\tif (routes.find((r) => r.href === url)) {\r\n\t\t\treturn routes.find((r) => r.href === url).content;\r\n\t\t} else {\r\n\t\t\tconst segments = url.split('/');\r\n\t\t\tsegments.pop();\r\n\t\t\twhile (segments.length) {\r\n\t\t\t\tconst path = segments.join('/');\r\n\t\t\t\tif (routes.find((r) => r.href === path)) {\r\n\t\t\t\t\treturn routes.find((r) => r.href === path).content;\r\n\t\t\t\t}\r\n\t\t\t\tsegments.pop();\r\n\t\t\t}\r\n\t\t\treturn routes.find((r) => r.default)?.content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface RouteProps {\r\n\thref: string;\r\n}\r\n\r\nexport function Route(props: RouteProps, children): RouteInstance {\r\n\treturn {\r\n\t\t[routeIdentity]: true,\r\n\t\tcontent: children,\r\n\t\tdefault: false,\r\n\t\thref: props.href\r\n\t};\r\n}\r\n\r\nexport function DefaultRoute(props: {}, children): RouteInstance {\r\n\treturn {\r\n\t\t[routeIdentity]: true,\r\n\t\tcontent: children,\r\n\t\tdefault: true,\r\n\t\thref: undefined\r\n\t};\r\n}\r\n"]}