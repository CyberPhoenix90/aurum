{"version":3,"file":"suspense.js","sourceRoot":"","sources":["../../../src/nodes/special/suspense.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAA0C,MAAM,kBAAkB,CAAC;AAOxF,MAAM,OAAO,QAAsB,SAAQ,YAAY;IAItD,YAAY,KAAuB,EAAE,QAAqB;QACzD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAEnC,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE;YAClC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import { AurumElement, AurumElementProps, Template, ChildNode } from '../aurum_element';\nimport { MapLike, Provider } from '../../utilities/common';\n\nexport interface SuspenseProps<T = boolean> extends AurumElementProps {\n\tloader: Provider<Promise<AurumElement>>;\n}\n\nexport class Suspense<T = boolean> extends AurumElement {\n\tpublic templateMap: MapLike<Template<void>>;\n\tpublic template: Template<void>;\n\n\tconstructor(props: SuspenseProps<T>, children: ChildNode[]) {\n\t\tsuper(props, children, 'suspense');\n\n\t\tprops.loader().then((newElement) => {\n\t\t\tthis.clearChildren();\n\t\t\tthis.addChild(newElement);\n\t\t});\n\t}\n}\n"]}