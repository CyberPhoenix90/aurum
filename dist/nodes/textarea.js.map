{"version":3,"file":"textarea.js","sourceRoot":"","sources":["../../src/nodes/textarea.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAgC,MAAM,yBAAyB,CAAC;AA6BrF;;GAEG;AACH,MAAM,cAAc,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;AAEhE;;GAEG;AACH,MAAM,aAAa,GAAG;IACrB,aAAa;IACb,UAAU;IACV,UAAU;IACV,MAAM;IACN,MAAM;IACN,cAAc;IACd,WAAW;IACX,KAAK;IACL,WAAW;IACX,KAAK;IACL,WAAW;IACX,UAAU;IACV,MAAM;CACN,CAAC;AAEF;;GAEG;AACH,MAAM,OAAO,QAAS,SAAQ,YAAY;IAGzC,YAAY,KAAoB,EAAE,QAAqB;;QACtD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QACnC,IAAI,KAAK,KAAK,IAAI,EAAE;YACnB,IAAI,KAAK,CAAC,gBAAgB,EAAE;gBAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,eAAG,KAAK,CAAC,YAAY,mCAAI,KAAK,CAAC,gBAAgB,CAAC,KAAK,mCAAI,EAAE,CAAC;gBAC3E,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;aAC7E;iBAAM;gBACN,IAAI,CAAC,IAAI,CAAC,KAAK,SAAG,KAAK,CAAC,YAAY,mCAAI,EAAE,CAAC;aAC3C;YACD,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;YAEhD,IAAI,KAAK,CAAC,gBAAgB,EAAE;gBAC3B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;oBACxC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;aACH;SACD;IACF,CAAC;CACD","sourcesContent":["import { AurumElement, AurumElementProps, ChildNode } from './special/aurum_element';\r\nimport { DataSource } from '../stream/data_source';\r\nimport { DataDrain, Callback, AttributeValue } from '../utilities/common';\r\n\r\nexport interface TextAreaProps extends AurumElementProps {\r\n\tonAttach?: Callback<HTMLTextAreaElement>;\r\n\tonDetach?: Callback<HTMLTextAreaElement>;\r\n\tonCreate?: Callback<HTMLTextAreaElement>;\r\n\r\n\tplaceholder?: AttributeValue;\r\n\treadonly?: AttributeValue;\r\n\tdisabled?: AttributeValue;\r\n\tonChange?: DataDrain<InputEvent>;\r\n\tonInput?: DataDrain<InputEvent>;\r\n\tinputValueSource?: DataSource<string>;\r\n\tinitialValue?: string;\r\n\r\n\trows?: AttributeValue;\r\n\twrap?: AttributeValue;\r\n\tautocomplete?: AttributeValue;\r\n\tautofocus?: AttributeValue;\r\n\tmax?: AttributeValue;\r\n\tmaxLength?: AttributeValue;\r\n\tmin?: AttributeValue;\r\n\tminLength?: AttributeValue;\r\n\trequired?: AttributeValue;\r\n\ttype?: AttributeValue;\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nconst textAreaEvents = { input: 'onInput', change: 'onChange' };\r\n\r\n/**\r\n * @internal\r\n */\r\nconst textAreaProps = [\r\n\t'placeholder',\r\n\t'readonly',\r\n\t'disabled',\r\n\t'rows',\r\n\t'wrap',\r\n\t'autocomplete',\r\n\t'autofocus',\r\n\t'max',\r\n\t'maxLength',\r\n\t'min',\r\n\t'minLength',\r\n\t'required',\r\n\t'type'\r\n];\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class TextArea extends AurumElement {\r\n\tpublic node: HTMLTextAreaElement;\r\n\r\n\tconstructor(props: TextAreaProps, children: ChildNode[]) {\r\n\t\tsuper(props, children, 'textArea');\r\n\t\tif (props !== null) {\r\n\t\t\tif (props.inputValueSource) {\r\n\t\t\t\tthis.node.value = props.initialValue ?? props.inputValueSource.value ?? '';\r\n\t\t\t\tprops.inputValueSource.unique().listen((value) => (this.node.value = value));\r\n\t\t\t} else {\r\n\t\t\t\tthis.node.value = props.initialValue ?? '';\r\n\t\t\t}\r\n\t\t\tthis.bindProps(textAreaProps, props);\r\n\t\t\tthis.createEventHandlers(textAreaEvents, props);\r\n\r\n\t\t\tif (props.inputValueSource) {\r\n\t\t\t\tthis.node.addEventListener('input', () => {\r\n\t\t\t\t\tprops.inputValueSource.update(this.node.value);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}