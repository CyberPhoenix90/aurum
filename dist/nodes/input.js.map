{"version":3,"file":"input.js","sourceRoot":"src/","sources":["nodes/input.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAmC,MAAM,iBAAiB,CAAC;AAYhF,MAAM,OAAO,KAAM,SAAQ,YAAY;IAQtC,YAAY,KAAiB;QAC5B,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QACtB,IAAI,KAAK,CAAC,gBAAgB,EAAE;YAC3B,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC5F;QACD,IAAI,KAAK,CAAC,WAAW,EAAE;YACtB,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;SACrE;QAED,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;CACD","sourcesContent":["import { AurumElement, AurumElementProps, StringSource } from './aurum_element';\nimport { DataSource } from '../stream/data_source';\nimport { DataDrain } from '../utilities/common';\n\nexport interface InputProps extends AurumElementProps {\n\tonAttach?: (node: Input) => void;\n\tplaceholder?: StringSource;\n\tonChange?: DataDrain<InputEvent>;\n\tonInput?: DataDrain<InputEvent>;\n\tinputValueSource?: DataSource<string>;\n}\n\nexport class Input extends AurumElement {\n\tpublic node: HTMLInputElement;\n\n\tpublic onChange: DataSource<InputEvent>;\n\tpublic onInput: DataSource<InputEvent>;\n\tpublic onFocus: DataSource<FocusEvent>;\n\tpublic onBlur: DataSource<FocusEvent>;\n\n\tconstructor(props: InputProps) {\n\t\tsuper(props, 'input');\n\t\tif (props.inputValueSource) {\n\t\t\tprops.inputValueSource.listen((value) => (this.node.value = value), this.cancellationToken);\n\t\t}\n\t\tif (props.placeholder) {\n\t\t\tthis.assignStringSourceToAttribute(props.placeholder, 'placeholder');\n\t\t}\n\n\t\tthis.createEventHandlers(['input', 'change', 'focus', 'blur'], props);\n\t}\n}\n"]}