{"version":3,"file":"input.js","sourceRoot":"","sources":["../../src/nodes/input.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAgC,MAAM,yBAAyB,CAAC;AAwCrF,MAAM,WAAW,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;AAK7D,MAAM,UAAU,GAAG;IAClB,aAAa;IACb,UAAU;IACV,UAAU;IACV,QAAQ;IACR,KAAK;IACL,cAAc;IACd,WAAW;IACX,SAAS;IACT,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,YAAY;IACZ,gBAAgB;IAChB,YAAY;IACZ,KAAK;IACL,WAAW;IACX,KAAK;IACL,WAAW;IACX,SAAS;IACT,UAAU;IACV,UAAU;IACV,MAAM;CACN,CAAC;AAKF,MAAM,OAAO,KAAM,SAAQ,YAAY;IAGtC,YAAY,KAAiB,EAAE,QAAqB;;QACnD,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAChC,IAAI,KAAK,KAAK,IAAI,EAAE;YACnB,IAAI,KAAK,CAAC,gBAAgB,EAAE;gBAC3B,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;aACtF;iBAAM;gBACN,IAAI,CAAC,IAAI,CAAC,KAAK,SAAG,KAAK,CAAC,YAAY,mCAAI,EAAE,CAAC;aAC3C;YACD,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;YAE7C,IAAI,KAAK,CAAC,gBAAgB,EAAE;gBAC3B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;oBACxC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;aACH;SACD;IACF,CAAC;CACD","sourcesContent":["import { AurumElement, AurumElementProps, ChildNode } from './special/aurum_element';\nimport { DataSource } from '../stream/data_source';\nimport { DataDrain, StringSource, Callback } from '../utilities/common';\n\nexport interface InputProps extends AurumElementProps {\n\tonAttach?: Callback<HTMLInputElement>;\n\tonDetach?: Callback<HTMLInputElement>;\n\tonCreate?: Callback<HTMLInputElement>;\n\n\tplaceholder?: StringSource;\n\treadonly?: StringSource;\n\tdisabled?: StringSource;\n\tonChange?: DataDrain<InputEvent>;\n\tonInput?: DataDrain<InputEvent>;\n\tinputValueSource?: DataSource<string>;\n\tinitialValue?: string;\n\taccept?: StringSource;\n\talt?: StringSource;\n\tautocomplete?: StringSource;\n\tautofocus?: StringSource;\n\tchecked?: StringSource;\n\tdefaultChecked?: StringSource;\n\tformAction?: StringSource;\n\tformEnctype?: StringSource;\n\tformMethod?: StringSource;\n\tformNoValidate?: StringSource;\n\tformTarget?: StringSource;\n\tmax?: StringSource;\n\tmaxLength?: StringSource;\n\tmin?: StringSource;\n\tminLength?: StringSource;\n\tpattern?: StringSource;\n\tmultiple?: StringSource;\n\trequired?: StringSource;\n\ttype?: StringSource;\n}\n\n/**\n * @internal\n */\nconst inputEvents = { input: 'onInput', change: 'onChange' };\n\n/**\n * @internal\n */\nconst inputProps = [\n\t'placeholder',\n\t'readonly',\n\t'disabled',\n\t'accept',\n\t'alt',\n\t'autocomplete',\n\t'autofocus',\n\t'checked',\n\t'defaultChecked',\n\t'formAction',\n\t'formEnctype',\n\t'formMethod',\n\t'formNoValidate',\n\t'formTarget',\n\t'max',\n\t'maxLength',\n\t'min',\n\t'minLength',\n\t'pattern',\n\t'multiple',\n\t'required',\n\t'type'\n];\n\n/**\n * @internal\n */\nexport class Input extends AurumElement {\n\tpublic node: HTMLInputElement;\n\n\tconstructor(props: InputProps, children: ChildNode[]) {\n\t\tsuper(props, children, 'input');\n\t\tif (props !== null) {\n\t\t\tif (props.inputValueSource) {\n\t\t\t\tprops.inputValueSource.unique().listenAndRepeat((value) => (this.node.value = value));\n\t\t\t} else {\n\t\t\t\tthis.node.value = props.initialValue ?? '';\n\t\t\t}\n\t\t\tthis.bindProps(inputProps, props);\n\t\t\tthis.createEventHandlers(inputEvents, props);\n\n\t\t\tif (props.inputValueSource) {\n\t\t\t\tthis.node.addEventListener('input', () => {\n\t\t\t\t\tprops.inputValueSource.update(this.node.value);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n"]}